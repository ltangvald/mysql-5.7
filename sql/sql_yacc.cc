/* A Bison parser, made by GNU Bison 2.7.  */

/* Bison implementation for Yacc-like parsers in C
   
      Copyright (C) 1984, 1989-1990, 2000-2012 Free Software Foundation, Inc.
   
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.
   
   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.7"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yylval          MYSQLlval
#define yychar          MYSQLchar
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs
#define yylloc          MYSQLlloc

/* Copy the first part of user declarations.  */
/* Line 371 of yacc.c  */
#line 24 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "partition_info.h"                   /* partition_info */
#include "sql_partition.h"                    /* mem_alloc_error */
#include "auth_common.h"                      /* *_ACL */
#include "password.h"       /* my_make_scrambled_password_323, my_make_scrambled_password */
#include "sql_class.h"      /* Key_part_spec, enum_filetype */
#include "rpl_slave.h"
#include "rpl_msr.h"       /* multisource replication */
#include "rpl_filter.h"
#include "log_event.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_instr.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_servers.h"
#include "event_parse_data.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "opt_explain_traditional.h"
#include "opt_explain_json.h"
#include "rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "sql_show_status.h"                 // build_show_session_status, ...
#include "parse_location.h"
#include "parse_tree_helpers.h"
#include "lex_token.h"
#include "item_cmpfunc.h"
#include "item_geofunc.h"
#include "item_json_func.h"
#include "sql_plugin.h"                      // plugin_is_ready
#include "parse_tree_hints.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, (char*) (A));      \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(YYTHD);\
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    my_syntax_error(ER(ER_SYNTAX_ERROR));\
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYTHD->mem_root)


/**
  Parse_tree_node::contextualize_() function call wrapper
*/
#define TMP_CONTEXTUALIZE(x)        \
  do                                \
  {                                 \
    Parse_context pc(YYTHD, Select);\
    if ((x)->contextualize_(&pc))   \
      MYSQL_YYABORT;                \
  } while(0)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    Parse_context pc(YYTHD, Select);                    \
    if (YYTHD->is_error() || (x)->contextualize(&pc))   \
      MYSQL_YYABORT;                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                  \
  do                                                   \
  {                                                    \
    Parse_context pc(YYTHD, Select);                   \
    if (YYTHD->is_error() || (x)->itemize(&pc, (y)))   \
      MYSQL_YYABORT;                                   \
  } while(0)

/**
  PT_statement::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                     \
  do                                                    \
  {                                                     \
    if (YYTHD->is_error())                              \
      MYSQL_YYABORT;                                    \
    Lex->m_sql_cmd= (x)->make_cmd(YYTHD);               \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use my_syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(YYLTYPE *, THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER(ER_SYNTAX_ERROR);
  my_syntax_error(s);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(THD *thd, const LEX_STRING *name)
{
  if (find_native_function_builder(thd, *name))
    return true;

  if (is_lex_native_function(name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_STR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static bool add_create_index_prepare (LEX *lex, Table_ident *table)
{
  lex->sql_command= SQLCOM_CREATE_INDEX;
  if (!lex->current_select()->add_table_to_list(lex->thd, table, NULL,
                                              TL_OPTION_UPDATING,
                                              TL_READ_NO_INSERT,
                                              MDL_SHARED_UPGRADABLE))
    return TRUE;
  lex->alter_info.reset();
  lex->alter_info.flags= Alter_info::ALTER_ADD_INDEX;
  lex->col_list.empty();
  lex->change= NullS;
  return FALSE;
}

static bool add_create_index (LEX *lex, keytype type,
                              const LEX_STRING &name,
                              KEY_CREATE_INFO *info= NULL, bool generated= 0)
{
  Key *key;
  key= new Key(type, name, info ? info : &lex->key_create_info, generated,
               lex->col_list);
  if (key == NULL)
    return TRUE;

  lex->alter_info.key_list.push_back(key);
  lex->col_list.empty();
  return FALSE;
}

/**
  Compare a LEX_USER against the current user as defined by the exact user and
  host used during authentication.

  @param user A pointer to a user which needs to be matched against the
              current.

  @see SET PASSWORD rules

  @retval true The specified user is the authorized user
  @retval false The user doesn't match
*/

bool match_authorized_user(Security_context *ctx, LEX_USER *user)
{
  if(user->user.str && my_strcasecmp(system_charset_info,
                                     ctx->priv_user().str,
                                     user->user.str) == 0)
  {
    /*
      users match; let's compare hosts.
      1. first compare with the host we actually authorized,
      2. then see if we match the host mask of the priv_host
    */
    if (user->host.str && my_strcasecmp(system_charset_info,
                                        user->host.str,
                                        ctx->priv_host().str) == 0)
    {
      /* specified user exactly match the authorized user */
      return true;
    }
  }
  return false;
}

static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "parse_tree_nodes.h"
#include "parse_tree_items.h"


/* Line 371 of yacc.c  */
#line 503 "/export/home/pb2/build/sb_0-17781452-1454369753.15/dist_GPL/sql/sql_yacc.cc"

# ifndef YY_NULL
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULL nullptr
#  else
#   define YY_NULL 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_0_17781452_1454369753_15_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_0_17781452_1454369753_15_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ABORT_SYM = 258,
     ACCESSIBLE_SYM = 259,
     ACCOUNT_SYM = 260,
     ACTION = 261,
     ADD = 262,
     ADDDATE_SYM = 263,
     AFTER_SYM = 264,
     AGAINST = 265,
     AGGREGATE_SYM = 266,
     ALGORITHM_SYM = 267,
     ALL = 268,
     ALTER = 269,
     ALWAYS_SYM = 270,
     ANALYSE_SYM = 271,
     ANALYZE_SYM = 272,
     AND_AND_SYM = 273,
     AND_SYM = 274,
     ANY_SYM = 275,
     AS = 276,
     ASC = 277,
     ASCII_SYM = 278,
     ASENSITIVE_SYM = 279,
     AT_SYM = 280,
     AUTOEXTEND_SIZE_SYM = 281,
     AUTO_INC = 282,
     AVG_ROW_LENGTH = 283,
     AVG_SYM = 284,
     BACKUP_SYM = 285,
     BEFORE_SYM = 286,
     BEGIN_SYM = 287,
     BETWEEN_SYM = 288,
     BIGINT = 289,
     BINARY = 290,
     BINLOG_SYM = 291,
     BIN_NUM = 292,
     BIT_AND = 293,
     BIT_OR = 294,
     BIT_SYM = 295,
     BIT_XOR = 296,
     BLOB_SYM = 297,
     BLOCK_SYM = 298,
     BOOLEAN_SYM = 299,
     BOOL_SYM = 300,
     BOTH = 301,
     BTREE_SYM = 302,
     BY = 303,
     BYTE_SYM = 304,
     CACHE_SYM = 305,
     CALL_SYM = 306,
     CASCADE = 307,
     CASCADED = 308,
     CASE_SYM = 309,
     CAST_SYM = 310,
     CATALOG_NAME_SYM = 311,
     CHAIN_SYM = 312,
     CHANGE = 313,
     CHANGED = 314,
     CHANNEL_SYM = 315,
     CHARSET = 316,
     CHAR_SYM = 317,
     CHECKSUM_SYM = 318,
     CHECK_SYM = 319,
     CIPHER_SYM = 320,
     CLASS_ORIGIN_SYM = 321,
     CLIENT_SYM = 322,
     CLOSE_SYM = 323,
     COALESCE = 324,
     CODE_SYM = 325,
     COLLATE_SYM = 326,
     COLLATION_SYM = 327,
     COLUMNS = 328,
     COLUMN_SYM = 329,
     COLUMN_FORMAT_SYM = 330,
     COLUMN_NAME_SYM = 331,
     COMMENT_SYM = 332,
     COMMITTED_SYM = 333,
     COMMIT_SYM = 334,
     COMPACT_SYM = 335,
     COMPLETION_SYM = 336,
     COMPRESSED_SYM = 337,
     COMPRESSION_SYM = 338,
     ENCRYPTION_SYM = 339,
     CONCURRENT = 340,
     CONDITION_SYM = 341,
     CONNECTION_SYM = 342,
     CONSISTENT_SYM = 343,
     CONSTRAINT = 344,
     CONSTRAINT_CATALOG_SYM = 345,
     CONSTRAINT_NAME_SYM = 346,
     CONSTRAINT_SCHEMA_SYM = 347,
     CONTAINS_SYM = 348,
     CONTEXT_SYM = 349,
     CONTINUE_SYM = 350,
     CONVERT_SYM = 351,
     COUNT_SYM = 352,
     CPU_SYM = 353,
     CREATE = 354,
     CROSS = 355,
     CUBE_SYM = 356,
     CURDATE = 357,
     CURRENT_SYM = 358,
     CURRENT_USER = 359,
     CURSOR_SYM = 360,
     CURSOR_NAME_SYM = 361,
     CURTIME = 362,
     DATABASE = 363,
     DATABASES = 364,
     DATAFILE_SYM = 365,
     DATA_SYM = 366,
     DATETIME = 367,
     DATE_ADD_INTERVAL = 368,
     DATE_SUB_INTERVAL = 369,
     DATE_SYM = 370,
     DAY_HOUR_SYM = 371,
     DAY_MICROSECOND_SYM = 372,
     DAY_MINUTE_SYM = 373,
     DAY_SECOND_SYM = 374,
     DAY_SYM = 375,
     DEALLOCATE_SYM = 376,
     DECIMAL_NUM = 377,
     DECIMAL_SYM = 378,
     DECLARE_SYM = 379,
     DEFAULT = 380,
     DEFAULT_AUTH_SYM = 381,
     DEFINER_SYM = 382,
     DELAYED_SYM = 383,
     DELAY_KEY_WRITE_SYM = 384,
     DELETE_SYM = 385,
     DESC = 386,
     DESCRIBE = 387,
     DES_KEY_FILE = 388,
     DETERMINISTIC_SYM = 389,
     DIAGNOSTICS_SYM = 390,
     DIRECTORY_SYM = 391,
     DISABLE_SYM = 392,
     DISCARD = 393,
     DISK_SYM = 394,
     DISTINCT = 395,
     DIV_SYM = 396,
     DOUBLE_SYM = 397,
     DO_SYM = 398,
     DROP = 399,
     DUAL_SYM = 400,
     DUMPFILE = 401,
     DUPLICATE_SYM = 402,
     DYNAMIC_SYM = 403,
     EACH_SYM = 404,
     ELSE = 405,
     ELSEIF_SYM = 406,
     ENABLE_SYM = 407,
     ENCLOSED = 408,
     END = 409,
     ENDS_SYM = 410,
     END_OF_INPUT = 411,
     ENGINES_SYM = 412,
     ENGINE_SYM = 413,
     ENUM = 414,
     EQ = 415,
     EQUAL_SYM = 416,
     ERROR_SYM = 417,
     ERRORS = 418,
     ESCAPED = 419,
     ESCAPE_SYM = 420,
     EVENTS_SYM = 421,
     EVENT_SYM = 422,
     EVERY_SYM = 423,
     EXCHANGE_SYM = 424,
     EXECUTE_SYM = 425,
     EXISTS = 426,
     EXIT_SYM = 427,
     EXPANSION_SYM = 428,
     EXPIRE_SYM = 429,
     EXPORT_SYM = 430,
     EXTENDED_SYM = 431,
     EXTENT_SIZE_SYM = 432,
     EXTRACT_SYM = 433,
     FALSE_SYM = 434,
     FAST_SYM = 435,
     FAULTS_SYM = 436,
     FETCH_SYM = 437,
     FILE_SYM = 438,
     FILE_BLOCK_SIZE_SYM = 439,
     FILTER_SYM = 440,
     FIRST_SYM = 441,
     FIXED_SYM = 442,
     FLOAT_NUM = 443,
     FLOAT_SYM = 444,
     FLUSH_SYM = 445,
     FOLLOWS_SYM = 446,
     FORCE_SYM = 447,
     FOREIGN = 448,
     FOR_SYM = 449,
     FORMAT_SYM = 450,
     FOUND_SYM = 451,
     FROM = 452,
     FULL = 453,
     FULLTEXT_SYM = 454,
     FUNCTION_SYM = 455,
     GE = 456,
     GENERAL = 457,
     GENERATED = 458,
     GROUP_REPLICATION = 459,
     GEOMETRYCOLLECTION = 460,
     GEOMETRY_SYM = 461,
     GET_FORMAT = 462,
     GET_SYM = 463,
     GLOBAL_SYM = 464,
     GRANT = 465,
     GRANTS = 466,
     GROUP_SYM = 467,
     GROUP_CONCAT_SYM = 468,
     GT_SYM = 469,
     HANDLER_SYM = 470,
     HASH_SYM = 471,
     HAVING = 472,
     HELP_SYM = 473,
     HEX_NUM = 474,
     HIGH_PRIORITY = 475,
     HOST_SYM = 476,
     HOSTS_SYM = 477,
     HOUR_MICROSECOND_SYM = 478,
     HOUR_MINUTE_SYM = 479,
     HOUR_SECOND_SYM = 480,
     HOUR_SYM = 481,
     IDENT = 482,
     IDENTIFIED_SYM = 483,
     IDENT_QUOTED = 484,
     IF = 485,
     IGNORE_SYM = 486,
     IGNORE_SERVER_IDS_SYM = 487,
     IMPORT = 488,
     INDEXES = 489,
     INDEX_SYM = 490,
     INFILE = 491,
     INITIAL_SIZE_SYM = 492,
     INNER_SYM = 493,
     INOUT_SYM = 494,
     INSENSITIVE_SYM = 495,
     INSERT = 496,
     INSERT_METHOD = 497,
     INSTANCE_SYM = 498,
     INSTALL_SYM = 499,
     INTERVAL_SYM = 500,
     INTO = 501,
     INT_SYM = 502,
     INVOKER_SYM = 503,
     IN_SYM = 504,
     IO_AFTER_GTIDS = 505,
     IO_BEFORE_GTIDS = 506,
     IO_SYM = 507,
     IPC_SYM = 508,
     IS = 509,
     ISOLATION = 510,
     ISSUER_SYM = 511,
     ITERATE_SYM = 512,
     JOIN_SYM = 513,
     JSON_SEPARATOR_SYM = 514,
     JSON_SYM = 515,
     KEYS = 516,
     KEY_BLOCK_SIZE = 517,
     KEY_SYM = 518,
     KILL_SYM = 519,
     LANGUAGE_SYM = 520,
     LAST_SYM = 521,
     LE = 522,
     LEADING = 523,
     LEAVES = 524,
     LEAVE_SYM = 525,
     LEFT = 526,
     LESS_SYM = 527,
     LEVEL_SYM = 528,
     LEX_HOSTNAME = 529,
     LIKE = 530,
     LIMIT = 531,
     LINEAR_SYM = 532,
     LINES = 533,
     LINESTRING = 534,
     LIST_SYM = 535,
     LOAD = 536,
     LOCAL_SYM = 537,
     LOCATOR_SYM = 538,
     LOCKS_SYM = 539,
     LOCK_SYM = 540,
     LOGFILE_SYM = 541,
     LOGS_SYM = 542,
     LONGBLOB = 543,
     LONGTEXT = 544,
     LONG_NUM = 545,
     LONG_SYM = 546,
     LOOP_SYM = 547,
     LOW_PRIORITY = 548,
     LT = 549,
     MASTER_AUTO_POSITION_SYM = 550,
     MASTER_BIND_SYM = 551,
     MASTER_CONNECT_RETRY_SYM = 552,
     MASTER_DELAY_SYM = 553,
     MASTER_HOST_SYM = 554,
     MASTER_LOG_FILE_SYM = 555,
     MASTER_LOG_POS_SYM = 556,
     MASTER_PASSWORD_SYM = 557,
     MASTER_PORT_SYM = 558,
     MASTER_RETRY_COUNT_SYM = 559,
     MASTER_SERVER_ID_SYM = 560,
     MASTER_SSL_CAPATH_SYM = 561,
     MASTER_TLS_VERSION_SYM = 562,
     MASTER_SSL_CA_SYM = 563,
     MASTER_SSL_CERT_SYM = 564,
     MASTER_SSL_CIPHER_SYM = 565,
     MASTER_SSL_CRL_SYM = 566,
     MASTER_SSL_CRLPATH_SYM = 567,
     MASTER_SSL_KEY_SYM = 568,
     MASTER_SSL_SYM = 569,
     MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
     MASTER_SYM = 571,
     MASTER_USER_SYM = 572,
     MASTER_HEARTBEAT_PERIOD_SYM = 573,
     MATCH = 574,
     MAX_CONNECTIONS_PER_HOUR = 575,
     MAX_QUERIES_PER_HOUR = 576,
     MAX_ROWS = 577,
     MAX_SIZE_SYM = 578,
     MAX_SYM = 579,
     MAX_UPDATES_PER_HOUR = 580,
     MAX_USER_CONNECTIONS_SYM = 581,
     MAX_VALUE_SYM = 582,
     MEDIUMBLOB = 583,
     MEDIUMINT = 584,
     MEDIUMTEXT = 585,
     MEDIUM_SYM = 586,
     MEMORY_SYM = 587,
     MERGE_SYM = 588,
     MESSAGE_TEXT_SYM = 589,
     MICROSECOND_SYM = 590,
     MIGRATE_SYM = 591,
     MINUTE_MICROSECOND_SYM = 592,
     MINUTE_SECOND_SYM = 593,
     MINUTE_SYM = 594,
     MIN_ROWS = 595,
     MIN_SYM = 596,
     MODE_SYM = 597,
     MODIFIES_SYM = 598,
     MODIFY_SYM = 599,
     MOD_SYM = 600,
     MONTH_SYM = 601,
     MULTILINESTRING = 602,
     MULTIPOINT = 603,
     MULTIPOLYGON = 604,
     MUTEX_SYM = 605,
     MYSQL_ERRNO_SYM = 606,
     NAMES_SYM = 607,
     NAME_SYM = 608,
     NATIONAL_SYM = 609,
     NATURAL = 610,
     NCHAR_STRING = 611,
     NCHAR_SYM = 612,
     NDBCLUSTER_SYM = 613,
     NE = 614,
     NEG = 615,
     NEVER_SYM = 616,
     NEW_SYM = 617,
     NEXT_SYM = 618,
     NODEGROUP_SYM = 619,
     NONE_SYM = 620,
     NOT2_SYM = 621,
     NOT_SYM = 622,
     NOW_SYM = 623,
     NO_SYM = 624,
     NO_WAIT_SYM = 625,
     NO_WRITE_TO_BINLOG = 626,
     NULL_SYM = 627,
     NUM = 628,
     NUMBER_SYM = 629,
     NUMERIC_SYM = 630,
     NVARCHAR_SYM = 631,
     OFFSET_SYM = 632,
     ON = 633,
     ONE_SYM = 634,
     ONLY_SYM = 635,
     OPEN_SYM = 636,
     OPTIMIZE = 637,
     OPTIMIZER_COSTS_SYM = 638,
     OPTIONS_SYM = 639,
     OPTION = 640,
     OPTIONALLY = 641,
     OR2_SYM = 642,
     ORDER_SYM = 643,
     OR_OR_SYM = 644,
     OR_SYM = 645,
     OUTER = 646,
     OUTFILE = 647,
     OUT_SYM = 648,
     OWNER_SYM = 649,
     PACK_KEYS_SYM = 650,
     PAGE_SYM = 651,
     PARAM_MARKER = 652,
     PARSER_SYM = 653,
     PARSE_GCOL_EXPR_SYM = 654,
     PARTIAL = 655,
     PARTITION_SYM = 656,
     PARTITIONS_SYM = 657,
     PARTITIONING_SYM = 658,
     PASSWORD = 659,
     PHASE_SYM = 660,
     PLUGIN_DIR_SYM = 661,
     PLUGIN_SYM = 662,
     PLUGINS_SYM = 663,
     POINT_SYM = 664,
     POLYGON = 665,
     PORT_SYM = 666,
     POSITION_SYM = 667,
     PRECEDES_SYM = 668,
     PRECISION = 669,
     PREPARE_SYM = 670,
     PRESERVE_SYM = 671,
     PREV_SYM = 672,
     PRIMARY_SYM = 673,
     PRIVILEGES = 674,
     PROCEDURE_SYM = 675,
     PROCESS = 676,
     PROCESSLIST_SYM = 677,
     PROFILE_SYM = 678,
     PROFILES_SYM = 679,
     PROXY_SYM = 680,
     PURGE = 681,
     QUARTER_SYM = 682,
     QUERY_SYM = 683,
     QUICK = 684,
     RANGE_SYM = 685,
     READS_SYM = 686,
     READ_ONLY_SYM = 687,
     READ_SYM = 688,
     READ_WRITE_SYM = 689,
     REAL = 690,
     REBUILD_SYM = 691,
     RECOVER_SYM = 692,
     REDOFILE_SYM = 693,
     REDO_BUFFER_SIZE_SYM = 694,
     REDUNDANT_SYM = 695,
     REFERENCES = 696,
     REGEXP = 697,
     RELAY = 698,
     RELAYLOG_SYM = 699,
     RELAY_LOG_FILE_SYM = 700,
     RELAY_LOG_POS_SYM = 701,
     RELAY_THREAD = 702,
     RELEASE_SYM = 703,
     RELOAD = 704,
     REMOVE_SYM = 705,
     RENAME = 706,
     REORGANIZE_SYM = 707,
     REPAIR = 708,
     REPEATABLE_SYM = 709,
     REPEAT_SYM = 710,
     REPLACE = 711,
     REPLICATION = 712,
     REPLICATE_DO_DB = 713,
     REPLICATE_IGNORE_DB = 714,
     REPLICATE_DO_TABLE = 715,
     REPLICATE_IGNORE_TABLE = 716,
     REPLICATE_WILD_DO_TABLE = 717,
     REPLICATE_WILD_IGNORE_TABLE = 718,
     REPLICATE_REWRITE_DB = 719,
     REQUIRE_SYM = 720,
     RESET_SYM = 721,
     RESIGNAL_SYM = 722,
     RESOURCES = 723,
     RESTORE_SYM = 724,
     RESTRICT = 725,
     RESUME_SYM = 726,
     RETURNED_SQLSTATE_SYM = 727,
     RETURNS_SYM = 728,
     RETURN_SYM = 729,
     REVERSE_SYM = 730,
     REVOKE = 731,
     RIGHT = 732,
     ROLLBACK_SYM = 733,
     ROLLUP_SYM = 734,
     ROTATE_SYM = 735,
     ROUTINE_SYM = 736,
     ROWS_SYM = 737,
     ROW_FORMAT_SYM = 738,
     ROW_SYM = 739,
     ROW_COUNT_SYM = 740,
     RTREE_SYM = 741,
     SAVEPOINT_SYM = 742,
     SCHEDULE_SYM = 743,
     SCHEMA_NAME_SYM = 744,
     SECOND_MICROSECOND_SYM = 745,
     SECOND_SYM = 746,
     SECURITY_SYM = 747,
     SELECT_SYM = 748,
     SENSITIVE_SYM = 749,
     SEPARATOR_SYM = 750,
     SERIALIZABLE_SYM = 751,
     SERIAL_SYM = 752,
     SESSION_SYM = 753,
     SERVER_SYM = 754,
     SERVER_OPTIONS = 755,
     SET = 756,
     SET_VAR = 757,
     SHARE_SYM = 758,
     SHIFT_LEFT = 759,
     SHIFT_RIGHT = 760,
     SHOW = 761,
     SHUTDOWN = 762,
     SIGNAL_SYM = 763,
     SIGNED_SYM = 764,
     SIMPLE_SYM = 765,
     SLAVE = 766,
     SLOW = 767,
     SMALLINT = 768,
     SNAPSHOT_SYM = 769,
     SOCKET_SYM = 770,
     SONAME_SYM = 771,
     SOUNDS_SYM = 772,
     SOURCE_SYM = 773,
     SPATIAL_SYM = 774,
     SPECIFIC_SYM = 775,
     SQLEXCEPTION_SYM = 776,
     SQLSTATE_SYM = 777,
     SQLWARNING_SYM = 778,
     SQL_AFTER_GTIDS = 779,
     SQL_AFTER_MTS_GAPS = 780,
     SQL_BEFORE_GTIDS = 781,
     SQL_BIG_RESULT = 782,
     SQL_BUFFER_RESULT = 783,
     SQL_CACHE_SYM = 784,
     SQL_CALC_FOUND_ROWS = 785,
     SQL_NO_CACHE_SYM = 786,
     SQL_SMALL_RESULT = 787,
     SQL_SYM = 788,
     SQL_THREAD = 789,
     SSL_SYM = 790,
     STACKED_SYM = 791,
     STARTING = 792,
     STARTS_SYM = 793,
     START_SYM = 794,
     STATS_AUTO_RECALC_SYM = 795,
     STATS_PERSISTENT_SYM = 796,
     STATS_SAMPLE_PAGES_SYM = 797,
     STATUS_SYM = 798,
     STDDEV_SAMP_SYM = 799,
     STD_SYM = 800,
     STOP_SYM = 801,
     STORAGE_SYM = 802,
     STORED_SYM = 803,
     STRAIGHT_JOIN = 804,
     STRING_SYM = 805,
     SUBCLASS_ORIGIN_SYM = 806,
     SUBDATE_SYM = 807,
     SUBJECT_SYM = 808,
     SUBPARTITIONS_SYM = 809,
     SUBPARTITION_SYM = 810,
     SUBSTRING = 811,
     SUM_SYM = 812,
     SUPER_SYM = 813,
     SUSPEND_SYM = 814,
     SWAPS_SYM = 815,
     SWITCHES_SYM = 816,
     SYSDATE = 817,
     TABLES = 818,
     TABLESPACE_SYM = 819,
     TABLE_REF_PRIORITY = 820,
     TABLE_SYM = 821,
     TABLE_CHECKSUM_SYM = 822,
     TABLE_NAME_SYM = 823,
     TEMPORARY = 824,
     TEMPTABLE_SYM = 825,
     TERMINATED = 826,
     TEXT_STRING = 827,
     TEXT_SYM = 828,
     THAN_SYM = 829,
     THEN_SYM = 830,
     TIMESTAMP = 831,
     TIMESTAMP_ADD = 832,
     TIMESTAMP_DIFF = 833,
     TIME_SYM = 834,
     TINYBLOB = 835,
     TINYINT = 836,
     TINYTEXT = 837,
     TO_SYM = 838,
     TRAILING = 839,
     TRANSACTION_SYM = 840,
     TRIGGERS_SYM = 841,
     TRIGGER_SYM = 842,
     TRIM = 843,
     TRUE_SYM = 844,
     TRUNCATE_SYM = 845,
     TYPES_SYM = 846,
     TYPE_SYM = 847,
     UDF_RETURNS_SYM = 848,
     ULONGLONG_NUM = 849,
     UNCOMMITTED_SYM = 850,
     UNDEFINED_SYM = 851,
     UNDERSCORE_CHARSET = 852,
     UNDOFILE_SYM = 853,
     UNDO_BUFFER_SIZE_SYM = 854,
     UNDO_SYM = 855,
     UNICODE_SYM = 856,
     UNINSTALL_SYM = 857,
     UNION_SYM = 858,
     UNIQUE_SYM = 859,
     UNKNOWN_SYM = 860,
     UNLOCK_SYM = 861,
     UNSIGNED = 862,
     UNTIL_SYM = 863,
     UPDATE_SYM = 864,
     UPGRADE_SYM = 865,
     USAGE = 866,
     USER = 867,
     USE_FRM = 868,
     USE_SYM = 869,
     USING = 870,
     UTC_DATE_SYM = 871,
     UTC_TIMESTAMP_SYM = 872,
     UTC_TIME_SYM = 873,
     VALIDATION_SYM = 874,
     VALUES = 875,
     VALUE_SYM = 876,
     VARBINARY = 877,
     VARCHAR = 878,
     VARIABLES = 879,
     VARIANCE_SYM = 880,
     VARYING = 881,
     VAR_SAMP_SYM = 882,
     VIEW_SYM = 883,
     VIRTUAL_SYM = 884,
     WAIT_SYM = 885,
     WARNINGS = 886,
     WEEK_SYM = 887,
     WEIGHT_STRING_SYM = 888,
     WHEN_SYM = 889,
     WHERE = 890,
     WHILE_SYM = 891,
     WITH = 892,
     WITH_CUBE_SYM = 893,
     WITH_ROLLUP_SYM = 894,
     WITHOUT_SYM = 895,
     WORK_SYM = 896,
     WRAPPER_SYM = 897,
     WRITE_SYM = 898,
     X509_SYM = 899,
     XA_SYM = 900,
     XID_SYM = 901,
     XML_SYM = 902,
     XOR = 903,
     YEAR_MONTH_SYM = 904,
     YEAR_SYM = 905,
     ZEROFILL = 906
   };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define ANALYSE_SYM 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT 289
#define BINARY 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND 293
#define BIT_OR 294
#define BIT_SYM 295
#define BIT_XOR 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define DES_KEY_FILE 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define LOCATOR_SYM 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB 543
#define LONGTEXT 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SERVER_ID_SYM 560
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB 583
#define MEDIUMINT 584
#define MEDIUMTEXT 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING 602
#define MULTIPOINT 603
#define MULTIPOLYGON 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define PARSE_GCOL_EXPR_SYM 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define REDOFILE_SYM 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define SERVER_OPTIONS 755
#define SET 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define SQL_CACHE_SYM 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define TABLE_REF_PRIORITY 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB 835
#define TINYINT 836
#define TINYTEXT 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define UDF_RETURNS_SYM 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY 877
#define VARCHAR 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define WITH_CUBE_SYM 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL 906



#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED

# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int MYSQLparse (void *YYPARSE_PARAM);
#else
int MYSQLparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int MYSQLparse (class THD *YYTHD);
#else
int MYSQLparse ();
#endif
#endif /* ! YYPARSE_PARAM */

#endif /* !YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_0_17781452_1454369753_15_DIST_GPL_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

/* Line 390 of yacc.c  */
#line 1882 "/export/home/pb2/build/sb_0-17781452-1454369753.15/dist_GPL/sql/sql_yacc.cc"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(N) (N)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int yyi)
#else
static int
YYID (yyi)
    int yyi;
#endif
{
  return yyi;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
	Stack = &yyptr->Stack_alloc;					\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (YYID (0))
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  661
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   63158

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  671
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  921
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2735
/* YYNRULES -- Number of states.  */
#define YYNSTATES  4667

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   906

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   664,     2,     2,     2,   658,   653,     2,
     661,   662,   656,   655,   663,   654,   669,   657,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   670,   667,
       2,     2,     2,     2,   668,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   659,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   665,   652,   666,   660,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     6,    11,    14,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      81,    83,    85,    87,    89,    91,    93,    95,    97,    99,
     101,   103,   105,   107,   109,   111,   113,   115,   117,   119,
     121,   123,   125,   127,   129,   131,   135,   137,   139,   144,
     146,   149,   150,   155,   156,   159,   163,   165,   168,   169,
     173,   174,   181,   182,   188,   190,   194,   198,   202,   206,
     210,   214,   218,   222,   225,   229,   231,   235,   237,   240,
     244,   250,   258,   261,   265,   267,   271,   275,   278,   282,
     284,   288,   290,   292,   296,   300,   304,   308,   312,   316,
     320,   324,   328,   332,   336,   340,   344,   348,   352,   356,
     360,   364,   368,   372,   378,   382,   384,   385,   387,   391,
     393,   397,   401,   405,   409,   410,   414,   415,   423,   424,
     425,   440,   441,   442,   457,   458,   459,   474,   475,   482,
     483,   487,   496,   501,   505,   517,   519,   523,   526,   529,
     532,   535,   538,   541,   544,   545,   558,   559,   566,   569,
     570,   572,   576,   578,   579,   582,   583,   586,   587,   589,
     593,   598,   599,   602,   603,   606,   608,   610,   612,   614,
     616,   618,   620,   622,   624,   626,   628,   630,   632,   634,
     635,   639,   641,   642,   645,   646,   649,   652,   655,   658,
     661,   665,   669,   671,   673,   675,   678,   682,   686,   687,
     692,   693,   697,   698,   700,   704,   706,   707,   709,   713,
     715,   716,   720,   721,   723,   727,   729,   734,   735,   737,
     739,   741,   742,   746,   749,   753,   754,   758,   759,   765,
     771,   772,   780,   781,   788,   790,   792,   794,   798,   800,
     802,   804,   808,   809,   811,   813,   815,   817,   820,   822,
     826,   828,   830,   831,   833,   834,   837,   841,   847,   849,
     851,   853,   855,   857,   859,   861,   863,   865,   867,   869,
     871,   873,   875,   877,   881,   886,   887,   889,   891,   893,
     897,   899,   903,   907,   909,   912,   914,   916,   918,   920,
     924,   928,   930,   932,   934,   936,   938,   940,   942,   944,
     946,   948,   950,   952,   954,   956,   960,   961,   962,   966,
     968,   970,   972,   974,   976,   978,   980,   982,   984,   986,
     988,   990,   992,   993,   999,  1000,  1003,  1004,  1008,  1009,
    1012,  1015,  1018,  1021,  1022,  1029,  1032,  1033,  1036,  1038,
    1040,  1044,  1045,  1046,  1047,  1055,  1056,  1059,  1062,  1064,
    1066,  1067,  1068,  1077,  1078,  1085,  1087,  1090,  1092,  1095,
    1096,  1097,  1104,  1105,  1106,  1113,  1114,  1117,  1118,  1124,
    1125,  1127,  1128,  1134,  1135,  1138,  1139,  1145,  1150,  1151,
    1152,  1161,  1162,  1163,  1172,  1174,  1176,  1178,  1180,  1182,
    1185,  1190,  1196,  1197,  1202,  1207,  1212,  1216,  1220,  1223,
    1226,  1227,  1230,  1232,  1235,  1239,  1241,  1243,  1245,  1246,
    1248,  1250,  1253,  1257,  1259,  1261,  1263,  1265,  1267,  1269,
    1271,  1273,  1275,  1276,  1278,  1280,  1283,  1287,  1289,  1291,
    1293,  1295,  1297,  1298,  1300,  1302,  1305,  1309,  1311,  1313,
    1315,  1317,  1319,  1321,  1323,  1324,  1326,  1328,  1331,  1335,
    1337,  1339,  1341,  1344,  1347,  1350,  1352,  1354,  1356,  1358,
    1361,  1365,  1369,  1373,  1377,  1381,  1385,  1389,  1393,  1398,
    1402,  1404,  1406,  1408,  1410,  1413,  1417,  1420,  1425,  1431,
    1432,  1438,  1439,  1440,  1446,  1447,  1455,  1457,  1458,  1460,
    1461,  1465,  1466,  1470,  1476,  1483,  1484,  1489,  1492,  1495,
    1498,  1501,  1502,  1504,  1505,  1509,  1510,  1512,  1514,  1518,
    1520,  1525,  1529,  1533,  1534,  1537,  1538,  1539,  1547,  1548,
    1559,  1561,  1565,  1567,  1569,  1570,  1573,  1574,  1578,  1580,
    1584,  1585,  1592,  1594,  1595,  1596,  1602,  1603,  1608,  1610,
    1612,  1614,  1618,  1620,  1624,  1625,  1626,  1632,  1634,  1638,
    1640,  1642,  1643,  1647,  1649,  1653,  1654,  1659,  1661,  1662,
    1664,  1667,  1669,  1673,  1678,  1682,  1686,  1690,  1695,  1700,
    1704,  1709,  1710,  1712,  1713,  1715,  1717,  1720,  1722,  1724,
    1725,  1727,  1729,  1732,  1734,  1735,  1739,  1740,  1742,  1744,
    1747,  1749,  1752,  1756,  1760,  1764,  1768,  1772,  1776,  1780,
    1784,  1788,  1792,  1796,  1800,  1804,  1808,  1812,  1816,  1820,
    1824,  1828,  1832,  1836,  1840,  1841,  1848,  1850,  1852,  1856,
    1861,  1866,  1870,  1873,  1876,  1880,  1884,  1889,  1894,  1896,
    1898,  1900,  1902,  1904,  1906,  1908,  1910,  1912,  1914,  1916,
    1918,  1920,  1922,  1924,  1926,  1928,  1932,  1934,  1936,  1939,
    1942,  1950,  1959,  1968,  1977,  1986,  1989,  1990,  1992,  1997,
    1998,  2000,  2003,  2004,  2008,  2011,  2021,  2022,  2025,  2026,
    2028,  2031,  2033,  2035,  2038,  2041,  2044,  2046,  2049,  2050,
    2052,  2054,  2059,  2061,  2065,  2069,  2073,  2075,  2078,  2080,
    2082,  2086,  2089,  2093,  2096,  2099,  2101,  2105,  2109,  2112,
    2116,  2118,  2121,  2124,  2127,  2129,  2132,  2134,  2136,  2138,
    2141,  2145,  2148,  2152,  2155,  2158,  2162,  2166,  2170,  2171,
    2178,  2179,  2186,  2189,  2191,  2193,  2195,  2197,  2199,  2201,
    2203,  2205,  2207,  2209,  2211,  2213,  2216,  2219,  2221,  2224,
    2226,  2229,  2233,  2236,  2238,  2240,  2242,  2244,  2246,  2248,
    2250,  2253,  2254,  2256,  2258,  2264,  2265,  2269,  2270,  2273,
    2277,  2278,  2280,  2283,  2285,  2287,  2289,  2291,  2295,  2299,
    2303,  2307,  2308,  2310,  2311,  2313,  2314,  2316,  2319,  2321,
    2323,  2326,  2329,  2333,  2335,  2339,  2342,  2344,  2347,  2350,
    2353,  2356,  2359,  2362,  2365,  2368,  2371,  2374,  2377,  2379,
    2381,  2384,  2386,  2388,  2390,  2392,  2394,  2395,  2398,  2400,
    2402,  2404,  2406,  2408,  2409,  2412,  2413,  2416,  2418,  2420,
    2421,  2423,  2425,  2428,  2431,  2433,  2436,  2439,  2440,  2442,
    2444,  2446,  2450,  2452,  2456,  2457,  2459,  2460,  2465,  2467,
    2469,  2471,  2472,  2474,  2477,  2479,  2481,  2484,  2486,  2490,
    2494,  2496,  2498,  2499,  2502,  2503,  2505,  2511,  2512,  2516,
    2520,  2522,  2523,  2526,  2529,  2532,  2533,  2537,  2541,  2548,
    2555,  2557,  2559,  2562,  2565,  2568,  2570,  2573,  2576,  2578,
    2580,  2581,  2583,  2585,  2587,  2589,  2590,  2592,  2594,  2596,
    2597,  2599,  2602,  2603,  2605,  2606,  2608,  2609,  2611,  2613,
    2616,  2618,  2621,  2623,  2626,  2629,  2632,  2636,  2639,  2641,
    2643,  2645,  2647,  2651,  2653,  2655,  2657,  2662,  2665,  2667,
    2672,  2673,  2675,  2676,  2679,  2681,  2685,  2686,  2692,  2693,
    2699,  2707,  2708,  2714,  2715,  2721,  2722,  2728,  2729,  2734,
    2735,  2746,  2750,  2755,  2759,  2763,  2771,  2777,  2783,  2785,
    2790,  2791,  2793,  2795,  2798,  2801,  2804,  2806,  2811,  2814,
    2817,  2821,  2822,  2825,  2828,  2830,  2833,  2836,  2839,  2842,
    2846,  2847,  2851,  2853,  2858,  2859,  2863,  2864,  2867,  2868,
    2870,  2872,  2875,  2878,  2880,  2884,  2885,  2887,  2889,  2893,
    2896,  2899,  2901,  2905,  2910,  2911,  2918,  2923,  2924,  2930,
    2931,  2938,  2943,  2947,  2949,  2957,  2962,  2967,  2968,  2970,
    2973,  2976,  2979,  2981,  2983,  2984,  2990,  2991,  2995,  2998,
    2999,  3005,  3006,  3007,  3014,  3016,  3020,  3022,  3024,  3028,
    3032,  3034,  3038,  3041,  3045,  3048,  3053,  3054,  3061,  3062,
    3063,  3071,  3076,  3081,  3085,  3089,  3092,  3095,  3102,  3108,
    3112,  3118,  3124,  3126,  3128,  3130,  3133,  3135,  3137,  3139,
    3140,  3142,  3144,  3147,  3150,  3154,  3158,  3162,  3166,  3167,
    3169,  3170,  3172,  3173,  3175,  3177,  3178,  3181,  3183,  3184,
    3186,  3188,  3190,  3193,  3196,  3199,  3204,  3208,  3209,  3214,
    3218,  3219,  3221,  3223,  3227,  3231,  3234,  3237,  3242,  3243,
    3247,  3248,  3252,  3253,  3257,  3258,  3262,  3263,  3265,  3267,
    3271,  3273,  3275,  3276,  3279,  3281,  3285,  3289,  3293,  3295,
    3296,  3302,  3303,  3305,  3307,  3308,  3315,  3316,  3318,  3320,
    3323,  3325,  3327,  3329,  3330,  3336,  3339,  3340,  3346,  3347,
    3349,  3351,  3354,  3356,  3358,  3360,  3362,  3364,  3367,  3368,
    3374,  3375,  3377,  3379,  3380,  3385,  3390,  3394,  3400,  3402,
    3406,  3410,  3411,  3418,  3420,  3422,  3424,  3428,  3431,  3435,
    3437,  3439,  3440,  3447,  3449,  3451,  3453,  3457,  3461,  3466,
    3467,  3473,  3475,  3476,  3481,  3482,  3485,  3487,  3491,  3496,
    3499,  3503,  3507,  3511,  3516,  3520,  3532,  3533,  3537,  3546,
    3549,  3550,  3552,  3554,  3556,  3557,  3559,  3562,  3564,  3566,
    3568,  3570,  3571,  3574,  3579,  3583,  3585,  3587,  3589,  3592,
    3593,  3596,  3599,  3601,  3603,  3604,  3607,  3611,  3615,  3619,
    3622,  3626,  3631,  3635,  3640,  3644,  3649,  3651,  3655,  3660,
    3664,  3671,  3673,  3679,  3686,  3692,  3700,  3707,  3716,  3722,
    3729,  3734,  3739,  3745,  3749,  3754,  3756,  3760,  3764,  3768,
    3772,  3776,  3780,  3786,  3792,  3796,  3800,  3804,  3808,  3812,
    3816,  3818,  3820,  3822,  3824,  3826,  3828,  3830,  3832,  3834,
    3836,  3838,  3840,  3842,  3844,  3846,  3848,  3850,  3852,  3854,
    3856,  3858,  3860,  3862,  3866,  3868,  3870,  3872,  3874,  3878,
    3881,  3884,  3887,  3890,  3894,  3898,  3904,  3911,  3916,  3921,
    3929,  3932,  3939,  3945,  3952,  3959,  3964,  3969,  3975,  3979,
    3984,  3991,  3994,  3999,  4004,  4009,  4020,  4027,  4036,  4043,
    4048,  4053,  4060,  4065,  4070,  4075,  4082,  4087,  4095,  4103,
    4111,  4118,  4125,  4132,  4139,  4143,  4148,  4155,  4164,  4167,
    4170,  4179,  4188,  4195,  4202,  4204,  4211,  4218,  4227,  4236,
    4243,  4252,  4259,  4262,  4271,  4280,  4283,  4286,  4289,  4294,
    4299,  4304,  4309,  4313,  4322,  4329,  4338,  4343,  4350,  4355,
    4360,  4367,  4376,  4381,  4385,  4392,  4397,  4404,  4410,  4419,
    4427,  4438,  4440,  4447,  4452,  4457,  4462,  4467,  4472,  4479,
    4484,  4489,  4496,  4499,  4503,  4504,  4509,  4510,  4514,  4515,
    4517,  4519,  4523,  4526,  4531,  4537,  4542,  4547,  4552,  4558,
    4563,  4569,  4574,  4580,  4585,  4591,  4596,  4601,  4606,  4611,
    4616,  4622,  4630,  4633,  4637,  4639,  4644,  4645,  4647,  4648,
    4651,  4652,  4656,  4660,  4662,  4665,  4668,  4672,  4675,  4677,
    4680,  4682,  4685,  4687,  4690,  4693,  4696,  4698,  4699,  4701,
    4703,  4707,  4709,  4713,  4715,  4719,  4720,  4722,  4723,  4726,
    4731,  4737,  4739,  4741,  4743,  4745,  4750,  4752,  4756,  4760,
    4764,  4770,  4776,  4784,  4789,  4797,  4807,  4814,  4822,  4832,
    4839,  4841,  4844,  4847,  4848,  4850,  4855,  4860,  4865,  4870,
    4873,  4878,  4879,  4883,  4885,  4886,  4888,  4889,  4892,  4896,
    4900,  4902,  4904,  4911,  4918,  4920,  4923,  4924,  4926,  4928,
    4929,  4931,  4933,  4935,  4937,  4941,  4943,  4947,  4949,  4951,
    4953,  4955,  4957,  4959,  4961,  4963,  4965,  4967,  4969,  4971,
    4973,  4975,  4977,  4979,  4981,  4983,  4985,  4987,  4989,  4991,
    4993,  4995,  4997,  4998,  5000,  5002,  5003,  5006,  5007,  5009,
    5010,  5013,  5014,  5017,  5020,  5021,  5022,  5027,  5031,  5033,
    5034,  5036,  5038,  5042,  5046,  5048,  5051,  5052,  5054,  5058,
    5062,  5064,  5065,  5067,  5069,  5070,  5072,  5075,  5077,  5081,
    5085,  5087,  5089,  5091,  5093,  5095,  5096,  5099,  5101,  5103,
    5105,  5107,  5109,  5111,  5113,  5115,  5117,  5119,  5121,  5123,
    5125,  5127,  5129,  5131,  5133,  5135,  5137,  5139,  5141,  5143,
    5145,  5146,  5152,  5153,  5155,  5159,  5161,  5165,  5167,  5170,
    5172,  5173,  5175,  5178,  5184,  5187,  5189,  5193,  5194,  5195,
    5203,  5204,  5205,  5214,  5219,  5226,  5231,  5236,  5242,  5243,
    5250,  5255,  5260,  5265,  5271,  5276,  5278,  5282,  5284,  5286,
    5290,  5291,  5294,  5295,  5297,  5298,  5300,  5302,  5305,  5309,
    5311,  5313,  5322,  5332,  5341,  5348,  5356,  5363,  5364,  5366,
    5368,  5370,  5372,  5374,  5375,  5377,  5379,  5383,  5388,  5390,
    5394,  5399,  5403,  5405,  5408,  5411,  5416,  5418,  5420,  5424,
    5426,  5428,  5430,  5431,  5433,  5437,  5438,  5440,  5444,  5446,
    5448,  5450,  5451,  5457,  5467,  5471,  5473,  5477,  5478,  5480,
    5489,  5496,  5504,  5505,  5508,  5509,  5512,  5514,  5516,  5518,
    5519,  5524,  5525,  5527,  5528,  5530,  5532,  5536,  5538,  5540,
    5543,  5546,  5549,  5551,  5553,  5555,  5557,  5558,  5562,  5563,
    5567,  5570,  5575,  5580,  5584,  5589,  5594,  5596,  5600,  5604,
    5611,  5614,  5617,  5618,  5625,  5626,  5634,  5640,  5643,  5645,
    5651,  5657,  5660,  5663,  5665,  5670,  5674,  5677,  5681,  5684,
    5687,  5689,  5693,  5698,  5702,  5706,  5709,  5713,  5717,  5721,
    5725,  5729,  5733,  5737,  5741,  5745,  5750,  5752,  5754,  5756,
    5758,  5760,  5761,  5763,  5764,  5767,  5768,  5770,  5772,  5774,
    5775,  5778,  5779,  5782,  5783,  5786,  5789,  5790,  5793,  5796,
    5797,  5802,  5803,  5808,  5810,  5812,  5814,  5816,  5818,  5822,
    5824,  5826,  5827,  5829,  5831,  5835,  5836,  5838,  5840,  5841,
    5846,  5847,  5848,  5854,  5856,  5857,  5861,  5862,  5866,  5870,
    5872,  5875,  5878,  5881,  5884,  5887,  5891,  5894,  5896,  5898,
    5900,  5902,  5904,  5906,  5908,  5909,  5911,  5912,  5916,  5920,
    5922,  5923,  5928,  5930,  5933,  5934,  5936,  5937,  5941,  5945,
    5948,  5951,  5955,  5956,  5958,  5960,  5963,  5964,  5965,  5966,
    5967,  5990,  5992,  5994,  5995,  5997,  5998,  6000,  6002,  6003,
    6005,  6007,  6008,  6011,  6014,  6016,  6020,  6025,  6029,  6033,
    6034,  6037,  6040,  6042,  6046,  6050,  6051,  6056,  6057,  6061,
    6063,  6065,  6066,  6070,  6073,  6077,  6079,  6081,  6084,  6085,
    6088,  6092,  6094,  6098,  6100,  6102,  6105,  6108,  6110,  6112,
    6114,  6116,  6118,  6121,  6124,  6126,  6128,  6130,  6132,  6134,
    6136,  6138,  6140,  6143,  6146,  6148,  6150,  6152,  6154,  6156,
    6159,  6162,  6165,  6167,  6169,  6173,  6179,  6182,  6184,  6186,
    6188,  6190,  6194,  6199,  6205,  6207,  6213,  6217,  6220,  6222,
    6226,  6229,  6232,  6237,  6239,  6241,  6243,  6245,  6247,  6249,
    6251,  6253,  6255,  6257,  6259,  6261,  6263,  6265,  6267,  6269,
    6273,  6276,  6278,  6280,  6282,  6284,  6286,  6288,  6290,  6292,
    6294,  6296,  6298,  6300,  6302,  6304,  6306,  6308,  6310,  6312,
    6314,  6316,  6318,  6320,  6322,  6324,  6326,  6328,  6330,  6332,
    6334,  6336,  6338,  6340,  6342,  6344,  6346,  6348,  6350,  6352,
    6354,  6356,  6358,  6360,  6362,  6364,  6366,  6368,  6370,  6372,
    6374,  6376,  6378,  6380,  6382,  6384,  6386,  6388,  6390,  6392,
    6394,  6396,  6398,  6400,  6402,  6404,  6406,  6408,  6410,  6412,
    6414,  6416,  6418,  6420,  6422,  6424,  6426,  6428,  6430,  6432,
    6434,  6436,  6438,  6440,  6442,  6444,  6446,  6448,  6450,  6452,
    6454,  6456,  6458,  6460,  6462,  6464,  6466,  6468,  6470,  6472,
    6474,  6476,  6478,  6480,  6482,  6484,  6486,  6488,  6490,  6492,
    6494,  6496,  6498,  6500,  6502,  6504,  6506,  6508,  6510,  6512,
    6514,  6516,  6518,  6520,  6522,  6524,  6526,  6528,  6530,  6532,
    6534,  6536,  6538,  6540,  6542,  6544,  6546,  6548,  6550,  6552,
    6554,  6556,  6558,  6560,  6562,  6564,  6566,  6568,  6570,  6572,
    6574,  6576,  6578,  6580,  6582,  6584,  6586,  6588,  6590,  6592,
    6594,  6596,  6598,  6600,  6602,  6604,  6606,  6608,  6610,  6612,
    6614,  6616,  6618,  6620,  6622,  6624,  6626,  6628,  6630,  6632,
    6634,  6636,  6638,  6640,  6642,  6644,  6646,  6648,  6650,  6652,
    6654,  6656,  6658,  6660,  6662,  6664,  6666,  6668,  6670,  6672,
    6674,  6676,  6678,  6680,  6682,  6684,  6686,  6688,  6690,  6692,
    6694,  6696,  6698,  6700,  6702,  6704,  6706,  6708,  6710,  6712,
    6714,  6716,  6718,  6720,  6722,  6724,  6726,  6728,  6730,  6732,
    6734,  6736,  6738,  6740,  6742,  6744,  6746,  6748,  6750,  6752,
    6754,  6756,  6758,  6760,  6762,  6764,  6766,  6768,  6770,  6772,
    6774,  6776,  6778,  6780,  6782,  6784,  6786,  6788,  6790,  6792,
    6794,  6796,  6798,  6800,  6802,  6804,  6806,  6808,  6810,  6812,
    6814,  6816,  6818,  6820,  6822,  6824,  6826,  6828,  6830,  6832,
    6834,  6836,  6838,  6840,  6842,  6844,  6846,  6848,  6850,  6852,
    6854,  6856,  6858,  6860,  6862,  6864,  6866,  6868,  6870,  6872,
    6874,  6876,  6878,  6880,  6882,  6884,  6886,  6888,  6890,  6892,
    6894,  6896,  6898,  6900,  6902,  6904,  6906,  6908,  6910,  6912,
    6914,  6916,  6918,  6920,  6922,  6924,  6926,  6928,  6930,  6932,
    6934,  6936,  6938,  6940,  6942,  6944,  6946,  6948,  6950,  6952,
    6954,  6956,  6958,  6960,  6962,  6964,  6966,  6968,  6970,  6972,
    6974,  6976,  6978,  6980,  6982,  6984,  6986,  6988,  6990,  6992,
    6994,  6996,  6998,  7000,  7002,  7004,  7006,  7008,  7010,  7012,
    7014,  7016,  7018,  7020,  7022,  7024,  7026,  7028,  7030,  7033,
    7036,  7039,  7042,  7046,  7053,  7059,  7068,  7071,  7074,  7075,
    7078,  7080,  7084,  7087,  7089,  7091,  7093,  7095,  7096,  7098,
    7100,  7102,  7103,  7106,  7109,  7112,  7116,  7120,  7125,  7132,
    7135,  7139,  7143,  7145,  7149,  7153,  7156,  7159,  7161,  7162,
    7165,  7169,  7170,  7173,  7176,  7179,  7182,  7185,  7188,  7190,
    7192,  7194,  7196,  7198,  7200,  7202,  7203,  7208,  7210,  7212,
    7214,  7218,  7222,  7224,  7226,  7229,  7232,  7233,  7237,  7239,
    7243,  7248,  7253,  7257,  7258,  7266,  7268,  7271,  7273,  7275,
    7277,  7279,  7281,  7283,  7284,  7290,  7292,  7294,  7296,  7298,
    7300,  7301,  7306,  7313,  7320,  7327,  7335,  7341,  7342,  7347,
    7356,  7365,  7374,  7381,  7382,  7384,  7386,  7389,  7390,  7392,
    7394,  7398,  7399,  7403,  7404,  7408,  7409,  7413,  7414,  7418,
    7420,  7422,  7424,  7426,  7428,  7430,  7432,  7434,  7436,  7438,
    7440,  7443,  7446,  7448,  7452,  7455,  7458,  7461,  7464,  7467,
    7470,  7473,  7476,  7478,  7480,  7483,  7484,  7486,  7490,  7492,
    7495,  7498,  7501,  7503,  7507,  7511,  7513,  7515,  7519,  7521,
    7525,  7530,  7536,  7541,  7548,  7555,  7557,  7558,  7562,  7566,
    7568,  7570,  7571,  7574,  7577,  7580,  7583,  7584,  7587,  7588,
    7592,  7595,  7597,  7600,  7603,  7606,  7609,  7612,  7613,  7617,
    7618,  7620,  7621,  7625,  7628,  7629,  7631,  7634,  7635,  7637,
    7642,  7647,  7653,  7656,  7660,  7661,  7663,  7667,  7668,  7670,
    7672,  7673,  7675,  7677,  7680,  7682,  7683,  7685,  7687,  7691,
    7696,  7698,  7703,  7704,  7707,  7708,  7710,  7713,  7715,  7717,
    7719,  7721,  7723,  7725,  7727,  7729,  7731,  7734,  7737,  7741,
    7743,  7745,  7747,  7749,  7751,  7753,  7755,  7757,  7759,  7761,
    7763,  7765,  7767,  7768,  7772,  7774,  7777,  7779,  7782,  7786,
    7790,  7794,  7795,  7799,  7803,  7804,  7812,  7813,  7817,  7819,
    7823,  7824,  7828,  7829,  7833,  7838,  7839,  7842,  7846,  7847,
    7851,  7852,  7856,  7861,  7866,  7868,  7870,  7871,  7874,  7875,
    7888,  7896,  7903,  7904,  7905,  7906,  7907,  7908,  7923,  7924,
    7925,  7926,  7927,  7939,  7944,  7949,  7953,  7958,  7962,  7966,
    7967,  7970,  7972,  7976,  7982,  7984,  7986,  7987,  7989,  7991,
    7992,  7995,  7996,  7998,  8002,  8008
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     672,     0,    -1,   156,    -1,    -1,   675,   673,   667,   674,
      -1,   675,   156,    -1,    -1,   156,    -1,   676,    -1,  1520,
      -1,  1068,    -1,  1151,    -1,  1153,    -1,   743,    -1,   688,
      -1,  1154,    -1,  1143,    -1,  1526,    -1,   710,    -1,   677,
      -1,  1342,    -1,  1368,    -1,  1304,    -1,  1306,    -1,   681,
      -1,  1375,    -1,   778,    -1,  1124,    -1,  1493,    -1,  1483,
      -1,   686,    -1,  1319,    -1,  1590,    -1,  1395,    -1,  1398,
      -1,  1472,    -1,  1159,    -1,  1167,    -1,   980,    -1,   897,
      -1,  1174,    -1,   679,    -1,  1391,    -1,  1529,    -1,  1162,
      -1,  1146,    -1,  1320,    -1,  1385,    -1,   777,    -1,  1490,
      -1,  1527,    -1,  1528,    -1,  1185,    -1,  1451,    -1,   770,
      -1,  1353,    -1,  1480,    -1,  1125,    -1,  1129,    -1,  1346,
      -1,  1591,    -1,  1478,    -1,  1338,    -1,  1397,    -1,  1583,
      -1,   678,   415,  1445,    -1,   121,    -1,   144,    -1,   415,
    1445,   197,   680,    -1,  1442,    -1,   668,  1447,    -1,    -1,
     170,  1445,   682,   683,    -1,    -1,   615,   684,    -1,   684,
     663,   685,    -1,   685,    -1,   668,  1447,    -1,    -1,   218,
     687,  1447,    -1,    -1,    58,   316,   583,   689,   704,   709,
      -1,    -1,    58,   457,   185,   690,   691,    -1,   692,    -1,
     691,   663,   692,    -1,   458,   160,   693,    -1,   459,   160,
     693,    -1,   460,   160,   698,    -1,   461,   160,   698,    -1,
     462,   160,   701,    -1,   463,   160,   701,    -1,   464,   160,
     696,    -1,   661,   662,    -1,   661,   694,   662,    -1,   695,
      -1,   694,   663,   695,    -1,  1445,    -1,   661,   662,    -1,
     661,   697,   662,    -1,   661,   695,   663,   695,   662,    -1,
     697,   663,   661,   695,   663,   695,   662,    -1,   661,   662,
      -1,   661,   699,   662,    -1,   700,    -1,   699,   663,   700,
      -1,  1445,   669,  1445,    -1,   661,   662,    -1,   661,   702,
     662,    -1,   703,    -1,   702,   663,   703,    -1,  1441,    -1,
     705,    -1,   704,   663,   705,    -1,   299,   160,  1440,    -1,
     296,   160,  1440,    -1,   317,   160,  1440,    -1,   302,   160,
    1440,    -1,   303,   160,  1290,    -1,   297,   160,  1290,    -1,
     304,   160,  1290,    -1,   298,   160,  1290,    -1,   314,   160,
    1290,    -1,   308,   160,  1440,    -1,   306,   160,  1440,    -1,
     307,   160,  1440,    -1,   309,   160,  1440,    -1,   310,   160,
    1440,    -1,   313,   160,  1440,    -1,   315,   160,  1290,    -1,
     311,   160,  1440,    -1,   312,   160,  1440,    -1,   318,   160,
    1427,    -1,   232,   160,   661,   706,   662,    -1,   295,   160,
    1290,    -1,   708,    -1,    -1,   707,    -1,   706,   663,   707,
      -1,  1290,    -1,   300,   160,  1440,    -1,   301,   160,  1292,
      -1,   445,   160,  1440,    -1,   446,   160,  1290,    -1,    -1,
     194,    60,  1440,    -1,    -1,    99,   947,   566,   950,  1436,
     711,   887,    -1,    -1,    -1,    99,  1046,   235,  1445,  1050,
     378,  1436,   712,   661,  1063,   662,  1051,   713,  1116,    -1,
      -1,    -1,    99,  1047,   235,  1445,  1049,   378,  1436,   714,
     661,  1063,   662,  1052,   715,  1116,    -1,    -1,    -1,    99,
    1048,   235,  1445,  1049,   378,  1436,   716,   661,  1063,   662,
    1053,   717,  1116,    -1,    -1,    99,   108,   950,  1445,   718,
     944,    -1,    -1,    99,   719,  1544,    -1,    99,   612,   950,
     735,  1510,  1515,  1081,  1077,    -1,    99,   286,   212,   850,
      -1,    99,   564,   847,    -1,    99,   499,  1447,   193,   111,
     642,  1447,   384,   661,   720,   662,    -1,   721,    -1,   720,
     663,   721,    -1,   612,  1442,    -1,   221,  1442,    -1,   108,
    1442,    -1,   394,  1442,    -1,   404,  1442,    -1,   515,  1442,
      -1,   411,  1290,    -1,    -1,   167,   950,   737,   723,   378,
     488,   724,   729,   726,   731,   143,   732,    -1,    -1,   168,
    1204,  1266,   725,   727,   728,    -1,    25,  1204,    -1,    -1,
     152,    -1,   137,   378,   511,    -1,   137,    -1,    -1,   538,
    1204,    -1,    -1,   155,  1204,    -1,    -1,   730,    -1,   378,
      81,   416,    -1,   378,    81,   367,   416,    -1,    -1,    77,
    1442,    -1,    -1,   733,   734,    -1,   795,    -1,   797,    -1,
     793,    -1,   814,    -1,   832,    -1,   834,    -1,   829,    -1,
     799,    -1,   801,    -1,   802,    -1,   803,    -1,   804,    -1,
     806,    -1,   736,    -1,    -1,  1445,   669,  1445,    -1,  1445,
      -1,    -1,   738,   740,    -1,    -1,   739,   741,    -1,    77,
    1442,    -1,   265,   533,    -1,   369,   533,    -1,    93,   533,
      -1,   431,   533,   111,    -1,   343,   533,   111,    -1,   742,
      -1,   740,    -1,   134,    -1,  1210,   134,    -1,   533,   492,
     127,    -1,   533,   492,   248,    -1,    -1,    51,   737,   744,
     745,    -1,    -1,   661,   746,   662,    -1,    -1,   747,    -1,
     747,   663,  1204,    -1,  1204,    -1,    -1,   749,    -1,   749,
     663,   751,    -1,   751,    -1,    -1,  1445,   750,  1005,    -1,
      -1,   753,    -1,   753,   663,   754,    -1,   754,    -1,   755,
     750,  1445,  1005,    -1,    -1,   249,    -1,   393,    -1,   239,
      -1,    -1,   756,   792,   667,    -1,   792,   667,    -1,   757,
     792,   667,    -1,    -1,   758,   759,   667,    -1,    -1,   124,
     789,   760,  1005,   790,    -1,   124,  1445,    86,   194,   766,
      -1,    -1,   124,   763,   215,   194,   761,   764,   792,    -1,
      -1,   124,  1445,   105,   194,   762,  1185,    -1,   172,    -1,
      95,    -1,   765,    -1,   764,   663,   765,    -1,   769,    -1,
    1290,    -1,   767,    -1,   522,   768,  1443,    -1,    -1,   621,
      -1,   766,    -1,  1445,    -1,   523,    -1,  1210,   196,    -1,
     521,    -1,   508,   771,   773,    -1,  1445,    -1,   767,    -1,
      -1,   771,    -1,    -1,   501,   774,    -1,   776,   160,   775,
      -1,   774,   663,   776,   160,   775,    -1,  1426,    -1,  1227,
      -1,  1432,    -1,    66,    -1,   551,    -1,    90,    -1,    92,
      -1,    91,    -1,    56,    -1,   489,    -1,   568,    -1,    76,
      -1,   106,    -1,   334,    -1,   351,    -1,   467,   772,   773,
      -1,   208,   779,   135,   780,    -1,    -1,   103,    -1,   536,
      -1,   781,    -1,    86,   785,   786,    -1,   782,    -1,   781,
     663,   782,    -1,   783,   160,   784,    -1,  1445,    -1,   668,
    1447,    -1,   374,    -1,   485,    -1,   775,    -1,   787,    -1,
     786,   663,   787,    -1,   783,   160,   788,    -1,    66,    -1,
     551,    -1,    90,    -1,    92,    -1,    91,    -1,    56,    -1,
     489,    -1,   568,    -1,    76,    -1,   106,    -1,   334,    -1,
     351,    -1,   472,    -1,  1445,    -1,   789,   663,  1445,    -1,
      -1,    -1,   125,   791,  1204,    -1,   795,    -1,   797,    -1,
     793,    -1,   814,    -1,   832,    -1,   834,    -1,   829,    -1,
     799,    -1,   801,    -1,   802,    -1,   803,    -1,   804,    -1,
     806,    -1,    -1,   230,   794,   809,   154,   230,    -1,    -1,
     796,   676,    -1,    -1,   474,   798,  1204,    -1,    -1,   800,
     838,    -1,   270,  1446,    -1,   257,  1446,    -1,   381,  1445,
      -1,    -1,   182,   807,  1445,   246,   805,   808,    -1,    68,
    1445,    -1,    -1,   363,   197,    -1,   197,    -1,  1445,    -1,
     808,   663,  1445,    -1,    -1,    -1,    -1,   810,  1204,   811,
     575,   757,   812,   813,    -1,    -1,   151,   809,    -1,   150,
     757,    -1,   815,    -1,   818,    -1,    -1,    -1,    54,   816,
    1204,   817,   820,   828,   154,    54,    -1,    -1,    54,   819,
     821,   828,   154,    54,    -1,   822,    -1,   820,   822,    -1,
     825,    -1,   821,   825,    -1,    -1,    -1,   634,   823,  1204,
     824,   575,   757,    -1,    -1,    -1,   634,   826,  1204,   827,
     575,   757,    -1,    -1,   150,   757,    -1,    -1,  1446,   670,
     830,   838,   831,    -1,    -1,  1446,    -1,    -1,  1446,   670,
     833,   836,   831,    -1,    -1,   835,   836,    -1,    -1,    32,
     837,   758,   756,   154,    -1,   292,   757,   154,   292,    -1,
      -1,    -1,   636,   839,  1204,   840,   143,   757,   154,   636,
      -1,    -1,    -1,   455,   757,   608,   841,  1204,   842,   154,
     455,    -1,    31,    -1,     9,    -1,   241,    -1,   609,    -1,
     130,    -1,   872,   874,    -1,   872,    58,   869,   853,    -1,
     872,     7,   869,   848,   857,    -1,    -1,   614,   286,   212,
    1445,    -1,   872,     7,   869,   860,    -1,   872,   144,   869,
     860,    -1,   873,   852,   863,    -1,   873,   852,   866,    -1,
       7,   870,    -1,     7,   871,    -1,    -1,   854,   855,    -1,
     856,    -1,   855,   856,    -1,   855,   663,   856,    -1,   875,
      -1,   876,    -1,   877,    -1,    -1,   858,    -1,   859,    -1,
     858,   859,    -1,   858,   663,   859,    -1,   875,    -1,   876,
      -1,   877,    -1,   878,    -1,   881,    -1,   883,    -1,   885,
      -1,   882,    -1,   884,    -1,    -1,   861,    -1,   862,    -1,
     861,   862,    -1,   861,   663,   862,    -1,   875,    -1,   876,
      -1,   877,    -1,   883,    -1,   885,    -1,    -1,   864,    -1,
     865,    -1,   864,   865,    -1,   864,   663,   865,    -1,   875,
      -1,   879,    -1,   880,    -1,   881,    -1,   883,    -1,   885,
      -1,   882,    -1,    -1,   867,    -1,   868,    -1,   867,   868,
      -1,   867,   663,   868,    -1,   875,    -1,   883,    -1,   885,
      -1,   110,  1442,    -1,   598,  1442,    -1,   438,  1442,    -1,
    1445,    -1,  1445,    -1,   432,    -1,   434,    -1,   367,     4,
      -1,   237,  1332,   886,    -1,    26,  1332,   886,    -1,   323,
    1332,   886,    -1,   177,  1332,   886,    -1,   599,  1332,   886,
      -1,   439,  1332,   886,    -1,   364,  1332,  1291,    -1,    77,
    1332,  1442,    -1,  1360,   158,  1332,   958,    -1,   184,  1332,
     886,    -1,   630,    -1,   370,    -1,  1293,    -1,  1439,    -1,
     661,   888,    -1,   951,   893,   890,    -1,   275,  1436,    -1,
     661,   275,  1436,   662,    -1,   963,   662,   951,   893,   890,
      -1,    -1,   893,   942,   662,   889,  1532,    -1,    -1,    -1,
    1406,   943,   942,   891,  1530,    -1,    -1,  1406,   943,   661,
     942,   662,   892,  1532,    -1,   894,    -1,    -1,   895,    -1,
      -1,   401,   896,   899,    -1,    -1,   401,   898,   899,    -1,
      48,   900,   910,   911,   918,    -1,   902,   263,   903,   661,
     904,   662,    -1,    -1,   902,   216,   901,   908,    -1,   430,
     908,    -1,   430,   907,    -1,   280,   908,    -1,   280,   907,
      -1,    -1,   277,    -1,    -1,    12,   160,  1291,    -1,    -1,
     905,    -1,   906,    -1,   905,   663,   906,    -1,  1445,    -1,
      73,   661,   904,   662,    -1,   661,   916,   662,    -1,   661,
     916,   662,    -1,    -1,   402,  1291,    -1,    -1,    -1,   555,
      48,   902,   216,   909,   912,   917,    -1,    -1,   555,    48,
     902,   263,   903,   661,   914,   662,   913,   917,    -1,   915,
      -1,   914,   663,   915,    -1,  1445,    -1,  1207,    -1,    -1,
     554,  1291,    -1,    -1,   661,   919,   662,    -1,   920,    -1,
     919,   663,   920,    -1,    -1,   401,   921,   922,   923,   939,
     934,    -1,  1445,    -1,    -1,    -1,   620,   272,   574,   924,
     926,    -1,    -1,   620,   249,   925,   927,    -1,   327,    -1,
     929,    -1,   929,    -1,   661,   928,   662,    -1,   929,    -1,
     928,   663,   929,    -1,    -1,    -1,   661,   930,   932,   931,
     662,    -1,   933,    -1,   932,   663,   933,    -1,   327,    -1,
    1207,    -1,    -1,   661,   935,   662,    -1,   936,    -1,   935,
     663,   936,    -1,    -1,   555,   937,   938,   939,    -1,  1447,
      -1,    -1,   940,    -1,   940,   941,    -1,   941,    -1,   564,
    1332,  1445,    -1,  1360,   158,  1332,   958,    -1,   364,  1332,
    1291,    -1,   322,  1332,  1293,    -1,   340,  1332,  1293,    -1,
     111,   136,  1332,  1442,    -1,   235,   136,  1332,  1442,    -1,
      77,  1332,  1442,    -1,   493,  1196,  1200,  1192,    -1,    -1,
      21,    -1,    -1,   945,    -1,   946,    -1,   945,   946,    -1,
     957,    -1,   956,    -1,    -1,   948,    -1,   949,    -1,   949,
     948,    -1,   569,    -1,    -1,   230,  1210,   171,    -1,    -1,
     953,    -1,   954,    -1,   954,   952,    -1,   954,    -1,   954,
     953,    -1,   954,   663,   953,    -1,   158,  1332,   958,    -1,
     322,  1332,  1292,    -1,   340,  1332,  1292,    -1,    28,  1332,
    1290,    -1,   404,  1332,  1442,    -1,    77,  1332,  1442,    -1,
      83,  1332,  1442,    -1,    84,  1332,  1442,    -1,    27,  1332,
    1292,    -1,   395,  1332,  1290,    -1,   395,  1332,   125,    -1,
     540,  1332,  1290,    -1,   540,  1332,   125,    -1,   541,  1332,
    1290,    -1,   541,  1332,   125,    -1,   542,  1332,  1290,    -1,
     542,  1332,   125,    -1,    63,  1332,  1290,    -1,   567,  1332,
    1290,    -1,   129,  1332,  1290,    -1,   483,  1332,   960,    -1,
      -1,   603,  1332,   955,   661,  1384,   662,    -1,   956,    -1,
     957,    -1,   242,  1332,   961,    -1,   111,   136,  1332,  1442,
      -1,   235,   136,  1332,  1442,    -1,   564,  1332,  1445,    -1,
     547,   139,    -1,   547,   332,    -1,    87,  1332,  1442,    -1,
     262,  1332,  1290,    -1,  1018,  1008,  1332,  1010,    -1,  1018,
      71,  1332,  1017,    -1,  1447,    -1,  1447,    -1,   125,    -1,
     187,    -1,   148,    -1,    82,    -1,   440,    -1,    80,    -1,
     369,    -1,   186,    -1,   266,    -1,   550,    -1,   435,    -1,
     123,    -1,   247,    -1,   964,    -1,   965,    -1,   964,   663,
     965,    -1,   966,    -1,   967,    -1,   972,   968,    -1,   972,
    1035,    -1,  1041,  1065,  1050,   661,  1063,   662,  1051,    -1,
    1047,  1044,  1065,  1049,   661,  1063,   662,  1052,    -1,  1048,
    1044,  1065,  1049,   661,  1063,   662,  1053,    -1,   970,  1042,
    1065,  1050,   661,  1063,   662,  1051,    -1,   970,   193,   263,
    1065,   661,  1063,   662,  1035,    -1,   970,   969,    -1,    -1,
     969,    -1,    64,   661,  1204,   662,    -1,    -1,   971,    -1,
      89,  1065,    -1,    -1,  1435,   973,   974,    -1,   982,  1002,
      -1,   982,  1016,   975,    21,   661,   981,   662,   979,   976,
      -1,    -1,   203,    15,    -1,    -1,   977,    -1,   977,   978,
      -1,   978,    -1,   604,    -1,   604,   263,    -1,    77,  1442,
      -1,  1210,   372,    -1,   372,    -1,  1034,   263,    -1,    -1,
     629,    -1,   548,    -1,   399,   661,   981,   662,    -1,  1204,
      -1,   990,  1000,   996,    -1,   991,  1001,   996,    -1,   189,
     992,   996,    -1,    40,    -1,    40,   999,    -1,    45,    -1,
      44,    -1,   986,   999,  1021,    -1,   986,  1021,    -1,   987,
     999,  1022,    -1,   987,  1022,    -1,    35,   999,    -1,    35,
      -1,   988,   999,  1021,    -1,   989,   999,  1022,    -1,   622,
     999,    -1,   650,  1000,   996,    -1,   115,    -1,   579,   994,
      -1,   576,   994,    -1,   112,   994,    -1,   580,    -1,    42,
    1000,    -1,   985,    -1,   328,    -1,   288,    -1,   291,   622,
      -1,   291,   988,  1021,    -1,   582,  1021,    -1,   573,  1000,
    1021,    -1,   330,  1021,    -1,   289,  1021,    -1,   123,   992,
     996,    -1,   375,   992,   996,    -1,   187,   992,   996,    -1,
      -1,   159,   983,   661,  1067,   662,  1021,    -1,    -1,   501,
     984,   661,  1067,   662,  1021,    -1,   291,  1021,    -1,   497,
      -1,   260,    -1,   206,    -1,   205,    -1,   409,    -1,   348,
      -1,   279,    -1,   347,    -1,   410,    -1,   349,    -1,    62,
      -1,   357,    -1,   354,    62,    -1,   986,   626,    -1,   623,
      -1,   354,   623,    -1,   376,    -1,   357,   623,    -1,   354,
      62,   626,    -1,   357,   626,    -1,   247,    -1,   581,    -1,
     513,    -1,   329,    -1,    34,    -1,   435,    -1,   142,    -1,
     142,   414,    -1,    -1,   999,    -1,   993,    -1,   661,   373,
     663,   373,   662,    -1,    -1,   661,   373,   662,    -1,    -1,
     661,   662,    -1,   661,   373,   662,    -1,    -1,   997,    -1,
     997,   998,    -1,   998,    -1,   509,    -1,   607,    -1,   651,
      -1,   661,   290,   662,    -1,   661,   594,   662,    -1,   661,
     122,   662,    -1,   661,   373,   662,    -1,    -1,   999,    -1,
      -1,   993,    -1,    -1,  1003,    -1,  1003,  1004,    -1,  1004,
      -1,   372,    -1,  1210,   372,    -1,   125,  1007,    -1,   378,
     609,  1006,    -1,    27,    -1,   497,   125,   621,    -1,  1034,
     263,    -1,   604,    -1,   604,   263,    -1,    77,  1442,    -1,
      71,  1014,    -1,    75,   125,    -1,    75,   187,    -1,    75,
     148,    -1,   547,   125,    -1,   547,   139,    -1,   547,   332,
      -1,   982,  1015,    -1,   368,   995,    -1,  1006,    -1,  1425,
      -1,    62,   501,    -1,    61,    -1,  1447,    -1,    35,    -1,
    1009,    -1,   125,    -1,    -1,  1008,  1010,    -1,  1447,    -1,
      35,    -1,  1012,    -1,   125,    -1,  1447,    -1,    -1,    71,
    1017,    -1,    -1,    71,  1014,    -1,  1014,    -1,   125,    -1,
      -1,   125,    -1,    23,    -1,    35,    23,    -1,    23,    35,
      -1,   601,    -1,   601,    35,    -1,    35,   601,    -1,    -1,
    1019,    -1,  1020,    -1,    49,    -1,  1008,  1009,  1022,    -1,
      35,    -1,    35,  1008,  1009,    -1,    -1,    35,    -1,    -1,
     661,  1291,  1024,   662,    -1,    22,    -1,   131,    -1,   475,
      -1,    -1,  1025,    -1,  1025,  1026,    -1,  1026,    -1,  1291,
      -1,  1028,  1027,    -1,  1029,    -1,  1030,   663,  1029,    -1,
    1028,   654,  1028,    -1,  1030,    -1,  1031,    -1,    -1,   273,
    1032,    -1,    -1,   418,    -1,   441,  1436,  1036,  1038,  1039,
      -1,    -1,   661,  1037,   662,    -1,  1037,   663,  1445,    -1,
    1445,    -1,    -1,   319,   198,    -1,   319,   400,    -1,   319,
     510,    -1,    -1,   378,   609,  1040,    -1,   378,   130,  1040,
      -1,   378,   609,  1040,   378,   130,  1040,    -1,   378,   130,
    1040,   378,   609,  1040,    -1,   470,    -1,    52,    -1,   501,
     372,    -1,   369,     6,    -1,   501,   125,    -1,  1043,    -1,
     418,   263,    -1,   604,  1044,    -1,   263,    -1,   235,    -1,
      -1,  1043,    -1,   261,    -1,   235,    -1,   234,    -1,    -1,
     604,    -1,   199,    -1,   519,    -1,    -1,  1049,    -1,  1049,
    1057,    -1,    -1,  1054,    -1,    -1,  1056,    -1,    -1,  1055,
      -1,  1059,    -1,  1054,  1059,    -1,  1060,    -1,  1055,  1060,
      -1,  1061,    -1,  1056,  1061,    -1,   615,  1062,    -1,   592,
    1062,    -1,   262,  1332,  1290,    -1,    77,  1442,    -1,  1058,
      -1,  1057,    -1,  1058,    -1,  1058,    -1,   637,   398,  1439,
      -1,    47,    -1,   486,    -1,   216,    -1,  1063,   663,  1064,
    1284,    -1,  1064,  1284,    -1,  1445,    -1,  1445,   661,   373,
     662,    -1,    -1,  1435,    -1,    -1,   669,  1445,    -1,  1423,
      -1,  1067,   663,  1423,    -1,    -1,    14,   566,  1436,  1069,
    1089,    -1,    -1,    14,   108,  1088,  1070,   945,    -1,    14,
     108,  1445,   610,   111,   136,   353,    -1,    -1,    14,   420,
     737,  1071,   738,    -1,    -1,    14,   200,   737,  1072,   738,
      -1,    -1,    14,  1552,  1547,  1073,  1554,    -1,    -1,    14,
    1547,  1074,  1554,    -1,    -1,    14,  1547,   167,   737,  1075,
    1085,  1086,   726,   731,  1087,    -1,    14,   564,   849,    -1,
      14,   286,   212,   851,    -1,    14,   564,   846,    -1,    14,
     564,   845,    -1,    14,   499,  1447,   384,   661,   720,   662,
      -1,  1076,  1510,  1515,  1081,  1077,    -1,  1076,  1084,   228,
      48,   572,    -1,  1481,    -1,    14,   612,  1314,   735,    -1,
      -1,  1078,    -1,  1079,    -1,  1078,  1079,    -1,     5,   606,
      -1,     5,   285,    -1,  1080,    -1,  1080,   245,  1291,   120,
      -1,  1080,   361,    -1,  1080,   125,    -1,   404,   174,   736,
      -1,    -1,   637,  1082,    -1,  1082,  1083,    -1,  1083,    -1,
     321,  1290,    -1,   325,  1290,    -1,   320,  1290,    -1,   326,
    1290,    -1,   612,   661,   662,    -1,    -1,   378,   488,   724,
      -1,   730,    -1,   378,   488,   724,   730,    -1,    -1,   451,
     583,   737,    -1,    -1,   143,   732,    -1,    -1,  1445,    -1,
    1090,    -1,  1090,   895,    -1,  1090,  1097,    -1,  1091,    -1,
    1109,   663,  1091,    -1,    -1,  1109,    -1,  1108,    -1,  1109,
     663,  1108,    -1,   138,   564,    -1,   233,   564,    -1,  1099,
      -1,   144,   401,  1106,    -1,   436,   401,  1161,  1098,    -1,
      -1,   382,   401,  1161,  1098,  1092,  1161,    -1,    17,   401,
    1161,  1098,    -1,    -1,    64,   401,  1098,  1093,  1156,    -1,
      -1,   453,   401,  1161,  1098,  1094,  1148,    -1,    69,   401,
    1161,  1291,    -1,   590,   401,  1098,    -1,  1102,    -1,   169,
     401,  1107,   637,   566,  1436,  1095,    -1,   138,   401,  1098,
     564,    -1,   233,   401,  1098,   564,    -1,    -1,  1096,    -1,
     637,   619,    -1,   640,   619,    -1,   450,   403,    -1,    13,
      -1,  1106,    -1,    -1,     7,   401,  1161,  1100,  1101,    -1,
      -1,   661,   919,   662,    -1,   402,  1291,    -1,    -1,   452,
     401,  1161,  1103,  1104,    -1,    -1,    -1,  1106,  1105,   246,
     661,   919,   662,    -1,  1107,    -1,  1106,   663,  1107,    -1,
    1445,    -1,  1111,    -1,  1108,   663,  1111,    -1,  1108,   663,
    1115,    -1,  1115,    -1,  1109,   663,  1115,    -1,     7,  1119,
      -1,  1110,   966,  1122,    -1,     7,   967,    -1,  1110,   661,
     963,   662,    -1,    -1,    58,  1119,  1435,  1112,   972,  1122,
      -1,    -1,    -1,   344,  1119,  1435,  1113,   974,  1114,  1122,
      -1,   144,  1119,  1435,  1121,    -1,   144,   193,   263,  1435,
      -1,   144,   418,   263,    -1,   144,  1043,  1435,    -1,   137,
     261,    -1,   152,   261,    -1,    14,  1119,  1435,   501,   125,
    1425,    -1,    14,  1119,  1435,   144,   125,    -1,   451,  1123,
    1436,    -1,   451,  1043,  1435,   583,  1435,    -1,    96,   583,
    1008,  1010,  1015,    -1,   952,    -1,   192,    -1,  1278,    -1,
     610,   403,    -1,  1117,    -1,  1118,    -1,  1096,    -1,    -1,
    1118,    -1,  1117,    -1,  1118,  1117,    -1,  1117,  1118,    -1,
      12,  1332,   125,    -1,    12,  1332,  1445,    -1,   285,  1332,
     125,    -1,   285,  1332,  1445,    -1,    -1,    74,    -1,    -1,
     231,    -1,    -1,   470,    -1,    52,    -1,    -1,     9,  1445,
      -1,   186,    -1,    -1,   583,    -1,   160,    -1,    21,    -1,
     539,   204,    -1,   546,   204,    -1,  1126,  1127,    -1,   546,
     511,  1138,   709,    -1,   539,   511,  1138,    -1,    -1,  1141,
    1133,  1128,   709,    -1,   539,   585,  1130,    -1,    -1,  1131,
      -1,  1132,    -1,  1131,   663,  1132,    -1,   637,    88,   514,
      -1,   433,   380,    -1,   433,   643,    -1,  1134,  1135,  1136,
    1137,    -1,    -1,   612,   160,  1442,    -1,    -1,   404,   160,
    1442,    -1,    -1,   126,   160,  1442,    -1,    -1,   406,   160,
    1442,    -1,    -1,  1139,    -1,  1140,    -1,  1139,   663,  1140,
      -1,   534,    -1,   447,    -1,    -1,   608,  1142,    -1,   708,
      -1,  1142,   663,   708,    -1,   526,   160,  1442,    -1,   524,
     160,  1442,    -1,   525,    -1,    -1,    63,  1474,  1144,  1311,
    1145,    -1,    -1,   429,    -1,   176,    -1,    -1,   453,  1161,
    1474,  1147,  1311,  1148,    -1,    -1,  1149,    -1,  1150,    -1,
    1150,  1149,    -1,   429,    -1,   176,    -1,   613,    -1,    -1,
      17,  1161,  1474,  1152,  1311,    -1,    36,  1442,    -1,    -1,
      64,  1474,  1155,  1311,  1156,    -1,    -1,  1157,    -1,  1158,
      -1,  1158,  1157,    -1,   429,    -1,   180,    -1,   331,    -1,
     176,    -1,    59,    -1,   194,   610,    -1,    -1,   382,  1161,
    1474,  1160,  1311,    -1,    -1,   371,    -1,   282,    -1,    -1,
     451,  1474,  1163,  1165,    -1,   451,   612,   735,  1164,    -1,
    1448,   583,  1448,    -1,  1164,   663,  1448,   583,  1448,    -1,
    1166,    -1,  1165,   663,  1166,    -1,  1436,   583,  1436,    -1,
      -1,    50,   235,  1168,  1169,   249,  1173,    -1,  1170,    -1,
    1172,    -1,  1171,    -1,  1170,   663,  1171,    -1,  1436,  1182,
      -1,  1436,  1180,  1182,    -1,  1445,    -1,   125,    -1,    -1,
     281,   235,   246,    50,  1175,  1176,    -1,  1179,    -1,  1177,
      -1,  1178,    -1,  1177,   663,  1178,    -1,  1436,  1182,  1184,
      -1,  1436,  1180,  1182,  1184,    -1,    -1,   401,  1181,   661,
    1098,   662,    -1,  1183,    -1,    -1,  1043,   661,  1262,   662,
      -1,    -1,   231,   269,    -1,  1186,    -1,   493,  1189,  1530,
      -1,   661,  1187,   662,  1532,    -1,   493,  1189,    -1,   661,
    1187,   662,    -1,   493,  1252,  1192,    -1,   661,  1188,   662,
      -1,  1190,  1281,  1285,  1199,    -1,  1190,  1302,  1199,    -1,
    1190,  1301,  1193,  1272,  1275,  1273,  1281,  1285,  1296,  1301,
    1199,    -1,    -1,  1191,  1196,  1200,    -1,  1194,  1272,  1275,
    1273,  1281,  1285,  1296,  1199,    -1,   197,  1195,    -1,    -1,
    1193,    -1,  1243,    -1,   145,    -1,    -1,  1197,    -1,  1197,
    1198,    -1,  1198,    -1,  1543,    -1,   531,    -1,   529,    -1,
      -1,   194,   609,    -1,   285,   249,   503,   342,    -1,  1200,
     663,  1201,    -1,  1201,    -1,   656,    -1,  1430,    -1,  1204,
    1202,    -1,    -1,    21,  1445,    -1,    21,  1442,    -1,  1445,
      -1,  1442,    -1,    -1,   661,   662,    -1,  1204,  1208,  1204,
      -1,  1204,   648,  1204,    -1,  1204,  1209,  1204,    -1,   367,
    1204,    -1,  1205,   254,   589,    -1,  1205,   254,  1210,   589,
      -1,  1205,   254,   179,    -1,  1205,   254,  1210,   179,    -1,
    1205,   254,   605,    -1,  1205,   254,  1210,   605,    -1,  1205,
      -1,  1205,   254,   372,    -1,  1205,   254,  1210,   372,    -1,
    1205,  1212,  1206,    -1,  1205,  1212,  1213,   661,  1539,   662,
      -1,  1206,    -1,  1207,   249,   661,  1539,   662,    -1,  1207,
    1210,   249,   661,  1539,   662,    -1,  1207,   249,   661,  1204,
     662,    -1,  1207,   249,   661,  1204,   663,  1236,   662,    -1,
    1207,  1210,   249,   661,  1204,   662,    -1,  1207,  1210,   249,
     661,  1204,   663,  1236,   662,    -1,  1207,    33,  1207,    19,
    1206,    -1,  1207,  1210,    33,  1207,    19,  1206,    -1,  1207,
     517,   275,  1207,    -1,  1207,   275,  1214,  1274,    -1,  1207,
    1210,   275,  1214,  1274,    -1,  1207,   442,  1207,    -1,  1207,
    1210,   442,  1207,    -1,  1207,    -1,  1207,   652,  1207,    -1,
    1207,   653,  1207,    -1,  1207,   504,  1207,    -1,  1207,   505,
    1207,    -1,  1207,   655,  1207,    -1,  1207,   654,  1207,    -1,
    1207,   655,   245,  1204,  1266,    -1,  1207,   654,   245,  1204,
    1266,    -1,  1207,   656,  1207,    -1,  1207,   657,  1207,    -1,
    1207,   658,  1207,    -1,  1207,   141,  1207,    -1,  1207,   345,
    1207,    -1,  1207,   659,  1207,    -1,  1214,    -1,   390,    -1,
     387,    -1,    19,    -1,    18,    -1,   367,    -1,   366,    -1,
     664,    -1,   366,    -1,   160,    -1,   161,    -1,   201,    -1,
     214,    -1,   267,    -1,   294,    -1,   359,    -1,    13,    -1,
      20,    -1,  1432,    -1,  1215,    -1,  1216,    -1,  1219,    -1,
    1217,    -1,  1214,    71,  1447,    -1,  1426,    -1,  1424,    -1,
    1227,    -1,  1226,    -1,  1214,   389,  1214,    -1,   655,  1214,
      -1,   654,  1214,    -1,   660,  1214,    -1,  1211,  1214,    -1,
     661,  1539,   662,    -1,   661,  1204,   662,    -1,   661,  1204,
     663,  1236,   662,    -1,   484,   661,  1204,   663,  1236,   662,
      -1,   171,   661,  1539,   662,    -1,   665,  1445,  1204,   666,
      -1,   319,  1237,    10,   661,  1207,  1220,   662,    -1,    35,
    1214,    -1,    55,   661,  1204,    21,  1234,   662,    -1,    54,
    1239,  1241,  1240,   154,    -1,    96,   661,  1204,   663,  1234,
     662,    -1,    96,   661,  1204,   615,  1009,   662,    -1,   125,
     661,  1432,   662,    -1,   620,   661,  1433,   662,    -1,   245,
    1204,  1266,   655,  1204,    -1,  1432,   259,  1443,    -1,    62,
     661,  1236,   662,    -1,    62,   661,  1236,   615,  1009,   662,
      -1,   104,  1203,    -1,   115,   661,  1204,   662,    -1,   120,
     661,  1204,   662,    -1,   226,   661,  1204,   662,    -1,   241,
     661,  1204,   663,  1204,   663,  1204,   663,  1204,   662,    -1,
     245,   661,  1204,   663,  1204,   662,    -1,   245,   661,  1204,
     663,  1204,   663,  1236,   662,    -1,   271,   661,  1204,   663,
    1204,   662,    -1,   339,   661,  1204,   662,    -1,   346,   661,
    1204,   662,    -1,   477,   661,  1204,   663,  1204,   662,    -1,
     491,   661,  1204,   662,    -1,   579,   661,  1204,   662,    -1,
     576,   661,  1204,   662,    -1,   576,   661,  1204,   663,  1204,
     662,    -1,   588,   661,  1204,   662,    -1,   588,   661,   268,
    1204,   197,  1204,   662,    -1,   588,   661,   584,  1204,   197,
    1204,   662,    -1,   588,   661,    46,  1204,   197,  1204,   662,
      -1,   588,   661,   268,   197,  1204,   662,    -1,   588,   661,
     584,   197,  1204,   662,    -1,   588,   661,    46,   197,  1204,
     662,    -1,   588,   661,  1204,   197,  1204,   662,    -1,   612,
     661,   662,    -1,   650,   661,  1204,   662,    -1,     8,   661,
    1204,   663,  1204,   662,    -1,     8,   661,  1204,   663,   245,
    1204,  1266,   662,    -1,   102,  1203,    -1,   107,   995,    -1,
     113,   661,  1204,   663,   245,  1204,  1266,   662,    -1,   114,
     661,  1204,   663,   245,  1204,  1266,   662,    -1,   178,   661,
    1266,   197,  1204,   662,    -1,   207,   661,  1268,   663,  1204,
     662,    -1,  1006,    -1,   412,   661,  1207,   249,  1204,   662,
      -1,   552,   661,  1204,   663,  1204,   662,    -1,   552,   661,
    1204,   663,   245,  1204,  1266,   662,    -1,   556,   661,  1204,
     663,  1204,   663,  1204,   662,    -1,   556,   661,  1204,   663,
    1204,   662,    -1,   556,   661,  1204,   197,  1204,   194,  1204,
     662,    -1,   556,   661,  1204,   197,  1204,   662,    -1,   562,
     995,    -1,   577,   661,  1267,   663,  1204,   663,  1204,   662,
      -1,   578,   661,  1267,   663,  1204,   663,  1204,   662,    -1,
     616,  1203,    -1,   618,   995,    -1,   617,   995,    -1,    23,
     661,  1204,   662,    -1,    61,   661,  1204,   662,    -1,    69,
     661,  1236,   662,    -1,    72,   661,  1204,   662,    -1,   108,
     661,   662,    -1,   230,   661,  1204,   663,  1204,   663,  1204,
     662,    -1,   195,   661,  1204,   663,  1204,   662,    -1,   195,
     661,  1204,   663,  1204,   663,  1204,   662,    -1,   335,   661,
    1204,   662,    -1,   345,   661,  1204,   663,  1204,   662,    -1,
     404,   661,  1204,   662,    -1,   427,   661,  1204,   662,    -1,
     455,   661,  1204,   663,  1204,   662,    -1,   456,   661,  1204,
     663,  1204,   663,  1204,   662,    -1,   475,   661,  1204,   662,
      -1,   485,   661,   662,    -1,   590,   661,  1204,   663,  1204,
     662,    -1,   632,   661,  1204,   662,    -1,   632,   661,  1204,
     663,  1204,   662,    -1,   633,   661,  1204,  1033,   662,    -1,
     633,   661,  1204,    21,    62,  1023,  1033,   662,    -1,   633,
     661,  1204,    21,    35,  1023,   662,    -1,   633,   661,  1204,
     663,  1290,   663,  1290,   663,  1290,   662,    -1,  1218,    -1,
      93,   661,  1204,   663,  1204,   662,    -1,   205,   661,  1235,
     662,    -1,   279,   661,  1236,   662,    -1,   347,   661,  1236,
     662,    -1,   348,   661,  1236,   662,    -1,   349,   661,  1236,
     662,    -1,   409,   661,  1204,   663,  1204,   662,    -1,   410,
     661,  1236,   662,    -1,  1439,   661,  1223,   662,    -1,  1445,
     669,  1445,   661,  1235,   662,    -1,  1221,  1222,    -1,   249,
      44,   342,    -1,    -1,   249,   355,   265,   342,    -1,    -1,
     637,   428,   173,    -1,    -1,  1224,    -1,  1225,    -1,  1224,
     663,  1225,    -1,  1204,  1202,    -1,    29,   661,  1233,   662,
      -1,    29,   661,   140,  1233,   662,    -1,    38,   661,  1233,
     662,    -1,    39,   661,  1233,   662,    -1,    41,   661,  1233,
     662,    -1,    97,   661,  1271,   656,   662,    -1,    97,   661,
    1233,   662,    -1,    97,   661,   140,  1236,   662,    -1,   341,
     661,  1233,   662,    -1,   341,   661,   140,  1233,   662,    -1,
     324,   661,  1233,   662,    -1,   324,   661,   140,  1233,   662,
      -1,   545,   661,  1233,   662,    -1,   625,   661,  1233,   662,
      -1,   544,   661,  1233,   662,    -1,   627,   661,  1233,   662,
      -1,   557,   661,  1233,   662,    -1,   557,   661,   140,  1233,
     662,    -1,   213,   661,  1229,  1236,  1231,  1230,   662,    -1,
     668,  1228,    -1,  1447,   502,  1204,    -1,  1447,    -1,   668,
    1459,  1447,  1066,    -1,    -1,   140,    -1,    -1,   495,  1423,
      -1,    -1,   388,    48,  1232,    -1,  1232,   663,  1431,    -1,
    1431,    -1,  1271,  1204,    -1,    35,  1000,    -1,    62,  1000,
    1021,    -1,   357,  1000,    -1,   509,    -1,   509,   247,    -1,
     607,    -1,   607,   247,    -1,   115,    -1,   579,   994,    -1,
     112,   994,    -1,   123,   992,    -1,   260,    -1,    -1,  1236,
      -1,  1204,    -1,  1236,   663,  1204,    -1,  1238,    -1,   661,
    1238,   662,    -1,  1432,    -1,  1238,   663,  1432,    -1,    -1,
    1204,    -1,    -1,   150,  1204,    -1,   634,  1204,   575,  1204,
      -1,  1241,   634,  1204,   575,  1204,    -1,  1250,    -1,  1246,
      -1,  1245,    -1,  1242,    -1,   665,  1445,  1242,   666,    -1,
    1244,    -1,  1245,   663,  1244,    -1,  1242,  1247,  1242,    -1,
    1242,   549,  1250,    -1,  1242,  1247,  1242,   378,  1204,    -1,
    1242,   549,  1250,   378,  1204,    -1,  1242,  1247,  1242,   615,
     661,  1265,   662,    -1,  1242,   355,   258,  1250,    -1,  1242,
     271,  1255,   258,  1242,   378,  1204,    -1,  1242,   271,  1255,
     258,  1250,   615,   661,  1265,   662,    -1,  1242,   355,   271,
    1255,   258,  1250,    -1,  1242,   477,  1255,   258,  1242,   378,
    1204,    -1,  1242,   477,  1255,   258,  1250,   615,   661,  1265,
     662,    -1,  1242,   355,   477,  1255,   258,  1250,    -1,   258,
      -1,   238,   258,    -1,   100,   258,    -1,    -1,  1249,    -1,
     401,   661,  1265,   662,    -1,  1436,  1248,  1270,  1261,    -1,
     493,  1196,  1200,  1192,    -1,   661,  1251,   662,  1270,    -1,
    1254,  1533,    -1,  1251,   603,  1536,  1537,    -1,    -1,  1253,
    1541,  1200,    -1,  1245,    -1,    -1,   391,    -1,    -1,   194,
     258,    -1,   194,   388,    48,    -1,   194,   212,    48,    -1,
     192,    -1,   231,    -1,  1257,  1043,  1256,   661,  1264,   662,
      -1,   614,  1043,  1256,   661,  1262,   662,    -1,  1258,    -1,
    1259,  1258,    -1,    -1,  1259,    -1,  1260,    -1,    -1,  1264,
      -1,  1445,    -1,   418,    -1,  1263,    -1,  1264,   663,  1263,
      -1,  1445,    -1,  1265,   663,  1445,    -1,  1267,    -1,   116,
      -1,   117,    -1,   118,    -1,   119,    -1,   223,    -1,   224,
      -1,   225,    -1,   337,    -1,   338,    -1,   490,    -1,   649,
      -1,   120,    -1,   632,    -1,   226,    -1,   339,    -1,   346,
      -1,   427,    -1,   491,    -1,   335,    -1,   650,    -1,   115,
      -1,   579,    -1,   576,    -1,   112,    -1,    -1,    21,    -1,
     160,    -1,    -1,  1269,  1445,    -1,    -1,    13,    -1,    -1,
     635,  1204,    -1,    -1,   217,  1204,    -1,   165,  1214,    -1,
      -1,    -1,   212,    48,  1276,  1277,    -1,  1276,   663,  1431,
      -1,  1431,    -1,    -1,   638,    -1,   639,    -1,   388,    48,
    1279,    -1,  1279,   663,  1280,    -1,  1280,    -1,  1433,  1284,
      -1,    -1,  1282,    -1,   388,    48,  1283,    -1,  1283,   663,
    1431,    -1,  1431,    -1,    -1,    22,    -1,   131,    -1,    -1,
    1286,    -1,   276,  1287,    -1,  1288,    -1,  1288,   663,  1288,
      -1,  1288,   377,  1288,    -1,  1445,    -1,  1424,    -1,   594,
      -1,   290,    -1,   373,    -1,    -1,   276,  1288,    -1,   373,
      -1,   219,    -1,   290,    -1,   594,    -1,   122,    -1,   188,
      -1,   373,    -1,   219,    -1,   290,    -1,   594,    -1,  1294,
      -1,   373,    -1,   594,    -1,   290,    -1,   122,    -1,   188,
      -1,   373,    -1,   594,    -1,   290,    -1,  1294,    -1,  1295,
      -1,   122,    -1,   188,    -1,    -1,   420,    16,   661,  1297,
     662,    -1,    -1,  1298,    -1,  1298,   663,  1298,    -1,   373,
      -1,  1299,   663,  1300,    -1,  1300,    -1,   668,  1447,    -1,
    1447,    -1,    -1,  1302,    -1,   246,  1303,    -1,   392,  1444,
    1011,  1407,  1410,    -1,   146,  1444,    -1,  1299,    -1,   143,
    1305,  1200,    -1,    -1,    -1,   144,  1315,  1474,  1314,  1307,
    1311,  1121,    -1,    -1,    -1,   144,   235,  1445,   378,  1436,
    1308,  1309,  1116,    -1,   144,   108,  1314,  1445,    -1,   144,
     200,  1314,  1445,   669,  1445,    -1,   144,   200,  1314,  1445,
      -1,   144,   420,  1314,   737,    -1,   144,   612,  1314,   735,
    1509,    -1,    -1,   144,   628,  1314,  1310,  1311,  1121,    -1,
     144,   167,  1314,   737,    -1,   144,   587,  1314,   737,    -1,
     144,   564,   872,  1316,    -1,   144,   286,   212,   873,  1316,
      -1,   144,   499,  1314,  1447,    -1,  1312,    -1,  1311,   663,
    1312,    -1,  1436,    -1,  1437,    -1,  1313,   663,  1437,    -1,
      -1,   230,   171,    -1,    -1,   569,    -1,    -1,  1317,    -1,
    1318,    -1,  1317,  1318,    -1,  1316,   663,  1318,    -1,   883,
      -1,   885,    -1,   241,  1321,  1120,  1323,  1436,  1248,  1324,
    1337,    -1,   241,  1321,  1120,  1323,  1436,  1248,   501,  1339,
    1337,    -1,   241,  1321,  1120,  1323,  1436,  1248,  1325,  1337,
      -1,   456,  1322,  1323,  1436,  1248,  1324,    -1,   456,  1322,
    1323,  1436,  1248,   501,  1339,    -1,   456,  1322,  1323,  1436,
    1248,  1325,    -1,    -1,   293,    -1,   128,    -1,   220,    -1,
    1341,    -1,   128,    -1,    -1,   246,    -1,  1327,    -1,   661,
     662,  1327,    -1,   661,  1326,   662,  1327,    -1,  1328,    -1,
     661,   662,  1328,    -1,   661,  1326,   662,  1328,    -1,  1326,
     663,  1429,    -1,  1429,    -1,  1329,  1330,    -1,   942,  1530,
      -1,   661,   942,   662,  1532,    -1,   621,    -1,   620,    -1,
    1330,   663,  1333,    -1,  1333,    -1,   160,    -1,   502,    -1,
      -1,  1331,    -1,   661,  1334,   662,    -1,    -1,  1335,    -1,
    1335,   663,  1336,    -1,  1336,    -1,  1204,    -1,   125,    -1,
      -1,   378,   147,   263,   609,  1339,    -1,   609,  1341,  1120,
    1243,   501,  1339,  1272,  1281,  1289,    -1,  1339,   663,  1340,
      -1,  1340,    -1,  1433,  1331,  1336,    -1,    -1,   293,    -1,
     130,  1344,   197,  1436,  1248,  1272,  1281,  1289,    -1,   130,
    1344,  1313,   197,  1243,  1272,    -1,   130,  1344,   197,  1313,
     615,  1243,  1272,    -1,    -1,   669,   656,    -1,    -1,  1345,
    1344,    -1,   429,    -1,   293,    -1,   231,    -1,    -1,   590,
    1348,  1347,  1312,    -1,    -1,   566,    -1,    -1,  1350,    -1,
    1351,    -1,  1350,   663,  1351,    -1,    98,    -1,   332,    -1,
      43,   252,    -1,    94,   561,    -1,   396,   181,    -1,   253,
      -1,   560,    -1,   518,    -1,    13,    -1,    -1,   194,   428,
     373,    -1,    -1,   506,  1354,  1355,    -1,   109,  1366,    -1,
    1362,   563,  1361,  1366,    -1,  1362,   586,  1361,  1366,    -1,
     166,  1361,  1366,    -1,   566,   543,  1361,  1366,    -1,   381,
     563,  1361,  1366,    -1,   408,    -1,   158,   959,  1358,    -1,
     158,    13,  1358,    -1,  1362,    73,  1363,  1436,  1361,  1366,
      -1,  1359,   287,    -1,   511,   222,    -1,    -1,    36,   166,
    1364,  1365,  1356,  1285,    -1,    -1,   444,   166,  1364,  1365,
    1357,  1285,   709,    -1,  1045,  1363,  1436,  1361,  1272,    -1,
    1360,   157,    -1,   419,    -1,    97,   661,   656,   662,   631,
      -1,    97,   661,   656,   662,   163,    -1,   631,  1285,    -1,
     163,  1285,    -1,   424,    -1,   423,  1349,  1352,  1285,    -1,
    1458,   543,  1367,    -1,  1362,   422,    -1,  1458,   624,  1367,
      -1,  1008,  1366,    -1,    72,  1366,    -1,   211,    -1,   211,
     194,  1448,    -1,    99,   108,   950,  1445,    -1,    99,   566,
    1436,    -1,    99,   628,  1436,    -1,   316,   543,    -1,   511,
     543,   709,    -1,    99,   420,   737,    -1,    99,   200,   737,
      -1,    99,   587,   737,    -1,   420,   543,  1366,    -1,   200,
     543,  1366,    -1,   420,    70,   737,    -1,   200,    70,   737,
      -1,    99,   167,   737,    -1,    99,   612,   735,  1448,    -1,
     543,    -1,   350,    -1,   287,    -1,   316,    -1,    35,    -1,
      -1,   547,    -1,    -1,  1363,  1445,    -1,    -1,   198,    -1,
     197,    -1,   249,    -1,    -1,   249,  1442,    -1,    -1,   197,
    1292,    -1,    -1,   275,  1442,    -1,   635,  1204,    -1,    -1,
     275,  1442,    -1,   635,  1204,    -1,    -1,  1372,  1436,  1369,
    1374,    -1,    -1,  1372,  1373,  1370,  1371,    -1,  1185,    -1,
    1319,    -1,  1320,    -1,  1338,    -1,  1342,    -1,   194,    87,
    1291,    -1,   131,    -1,   132,    -1,    -1,   176,    -1,   402,
      -1,   195,   160,  1447,    -1,    -1,  1423,    -1,  1445,    -1,
      -1,   190,  1161,  1376,  1377,    -1,    -1,    -1,  1474,  1378,
    1384,  1379,  1380,    -1,  1382,    -1,    -1,   637,   433,   285,
      -1,    -1,   194,  1381,   175,    -1,  1382,   663,  1383,    -1,
    1383,    -1,   162,   287,    -1,   158,   287,    -1,   202,   287,
      -1,   512,   287,    -1,    35,   287,    -1,   443,   287,   709,
      -1,   428,    50,    -1,   222,    -1,   419,    -1,   287,    -1,
     543,    -1,   133,    -1,   468,    -1,   383,    -1,    -1,  1311,
      -1,    -1,   466,  1386,  1387,    -1,  1387,   663,  1388,    -1,
    1388,    -1,    -1,   511,  1389,  1390,   709,    -1,   316,    -1,
     428,    50,    -1,    -1,    13,    -1,    -1,   426,  1392,  1393,
      -1,  1359,   287,  1394,    -1,   583,  1442,    -1,    31,  1204,
      -1,   264,  1396,  1204,    -1,    -1,    87,    -1,   428,    -1,
     614,  1445,    -1,    -1,    -1,    -1,    -1,   281,  1403,  1399,
    1405,  1404,   236,  1444,  1400,  1406,   246,   566,  1436,  1248,
    1401,  1011,  1402,  1413,  1407,  1410,  1414,  1416,  1419,    -1,
     111,    -1,   647,    -1,    -1,   282,    -1,    -1,    85,    -1,
     293,    -1,    -1,   456,    -1,   231,    -1,    -1,    73,  1408,
      -1,  1408,  1409,    -1,  1409,    -1,   571,    48,  1423,    -1,
     386,   153,    48,  1423,    -1,   153,    48,  1423,    -1,   164,
      48,  1423,    -1,    -1,   278,  1411,    -1,  1411,  1412,    -1,
    1412,    -1,   571,    48,  1423,    -1,   537,    48,  1423,    -1,
      -1,   482,   228,    48,  1423,    -1,    -1,   231,   373,  1415,
      -1,   278,    -1,   482,    -1,    -1,   661,  1417,   662,    -1,
     661,   662,    -1,  1417,   663,  1418,    -1,  1418,    -1,  1433,
      -1,   668,  1447,    -1,    -1,   501,  1420,    -1,  1420,   663,
    1421,    -1,  1421,    -1,  1433,  1331,  1336,    -1,   572,    -1,
     356,    -1,   597,   572,    -1,  1422,  1443,    -1,  1443,    -1,
     219,    -1,    37,    -1,   397,    -1,  1426,    -1,   655,  1427,
      -1,   654,  1427,    -1,  1422,    -1,  1427,    -1,  1428,    -1,
     372,    -1,   179,    -1,   589,    -1,   219,    -1,    37,    -1,
     597,   219,    -1,   597,    37,    -1,   373,    -1,   290,    -1,
     594,    -1,   122,    -1,   188,    -1,   115,   572,    -1,   579,
     572,    -1,   576,   572,    -1,  1433,    -1,  1430,    -1,  1445,
     669,   656,    -1,  1445,   669,  1445,   669,   656,    -1,  1204,
    1284,    -1,  1445,    -1,  1434,    -1,  1445,    -1,  1434,    -1,
    1445,   669,  1445,    -1,   669,  1445,   669,  1445,    -1,  1445,
     669,  1445,   669,  1445,    -1,  1445,    -1,  1445,   669,  1445,
     669,  1445,    -1,  1445,   669,  1445,    -1,   669,  1445,    -1,
    1445,    -1,  1445,   669,  1445,    -1,   669,  1445,    -1,  1445,
    1343,    -1,  1445,   669,  1445,  1343,    -1,  1445,    -1,   227,
      -1,   229,    -1,  1442,    -1,  1440,    -1,   572,    -1,   572,
      -1,   572,    -1,  1439,    -1,  1449,    -1,  1439,    -1,  1450,
      -1,  1445,    -1,  1442,    -1,   274,    -1,  1447,    -1,  1447,
     668,  1447,    -1,   104,  1203,    -1,  1450,    -1,     5,    -1,
      23,    -1,    15,    -1,    30,    -1,    32,    -1,    49,    -1,
      50,    -1,    61,    -1,    63,    -1,    68,    -1,    77,    -1,
      79,    -1,    93,    -1,   121,    -1,   143,    -1,   154,    -1,
     170,    -1,   190,    -1,   191,    -1,   195,    -1,   204,    -1,
     215,    -1,   218,    -1,   221,    -1,   244,    -1,   265,    -1,
     369,    -1,   381,    -1,   384,    -1,   394,    -1,   398,    -1,
     399,    -1,   411,    -1,   413,    -1,   415,    -1,   450,    -1,
     453,    -1,   466,    -1,   469,    -1,   478,    -1,   487,    -1,
     492,    -1,   499,    -1,   507,    -1,   509,    -1,   515,    -1,
     511,    -1,   516,    -1,   539,    -1,   546,    -1,   590,    -1,
     601,    -1,   602,    -1,   642,    -1,   645,    -1,   610,    -1,
       6,    -1,     8,    -1,     9,    -1,    10,    -1,    11,    -1,
      12,    -1,    16,    -1,    20,    -1,    25,    -1,    27,    -1,
      26,    -1,    28,    -1,    29,    -1,    36,    -1,    40,    -1,
      43,    -1,    45,    -1,    44,    -1,    47,    -1,    53,    -1,
      56,    -1,    57,    -1,    59,    -1,    60,    -1,    65,    -1,
      67,    -1,    66,    -1,    69,    -1,    70,    -1,    72,    -1,
      76,    -1,    75,    -1,    73,    -1,    78,    -1,    80,    -1,
      81,    -1,    82,    -1,    83,    -1,    84,    -1,    85,    -1,
      87,    -1,    88,    -1,    90,    -1,    92,    -1,    91,    -1,
      94,    -1,    98,    -1,   101,    -1,   103,    -1,   106,    -1,
     111,    -1,   110,    -1,   112,    -1,   115,    -1,   120,    -1,
     126,    -1,   127,    -1,   129,    -1,   133,    -1,   135,    -1,
     136,    -1,   137,    -1,   138,    -1,   139,    -1,   146,    -1,
     147,    -1,   148,    -1,   155,    -1,   159,    -1,   158,    -1,
     157,    -1,   162,    -1,   163,    -1,   165,    -1,   167,    -1,
     166,    -1,   168,    -1,   169,    -1,   173,    -1,   174,    -1,
     175,    -1,   176,    -1,   177,    -1,   181,    -1,   180,    -1,
     196,    -1,   152,    -1,   198,    -1,   183,    -1,   184,    -1,
     185,    -1,   186,    -1,   187,    -1,   202,    -1,   206,    -1,
     205,    -1,   207,    -1,   211,    -1,   209,    -1,   216,    -1,
     222,    -1,   226,    -1,   228,    -1,   232,    -1,   248,    -1,
     233,    -1,   234,    -1,   237,    -1,   243,    -1,   252,    -1,
     253,    -1,   255,    -1,   256,    -1,   242,    -1,   260,    -1,
     262,    -1,   266,    -1,   269,    -1,   272,    -1,   273,    -1,
     279,    -1,   280,    -1,   282,    -1,   284,    -1,   286,    -1,
     287,    -1,   322,    -1,   316,    -1,   318,    -1,   299,    -1,
     303,    -1,   300,    -1,   301,    -1,   317,    -1,   302,    -1,
     305,    -1,   297,    -1,   304,    -1,   298,    -1,   314,    -1,
     308,    -1,   306,    -1,   307,    -1,   309,    -1,   310,    -1,
     311,    -1,   312,    -1,   313,    -1,   295,    -1,   320,    -1,
     321,    -1,   323,    -1,   325,    -1,   326,    -1,   331,    -1,
     332,    -1,   333,    -1,   334,    -1,   335,    -1,   336,    -1,
     339,    -1,   340,    -1,   344,    -1,   342,    -1,   346,    -1,
     347,    -1,   348,    -1,   349,    -1,   350,    -1,   351,    -1,
     353,    -1,   352,    -1,   354,    -1,   357,    -1,   358,    -1,
     361,    -1,   363,    -1,   362,    -1,   370,    -1,   364,    -1,
     365,    -1,   374,    -1,   376,    -1,   377,    -1,   379,    -1,
     380,    -1,   395,    -1,   396,    -1,   400,    -1,   403,    -1,
     402,    -1,   404,    -1,   405,    -1,   406,    -1,   407,    -1,
     408,    -1,   409,    -1,   410,    -1,   416,    -1,   417,    -1,
     419,    -1,   421,    -1,   422,    -1,   423,    -1,   424,    -1,
     425,    -1,   427,    -1,   428,    -1,   429,    -1,   432,    -1,
     436,    -1,   437,    -1,   439,    -1,   438,    -1,   440,    -1,
     443,    -1,   444,    -1,   445,    -1,   446,    -1,   447,    -1,
     449,    -1,   452,    -1,   454,    -1,   457,    -1,   458,    -1,
     459,    -1,   460,    -1,   461,    -1,   462,    -1,   463,    -1,
     464,    -1,   468,    -1,   471,    -1,   472,    -1,   473,    -1,
     475,    -1,   479,    -1,   480,    -1,   481,    -1,   482,    -1,
     485,    -1,   483,    -1,   484,    -1,   486,    -1,   488,    -1,
     489,    -1,   491,    -1,   497,    -1,   496,    -1,   498,    -1,
     510,    -1,   503,    -1,   512,    -1,   514,    -1,   517,    -1,
     518,    -1,   524,    -1,   525,    -1,   526,    -1,   529,    -1,
     528,    -1,   531,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,    -1,   541,    -1,   542,    -1,   543,    -1,   547,    -1,
     550,    -1,   551,    -1,   552,    -1,   553,    -1,   555,    -1,
     554,    -1,   558,    -1,   559,    -1,   560,    -1,   561,    -1,
     568,    -1,   563,    -1,   567,    -1,   564,    -1,   569,    -1,
     570,    -1,   573,    -1,   574,    -1,   585,    -1,   586,    -1,
     576,    -1,   577,    -1,   578,    -1,   579,    -1,   591,    -1,
     592,    -1,   593,    -1,   200,    -1,   595,    -1,   596,    -1,
     599,    -1,   598,    -1,   605,    -1,   608,    -1,   612,    -1,
     613,    -1,   619,    -1,   624,    -1,   628,    -1,   621,    -1,
     631,    -1,   630,    -1,   632,    -1,   640,    -1,   641,    -1,
     633,    -1,   644,    -1,   646,    -1,   647,    -1,   650,    -1,
     501,  1452,    -1,  1461,  1454,    -1,   585,  1463,    -1,  1457,
    1453,    -1,   404,  1331,  1470,    -1,   404,  1331,   404,   661,
    1470,   662,    -1,   404,   194,  1448,  1331,  1470,    -1,   404,
     194,  1448,  1331,   404,   661,  1470,   662,    -1,  1460,  1454,
      -1,   585,  1463,    -1,    -1,   663,  1455,    -1,  1456,    -1,
    1455,   663,  1456,    -1,  1457,  1460,    -1,  1461,    -1,   209,
      -1,   282,    -1,   498,    -1,    -1,   209,    -1,   282,    -1,
     498,    -1,    -1,   209,   669,    -1,   282,   669,    -1,   498,
     669,    -1,  1462,  1331,  1471,    -1,  1462,  1331,  1471,    -1,
     668,  1447,  1331,  1204,    -1,   668,   668,  1459,  1462,  1331,
    1471,    -1,  1008,  1013,    -1,   352,  1331,  1204,    -1,   352,
    1010,  1015,    -1,  1445,    -1,  1445,   669,  1445,    -1,   125,
     669,  1445,    -1,  1464,  1467,    -1,  1466,  1465,    -1,  1468,
      -1,    -1,   663,  1464,    -1,   255,   273,  1469,    -1,    -1,
     663,  1466,    -1,   433,   380,    -1,   433,   643,    -1,   433,
     595,    -1,   433,    78,    -1,   454,   433,    -1,   496,    -1,
     572,    -1,  1204,    -1,   125,    -1,   378,    -1,    13,    -1,
      35,    -1,    -1,   285,  1474,  1473,  1475,    -1,   566,    -1,
     563,    -1,  1476,    -1,  1475,   663,  1476,    -1,  1436,  1270,
    1477,    -1,   433,    -1,   643,    -1,   293,   643,    -1,   433,
     282,    -1,    -1,   606,  1479,  1474,    -1,   507,    -1,    14,
     243,  1482,    -1,   480,  1447,   316,   263,    -1,   215,  1436,
     381,  1270,    -1,   215,  1438,    68,    -1,    -1,   215,  1438,
     433,  1484,  1485,  1272,  1285,    -1,  1486,    -1,  1445,  1487,
      -1,   186,    -1,   363,    -1,   186,    -1,   363,    -1,   417,
      -1,   266,    -1,    -1,  1489,  1488,   661,  1335,   662,    -1,
     160,    -1,   201,    -1,   267,    -1,   214,    -1,   294,    -1,
      -1,   476,   735,  1491,  1492,    -1,  1497,   378,  1496,  1508,
     197,  1509,    -1,  1497,   378,   200,  1508,   197,  1509,    -1,
    1497,   378,   420,  1508,   197,  1509,    -1,    13,  1498,   663,
     210,   385,   197,  1509,    -1,   425,   378,  1448,   197,  1509,
      -1,    -1,   210,   735,  1494,  1495,    -1,  1497,   378,  1496,
    1508,   583,  1510,  1515,  1516,    -1,  1497,   378,   200,  1508,
     583,  1510,  1515,  1516,    -1,  1497,   378,   420,  1508,   583,
    1510,  1515,  1516,    -1,   425,   378,  1448,   583,  1510,  1517,
      -1,    -1,   566,    -1,  1499,    -1,    13,  1498,    -1,    -1,
     419,    -1,  1500,    -1,  1499,   663,  1500,    -1,    -1,   493,
    1501,  1512,    -1,    -1,   241,  1502,  1512,    -1,    -1,   609,
    1503,  1512,    -1,    -1,   441,  1504,  1512,    -1,   130,    -1,
     611,    -1,   235,    -1,    14,    -1,    99,    -1,   144,    -1,
     170,    -1,   449,    -1,   507,    -1,   421,    -1,   183,    -1,
     210,   385,    -1,   506,   109,    -1,   558,    -1,    99,   569,
     563,    -1,   285,   563,    -1,   457,   511,    -1,   457,    67,
      -1,    99,   628,    -1,   506,   628,    -1,    99,   481,    -1,
      14,   481,    -1,    99,   612,    -1,   167,    -1,   587,    -1,
      99,   564,    -1,    -1,    19,    -1,  1507,  1505,  1506,    -1,
    1507,    -1,   553,   572,    -1,   256,   572,    -1,    65,   572,
      -1,   656,    -1,  1445,   669,   656,    -1,   656,   669,   656,
      -1,  1436,    -1,  1448,    -1,  1509,   663,  1448,    -1,  1511,
      -1,  1510,   663,  1511,    -1,  1448,   228,    48,   572,    -1,
    1448,   228,    48,   404,   572,    -1,  1448,   228,   637,  1447,
      -1,  1448,   228,   637,  1447,    21,  1442,    -1,  1448,   228,
     637,  1447,    48,  1442,    -1,  1448,    -1,    -1,   661,  1513,
     662,    -1,  1513,   663,  1514,    -1,  1514,    -1,  1445,    -1,
      -1,   465,  1506,    -1,   465,   535,    -1,   465,   644,    -1,
     465,   365,    -1,    -1,   637,  1518,    -1,    -1,   637,   210,
     385,    -1,  1518,  1519,    -1,  1519,    -1,   210,   385,    -1,
     321,  1290,    -1,   325,  1290,    -1,   320,  1290,    -1,   326,
    1290,    -1,    -1,    32,  1521,  1522,    -1,    -1,   641,    -1,
      -1,    19,   369,    57,    -1,    19,    57,    -1,    -1,   448,
      -1,   369,   448,    -1,    -1,   487,    -1,    79,  1522,  1523,
    1524,    -1,   478,  1522,  1523,  1524,    -1,   478,  1522,   583,
    1525,  1445,    -1,   487,  1445,    -1,   448,   487,  1445,    -1,
      -1,  1531,    -1,   603,  1536,  1186,    -1,    -1,  1531,    -1,
    1534,    -1,    -1,  1534,    -1,  1535,    -1,  1282,  1285,    -1,
    1286,    -1,    -1,   140,    -1,    13,    -1,   493,  1252,  1192,
      -1,   661,  1188,   662,  1533,    -1,  1537,    -1,  1538,   603,
    1536,  1537,    -1,    -1,  1540,  1538,    -1,    -1,  1542,    -1,
    1542,  1543,    -1,  1543,    -1,   549,    -1,   220,    -1,   140,
      -1,   532,    -1,   527,    -1,   528,    -1,   530,    -1,    13,
      -1,  1549,  1545,    -1,  1548,  1546,    -1,  1550,  1547,  1554,
      -1,  1554,    -1,  1569,    -1,  1578,    -1,  1572,    -1,   722,
      -1,  1554,    -1,  1569,    -1,  1578,    -1,  1572,    -1,  1571,
      -1,   722,    -1,  1548,    -1,  1549,    -1,    -1,   127,   160,
    1448,    -1,  1551,    -1,  1551,  1552,    -1,  1552,    -1,   390,
     456,    -1,    12,   160,   596,    -1,    12,   160,   333,    -1,
      12,   160,   570,    -1,    -1,   533,   492,   127,    -1,   533,
     492,   248,    -1,    -1,  1553,   628,  1436,  1555,  1556,    21,
    1558,    -1,    -1,   661,  1557,   662,    -1,  1445,    -1,  1557,
     663,  1445,    -1,    -1,  1559,  1560,  1566,    -1,    -1,  1564,
    1561,  1530,    -1,   661,  1562,   662,  1532,    -1,    -1,  1563,
    1564,    -1,   661,  1562,   662,    -1,    -1,   493,  1565,  1189,
      -1,    -1,   637,    64,   385,    -1,   637,    53,    64,   385,
      -1,   637,   282,    64,   385,    -1,   191,    -1,   413,    -1,
      -1,  1567,  1447,    -1,    -1,   587,   737,   843,   844,   378,
    1436,   194,   149,   484,  1568,  1570,   792,    -1,    11,   200,
    1445,   473,   962,   516,  1442,    -1,   200,  1445,   473,   962,
     516,  1442,    -1,    -1,    -1,    -1,    -1,    -1,   200,   737,
     661,  1573,   748,   662,  1574,   473,  1575,  1005,  1576,   739,
    1577,   792,    -1,    -1,    -1,    -1,    -1,   420,   737,  1579,
     661,  1580,   752,   662,  1581,   739,  1582,   792,    -1,   645,
    1586,  1585,  1587,    -1,   645,   154,  1585,  1589,    -1,   645,
     415,  1585,    -1,   645,    79,  1585,  1588,    -1,   645,   478,
    1585,    -1,   645,   437,  1584,    -1,    -1,    96,   646,    -1,
    1423,    -1,  1423,   663,  1423,    -1,  1423,   663,  1423,   663,
    1290,    -1,    32,    -1,   539,    -1,    -1,   258,    -1,   471,
      -1,    -1,   379,   405,    -1,    -1,   559,    -1,   559,   194,
     336,    -1,   244,   407,  1445,   516,  1442,    -1,   602,   407,
    1445,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1590,  1590,  1603,  1602,  1627,  1634,  1636,  1640,  1641,
    1646,  1647,  1648,  1649,  1650,  1651,  1652,  1653,  1654,  1655,
    1656,  1657,  1658,  1659,  1660,  1661,  1662,  1663,  1664,  1665,
    1666,  1667,  1668,  1669,  1670,  1671,  1672,  1673,  1674,  1675,
    1676,  1677,  1678,  1679,  1680,  1681,  1682,  1683,  1684,  1685,
    1686,  1687,  1688,  1689,  1690,  1691,  1692,  1693,  1694,  1695,
    1696,  1697,  1698,  1699,  1700,  1704,  1714,  1715,  1719,  1739,
    1746,  1757,  1756,  1767,  1769,  1773,  1774,  1778,  1791,  1790,
    1810,  1809,  1823,  1822,  1837,  1838,  1841,  1848,  1855,  1862,
    1869,  1876,  1884,  1893,  1899,  1906,  1913,  1921,  1931,  1937,
    1943,  1951,  1959,  1965,  1972,  1979,  1987,  2000,  2006,  2013,
    2020,  2028,  2039,  2040,  2044,  2048,  2052,  2056,  2066,  2070,
    2074,  2079,  2090,  2095,  2099,  2103,  2107,  2111,  2115,  2119,
    2124,  2128,  2133,  2166,  2171,  2178,  2181,  2183,  2184,  2188,
    2194,  2198,  2214,  2218,  2229,  2233,  2251,  2250,  2296,  2301,
    2295,  2308,  2313,  2306,  2320,  2325,  2318,  2331,  2330,  2343,
    2342,  2350,  2357,  2361,  2365,  2377,  2378,  2382,  2386,  2390,
    2394,  2398,  2403,  2407,  2415,  2414,  2446,  2445,  2454,  2463,
    2464,  2470,  2476,  2486,  2492,  2500,  2502,  2511,  2512,  2516,
    2522,  2531,  2532,  2540,  2540,  2598,  2599,  2600,  2601,  2602,
    2603,  2604,  2605,  2606,  2607,  2608,  2609,  2610,  2614,  2632,
    2642,  2656,  2675,  2676,  2680,  2681,  2686,  2688,  2690,  2692,
    2694,  2696,  2698,  2704,  2705,  2706,  2710,  2714,  2722,  2721,
    2734,  2736,  2739,  2741,  2745,  2751,  2760,  2762,  2766,  2767,
    2772,  2791,  2821,  2823,  2827,  2828,  2832,  2861,  2862,  2863,
    2864,  2868,  2869,  2873,  2874,  2879,  2882,  2910,  2908,  2993,
    3011,  3010,  3090,  3086,  3164,  3165,  3170,  3172,  3177,  3200,
    3211,  3215,  3237,  3238,  3242,  3246,  3259,  3265,  3271,  3280,
    3293,  3319,  3325,  3326,  3332,  3333,  3338,  3344,  3357,  3359,
    3379,  3385,  3387,  3389,  3391,  3393,  3395,  3397,  3399,  3401,
    3403,  3405,  3407,  3412,  3426,  3443,  3444,  3446,  3451,  3457,
    3466,  3472,  3481,  3489,  3517,  3525,  3527,  3536,  3541,  3547,
    3556,  3564,  3566,  3568,  3570,  3572,  3574,  3576,  3578,  3580,
    3582,  3584,  3586,  3588,  3593,  3613,  3637,  3639,  3638,  3649,
    3650,  3651,  3652,  3653,  3654,  3655,  3656,  3657,  3658,  3659,
    3660,  3661,  3666,  3665,  3676,  3676,  3732,  3731,  3790,  3790,
    3812,  3871,  3921,  3946,  3945,  3971,  3994,  3996,  3997,  4001,
    4019,  4040,  4049,  4088,  4040,  4117,  4119,  4120,  4124,  4125,
    4130,  4141,  4129,  4194,  4193,  4207,  4208,  4212,  4213,  4218,
    4227,  4217,  4278,  4287,  4277,  4333,  4346,  4351,  4350,  4388,
    4389,  4394,  4393,  4427,  4427,  4446,  4445,  4495,  4512,  4521,
    4511,  4580,  4589,  4577,  4632,  4634,  4639,  4641,  4643,  4660,
    4665,  4671,  4678,  4679,  4687,  4693,  4702,  4708,  4714,  4715,
    4719,  4719,  4724,  4725,  4726,  4730,  4731,  4732,  4735,  4737,
    4741,  4742,  4743,  4747,  4748,  4749,  4750,  4751,  4752,  4753,
    4754,  4755,  4758,  4760,  4764,  4765,  4766,  4770,  4771,  4772,
    4773,  4774,  4777,  4779,  4783,  4784,  4785,  4789,  4790,  4791,
    4792,  4793,  4794,  4795,  4798,  4800,  4804,  4805,  4806,  4810,
    4811,  4812,  4817,  4825,  4833,  4841,  4853,  4865,  4870,  4875,
    4883,  4891,  4899,  4907,  4915,  4923,  4931,  4944,  4957,  4971,
    4985,  4990,  5003,  5004,  5055,  5056,  5059,  5074,  5092,  5097,
    5095,  5109,  5111,  5110,  5121,  5120,  5133,  5170,  5171,  5176,
    5175,  5194,  5193,  5210,  5214,  5222,  5221,  5224,  5226,  5228,
    5230,  5235,  5236,  5242,  5243,  5260,  5261,  5265,  5266,  5270,
    5289,  5299,  5315,  5329,  5330,  5346,  5348,  5347,  5352,  5350,
    5361,  5362,  5366,  5384,  5402,  5403,  5419,  5434,  5456,  5457,
    5462,  5461,  5485,  5495,  5517,  5516,  5534,  5533,  5553,  5575,
    5579,  5608,  5620,  5621,  5626,  5637,  5625,  5662,  5663,  5667,
    5680,  5703,  5716,  5742,  5743,  5748,  5747,  5784,  5789,  5790,
    5794,  5795,  5799,  5801,  5807,  5809,  5811,  5813,  5815,  5817,
    5826,  5833,  5834,  5838,  5839,  5843,  5844,  5848,  5849,  5853,
    5854,  5858,  5859,  5863,  5867,  5868,  5871,  5873,  5877,  5878,
    5882,  5883,  5884,  5888,  5893,  5898,  5903,  5908,  5913,  5918,
    5923,  5928,  5933,  5948,  5954,  5969,  5974,  5989,  5995,  6013,
    6018,  6023,  6028,  6033,  6039,  6038,  6064,  6065,  6066,  6071,
    6076,  6081,  6086,  6088,  6090,  6096,  6104,  6122,  6139,  6165,
    6183,  6184,  6185,  6186,  6187,  6188,  6192,  6193,  6194,  6198,
    6199,  6200,  6201,  6206,  6213,  6214,  6218,  6219,  6223,  6224,
    6231,  6236,  6242,  6248,  6254,  6273,  6279,  6281,  6285,  6293,
    6294,  6298,  6303,  6302,  6327,  6328,  6345,  6347,  6350,  6352,
    6356,  6357,  6361,  6367,  6373,  6374,  6375,  6376,  6384,  6386,
    6387,  6394,  6410,  6439,  6444,  6450,  6456,  6461,  6466,  6471,
    6476,  6483,  6490,  6497,  6504,  6510,  6516,  6523,  6530,  6536,
    6552,  6554,  6559,  6583,  6588,  6593,  6599,  6605,  6610,  6615,
    6620,  6626,  6632,  6639,  6645,  6651,  6657,  6663,  6670,  6669,
    6678,  6677,  6685,  6691,  6697,  6705,  6706,  6707,  6713,  6714,
    6715,  6716,  6717,  6721,  6725,  6726,  6730,  6731,  6735,  6736,
    6737,  6738,  6739,  6743,  6744,  6745,  6746,  6747,  6751,  6756,
    6758,  6764,  6768,  6773,  6777,  6786,  6787,  6791,  6792,  6793,
    6801,  6802,  6806,  6807,  6811,  6812,  6813,  6817,  6818,  6819,
    6820,  6823,  6824,  6829,  6833,  6837,  6838,  6842,  6843,  6847,
    6852,  6853,  6854,  6862,  6863,  6869,  6875,  6881,  6887,  6888,
    6901,  6907,  6913,  6919,  6924,  6929,  6938,  6959,  6965,  6972,
    6977,  6978,  6982,  6990,  6994,  6995,  6999,  7000,  7004,  7013,
    7017,  7018,  7022,  7030,  7031,  7035,  7036,  7040,  7041,  7045,
    7046,  7051,  7052,  7053,  7057,  7065,  7070,  7079,  7083,  7088,
    7093,  7098,  7103,  7108,  7116,  7117,  7122,  7121,  7134,  7135,
    7139,  7142,  7143,  7144,  7145,  7149,  7157,  7164,  7165,  7169,
    7179,  7180,  7184,  7185,  7188,  7190,  7194,  7206,  7207,  7211,
    7218,  7231,  7232,  7234,  7236,  7242,  7247,  7253,  7259,  7266,
    7276,  7277,  7278,  7279,  7280,  7284,  7288,  7289,  7293,  7294,
    7298,  7299,  7303,  7304,  7305,  7309,  7310,  7314,  7318,  7325,
    7337,  7338,  7342,  7343,  7347,  7348,  7352,  7353,  7357,  7358,
    7362,  7363,  7367,  7368,  7372,  7373,  7377,  7379,  7383,  7384,
    7388,  7392,  7393,  7407,  7408,  7409,  7413,  7414,  7418,  7424,
    7438,  7439,  7443,  7444,  7448,  7449,  7457,  7456,  7496,  7495,
    7509,  7523,  7522,  7541,  7540,  7559,  7558,  7577,  7571,  7591,
    7590,  7623,  7628,  7633,  7638,  7643,  7651,  7653,  7660,  7664,
    7673,  7674,  7678,  7679,  7683,  7689,  7695,  7701,  7715,  7721,
    7728,  7732,  7733,  7737,  7738,  7742,  7748,  7754,  7760,  7769,
    7783,  7784,  7785,  7786,  7790,  7791,  7803,  7804,  7808,  7809,
    7813,  7814,  7815,  7816,  7817,  7820,  7822,  7823,  7824,  7828,
    7836,  7851,  7852,  7856,  7865,  7863,  7877,  7891,  7890,  7904,
    7902,  7916,  7923,  7934,  7935,  7961,  7970,  7981,  7983,  7987,
    7991,  7999,  8006,  8010,  8015,  8014,  8030,  8032,  8037,  8045,
    8044,  8060,  8064,  8063,  8075,  8076,  8080,  8100,  8101,  8102,
    8106,  8107,  8111,  8120,  8124,  8129,  8131,  8130,  8141,  8151,
    8140,  8167,  8176,  8185,  8194,  8203,  8209,  8215,  8224,  8233,
    8263,  8273,  8294,  8304,  8308,  8313,  8320,  8321,  8322,  8325,
    8327,  8328,  8329,  8330,  8333,  8338,  8349,  8354,  8365,  8366,
    8370,  8371,  8375,  8376,  8377,  8381,  8382,  8387,  8395,  8396,
    8397,  8398,  8402,  8407,  8415,  8416,  8426,  8442,  8440,  8462,
    8479,  8482,  8489,  8493,  8500,  8504,  8508,  8515,  8520,  8523,
    8530,  8533,  8540,  8543,  8550,  8553,  8561,  8564,  8571,  8575,
    8582,  8586,  8594,  8598,  8624,  8625,  8626,  8631,  8636,  8644,
    8643,  8655,  8656,  8657,  8662,  8661,  8683,  8684,  8688,  8689,
    8693,  8694,  8695,  8700,  8699,  8721,  8730,  8729,  8756,  8757,
    8761,  8762,  8766,  8767,  8768,  8769,  8770,  8771,  8776,  8775,
    8797,  8798,  8799,  8804,  8803,  8809,  8816,  8821,  8829,  8830,
    8834,  8848,  8847,  8860,  8861,  8865,  8866,  8870,  8880,  8890,
    8891,  8896,  8895,  8906,  8907,  8911,  8912,  8916,  8926,  8937,
    8936,  8944,  8948,  8949,  8960,  8961,  8970,  8978,  8982,  8989,
    8993,  8998,  9002,  9011,  9019,  9024,  9054,  9054,  9068,  9082,
    9086,  9087,  9091,  9095,  9104,  9108,  9112,  9117,  9121,  9126,
    9135,  9147,  9148,  9154,  9163,  9169,  9175,  9185,  9186,  9194,
    9195,  9196,  9197,  9198,  9202,  9203,  9208,  9214,  9219,  9225,
    9229,  9233,  9237,  9241,  9245,  9249,  9253,  9257,  9261,  9265,
    9269,  9282,  9286,  9290,  9295,  9299,  9306,  9310,  9317,  9321,
    9325,  9333,  9337,  9344,  9348,  9353,  9357,  9361,  9365,  9369,
    9373,  9377,  9381,  9385,  9389,  9393,  9397,  9401,  9405,  9409,
    9413,  9417,  9418,  9422,  9423,  9427,  9428,  9432,  9433,  9437,
    9438,  9439,  9440,  9441,  9442,  9443,  9447,  9448,  9452,  9453,
    9454,  9455,  9456,  9457,  9461,  9462,  9463,  9464,  9465,  9469,
    9473,  9477,  9481,  9485,  9489,  9491,  9495,  9499,  9503,  9507,
    9511,  9515,  9519,  9523,  9527,  9531,  9535,  9539,  9544,  9560,
    9564,  9568,  9572,  9576,  9580,  9584,  9588,  9592,  9596,  9600,
    9604,  9608,  9612,  9616,  9620,  9624,  9628,  9633,  9638,  9643,
    9647,  9651,  9655,  9659,  9664,  9668,  9687,  9691,  9695,  9699,
    9703,  9708,  9713,  9717,  9721,  9726,  9730,  9734,  9738,  9742,
    9746,  9750,  9754,  9759,  9763,  9767,  9771,  9775,  9787,  9791,
    9795,  9799,  9803,  9807,  9811,  9815,  9819,  9823,  9827,  9831,
    9835,  9839,  9843,  9847,  9851,  9855,  9859,  9863,  9867,  9872,
    9877,  9881,  9885,  9891,  9897,  9903,  9909,  9915,  9921,  9925,
    9943,  9947,  9954,  9956,  9969,  9970,  9974,  9975,  9979,  9980,
    9984,  9990,  9999, 10006, 10010, 10014, 10018, 10022, 10026, 10030,
   10034, 10038, 10047, 10051, 10055, 10059, 10063, 10067, 10071, 10075,
   10079, 10083, 10093, 10097, 10101, 10105, 10112, 10113, 10118, 10123,
   10127, 10128, 10132, 10137, 10147, 10154, 10162, 10170, 10178, 10186,
   10194, 10202, 10210, 10218, 10226, 10234, 10242, 10253, 10254, 10258,
   10264, 10273, 10274, 10278, 10284, 10293, 10294, 10298, 10299, 10303,
   10311, 10322, 10323, 10330, 10344, 10345, 10351, 10352, 10372, 10376,
   10380, 10386, 10392, 10398, 10404, 10410, 10415, 10421, 10427, 10432,
   10439, 10440, 10441, 10449, 10450, 10454, 10469, 10473, 10495, 10522,
   10526, 10534, 10534, 10548, 10555, 10556, 10561, 10564, 10565, 10566,
   10570, 10571, 10575, 10581, 10590, 10591, 10599, 10600, 10604, 10609,
   10615, 10619, 10625, 10634, 10640, 10648, 10659, 10672, 10673, 10674,
   10675, 10676, 10677, 10678, 10679, 10680, 10681, 10682, 10683, 10687,
   10688, 10689, 10690, 10691, 10692, 10693, 10694, 10695, 10699, 10700,
   10701, 10702, 10705, 10707, 10708, 10712, 10713, 10721, 10723, 10727,
   10728, 10735, 10736, 10743, 10744, 10752, 10753, 10760, 10765, 10775,
   10776, 10784, 10799, 10803, 10804, 10808, 10828, 10829, 10833, 10840,
   10845, 10855, 10856, 10857, 10861, 10862, 10866, 10873, 10879, 10885,
   10894, 10898, 10902, 10906, 10910, 10917, 10918, 10922, 10923, 10924,
   10925, 10926, 10927, 10931, 10932, 10933, 10934, 10935, 10939, 10940,
   10941, 10942, 10943, 10947, 10948, 10949, 10950, 10954, 10959, 10960,
   10964, 10965, 10974, 10978, 10983, 10991, 11004, 11010, 11019, 11023,
   11030, 11031, 11035, 11042, 11048, 11052, 11060, 11072, 11084, 11083,
   11094, 11095, 11094, 11111, 11118, 11141, 11173, 11185, 11192, 11191,
   11201, 11207, 11214, 11219, 11224, 11233, 11234, 11238, 11249, 11255,
   11264, 11265, 11269, 11270, 11273, 11275, 11278, 11279, 11280, 11284,
   11285, 11292, 11306, 11324, 11341, 11353, 11369, 11384, 11385, 11386,
   11395, 11399, 11400, 11411, 11413, 11417, 11422, 11427, 11435, 11440,
   11445, 11453, 11459, 11468, 11475, 11479, 11486, 11487, 11491, 11496,
   11506, 11507, 11511, 11512, 11516, 11521, 11526, 11530, 11536, 11545,
   11546, 11554, 11558, 11567, 11583, 11590, 11602, 11610, 11611, 11617,
   11628, 11637, 11649, 11651, 11655, 11656, 11660, 11661, 11662, 11667,
   11666, 11685, 11687, 11690, 11692, 11695, 11696, 11699, 11703, 11707,
   11711, 11715, 11719, 11723, 11727, 11731, 11739, 11742, 11755, 11754,
   11763, 11770, 11778, 11786, 11794, 11802, 11810, 11817, 11819, 11821,
   11830, 11834, 11839, 11838, 11849, 11848, 11858, 11875, 11882, 11887,
   11893, 11899, 11907, 11915, 11923, 11933, 11964, 11966, 11997, 12004,
   12011, 12021, 12028, 12034, 12043, 12051, 12055, 12059, 12066, 12073,
   12079, 12086, 12093, 12098, 12103, 12108, 12117, 12119, 12121, 12126,
   12127, 12130, 12132, 12136, 12137, 12141, 12142, 12146, 12147, 12151,
   12152, 12156, 12157, 12160, 12162, 12169, 12179, 12181, 12188, 12216,
   12215, 12232, 12231, 12239, 12240, 12241, 12242, 12243, 12244, 12258,
   12259, 12264, 12268, 12274, 12280, 12301, 12302, 12303, 12318, 12317,
   12330, 12339, 12329, 12341, 12345, 12346, 12358, 12357, 12379, 12380,
   12385, 12387, 12389, 12391, 12393, 12395, 12397, 12399, 12401, 12403,
   12405, 12407, 12409, 12411, 12416, 12417, 12422, 12421, 12431, 12432,
   12436, 12436, 12438, 12439, 12443, 12444, 12449, 12448, 12459, 12463,
   12467, 12481, 12493, 12494, 12495, 12501, 12513, 12525, 12535, 12553,
   12512, 12564, 12565, 12569, 12570, 12574, 12575, 12576, 12580, 12581,
   12582, 12586, 12587, 12591, 12596, 12600, 12605, 12611, 12616, 12624,
   12625, 12629, 12634, 12638, 12643, 12651, 12652, 12655, 12657, 12665,
   12667, 12671, 12672, 12673, 12677, 12679, 12684, 12685, 12694, 12695,
   12699, 12700, 12704, 12727, 12732, 12737, 12742, 12750, 12758, 12765,
   12775, 12783, 12784, 12785, 12796, 12797, 12798, 12799, 12812, 12816,
   12820, 12824, 12828, 12832, 12839, 12843, 12847, 12851, 12855, 12863,
   12867, 12871, 12885, 12886, 12890, 12894, 12901, 12908, 12912, 12916,
   12920, 12924, 12928, 12932, 12939, 12940, 12956, 12966, 12970, 12976,
   12986, 12996, 13002, 13012, 13022, 13023, 13053, 13066, 13079, 13095,
   13111, 13128, 13129, 13140, 13141, 13152, 13153, 13154, 13158, 13186,
   13223, 13238, 13239, 13240, 13241, 13242, 13243, 13244, 13245, 13246,
   13247, 13248, 13249, 13250, 13251, 13252, 13253, 13254, 13255, 13256,
   13257, 13258, 13259, 13260, 13261, 13262, 13263, 13264, 13265, 13266,
   13267, 13268, 13269, 13270, 13271, 13272, 13273, 13274, 13275, 13276,
   13277, 13278, 13279, 13280, 13281, 13282, 13283, 13284, 13285, 13286,
   13287, 13288, 13289, 13290, 13291, 13292, 13293, 13294, 13304, 13305,
   13306, 13307, 13308, 13309, 13310, 13311, 13312, 13313, 13314, 13315,
   13316, 13317, 13318, 13319, 13320, 13321, 13322, 13323, 13324, 13325,
   13326, 13327, 13328, 13329, 13330, 13331, 13332, 13333, 13334, 13335,
   13336, 13337, 13338, 13339, 13340, 13341, 13342, 13343, 13344, 13345,
   13346, 13347, 13348, 13349, 13350, 13351, 13356, 13357, 13358, 13359,
   13360, 13361, 13362, 13363, 13364, 13365, 13366, 13367, 13368, 13369,
   13370, 13371, 13372, 13373, 13374, 13375, 13376, 13377, 13378, 13379,
   13380, 13381, 13382, 13383, 13384, 13385, 13386, 13387, 13388, 13389,
   13390, 13391, 13392, 13393, 13394, 13395, 13396, 13397, 13398, 13399,
   13400, 13401, 13402, 13403, 13404, 13405, 13406, 13407, 13408, 13409,
   13410, 13411, 13412, 13413, 13414, 13415, 13416, 13417, 13418, 13419,
   13420, 13421, 13422, 13423, 13424, 13425, 13426, 13427, 13428, 13429,
   13430, 13431, 13432, 13433, 13434, 13435, 13436, 13437, 13438, 13439,
   13440, 13441, 13442, 13443, 13444, 13445, 13446, 13447, 13448, 13449,
   13450, 13451, 13452, 13453, 13454, 13455, 13456, 13457, 13458, 13459,
   13460, 13461, 13462, 13463, 13464, 13465, 13466, 13467, 13468, 13469,
   13470, 13471, 13472, 13473, 13474, 13475, 13476, 13477, 13478, 13479,
   13480, 13481, 13482, 13483, 13484, 13485, 13486, 13487, 13488, 13489,
   13490, 13491, 13492, 13493, 13494, 13495, 13496, 13497, 13498, 13499,
   13500, 13501, 13502, 13503, 13504, 13505, 13506, 13507, 13508, 13509,
   13510, 13511, 13512, 13513, 13514, 13515, 13516, 13517, 13518, 13519,
   13520, 13521, 13522, 13523, 13524, 13525, 13526, 13527, 13528, 13529,
   13530, 13531, 13532, 13533, 13534, 13535, 13536, 13537, 13538, 13539,
   13540, 13541, 13542, 13543, 13544, 13545, 13546, 13547, 13548, 13549,
   13550, 13551, 13552, 13553, 13554, 13555, 13556, 13557, 13558, 13559,
   13560, 13561, 13562, 13563, 13564, 13565, 13566, 13567, 13568, 13569,
   13570, 13571, 13572, 13573, 13574, 13575, 13576, 13577, 13578, 13579,
   13580, 13581, 13582, 13583, 13584, 13585, 13586, 13587, 13588, 13589,
   13590, 13591, 13592, 13593, 13594, 13595, 13596, 13597, 13598, 13599,
   13600, 13601, 13602, 13603, 13604, 13605, 13606, 13607, 13608, 13609,
   13610, 13611, 13612, 13613, 13614, 13615, 13616, 13617, 13618, 13619,
   13620, 13621, 13622, 13623, 13624, 13625, 13626, 13627, 13638, 13647,
   13651, 13655, 13659, 13663, 13670, 13674, 13687, 13694, 13704, 13705,
   13710, 13714, 13722, 13726, 13730, 13731, 13732, 13736, 13737, 13738,
   13739, 13743, 13744, 13745, 13746, 13751, 13759, 13765, 13769, 13773,
   13777, 13784, 13791, 13795, 13799, 13806, 13810, 13817, 13824, 13825,
   13829, 13836, 13837, 13841, 13842, 13846, 13847, 13848, 13849, 13853,
   13862, 13863, 13864, 13868, 13872, 13882, 13881, 13897, 13898, 13902,
   13903, 13907, 13935, 13936, 13937, 13942, 13947, 13946, 13963, 13971,
   13978, 13997, 14013, 14032, 14029, 14079, 14080, 14084, 14085, 14089,
   14090, 14091, 14092, 14094, 14093, 14106, 14107, 14108, 14109, 14110,
   14116, 14116, 14121, 14126, 14136, 14146, 14150, 14159, 14159, 14164,
   14170, 14181, 14192, 14200, 14202, 14206, 14213, 14220, 14222, 14226,
   14227, 14232, 14231, 14235, 14234, 14238, 14237, 14241, 14240, 14243,
   14244, 14245, 14246, 14247, 14248, 14249, 14250, 14251, 14252, 14253,
   14254, 14255, 14256, 14257, 14258, 14259, 14260, 14261, 14262, 14263,
   14264, 14265, 14266, 14267, 14268, 14272, 14273, 14277, 14278, 14282,
   14292, 14302, 14315, 14330, 14343, 14356, 14368, 14373, 14381, 14386,
   14394, 14402, 14417, 14425, 14435, 14446, 14455, 14459, 14463, 14464,
   14468, 14495, 14497, 14501, 14505, 14509, 14516, 14517, 14521, 14522,
   14526, 14527, 14531, 14532, 14538, 14544, 14550, 14560, 14559, 14569,
   14570, 14575, 14576, 14577, 14582, 14583, 14584, 14588, 14589, 14593,
   14605, 14614, 14624, 14633, 14647, 14648, 14652, 14659, 14660, 14661,
   14665, 14666, 14670, 14677, 14681, 14685, 14686, 14687, 14691, 14695,
   14703, 14704, 14712, 14712, 14725, 14726, 14730, 14734, 14738, 14739,
   14740, 14741, 14742, 14743, 14744, 14745, 14755, 14757, 14759, 14764,
   14765, 14766, 14767, 14768, 14772, 14773, 14774, 14775, 14776, 14777,
   14787, 14788, 14793, 14806, 14819, 14821, 14823, 14828, 14833, 14835,
   14837, 14843, 14844, 14846, 14852, 14851, 14869, 14870, 14874, 14879,
   14887, 14887, 14912, 14911, 14932, 14940, 14940, 14948, 14953, 14952,
   14966, 14967, 14969, 14971, 14982, 14984, 14990, 14996, 15014, 15004,
   15097, 15115, 15139, 15163, 15167, 15176, 15199, 15136, 15266, 15286,
   15291, 15299, 15264, 15320, 15325, 15330, 15335, 15340, 15345, 15353,
   15354, 15357, 15366, 15376, 15394, 15395, 15399, 15400, 15401, 15405,
   15406, 15411, 15412, 15414, 15419, 15428
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "ANALYSE_SYM", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM", "AS",
  "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM", "AUTOEXTEND_SIZE_SYM",
  "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM",
  "BEGIN_SYM", "BETWEEN_SYM", "BIGINT", "BINARY", "BINLOG_SYM", "BIN_NUM",
  "BIT_AND", "BIT_OR", "BIT_SYM", "BIT_XOR", "BLOB_SYM", "BLOCK_SYM",
  "BOOLEAN_SYM", "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM",
  "CACHE_SYM", "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "DES_KEY_FILE", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSE",
  "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQ", "EQUAL_SYM",
  "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM", "EVENTS_SYM",
  "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM", "EXISTS",
  "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM", "EXTENDED_SYM",
  "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM", "FAST_SYM", "FAULTS_SYM",
  "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM", "FILTER_SYM",
  "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM", "FLUSH_SYM",
  "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM", "FORMAT_SYM",
  "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM", "FUNCTION_SYM", "GE",
  "GENERAL", "GENERATED", "GROUP_REPLICATION", "GEOMETRYCOLLECTION",
  "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM", "GLOBAL_SYM", "GRANT", "GRANTS",
  "GROUP_SYM", "GROUP_CONCAT_SYM", "GT_SYM", "HANDLER_SYM", "HASH_SYM",
  "HAVING", "HELP_SYM", "HEX_NUM", "HIGH_PRIORITY", "HOST_SYM",
  "HOSTS_SYM", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM",
  "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT", "IDENTIFIED_SYM", "IDENT_QUOTED",
  "IF", "IGNORE_SYM", "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES",
  "INDEX_SYM", "INFILE", "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM",
  "INSENSITIVE_SYM", "INSERT", "INSERT_METHOD", "INSTANCE_SYM",
  "INSTALL_SYM", "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM",
  "IN_SYM", "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM", "LOGFILE_SYM",
  "LOGS_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM", "LONG_SYM", "LOOP_SYM",
  "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM", "MASTER_BIND_SYM",
  "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM", "MASTER_SERVER_ID_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM",
  "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", "MEDIUM_SYM", "MEMORY_SYM",
  "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MINUTE_SYM", "MIN_ROWS",
  "MIN_SYM", "MODE_SYM", "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM",
  "MONTH_SYM", "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON",
  "MUTEX_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NATURAL", "NCHAR_STRING", "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG",
  "NEVER_SYM", "NEW_SYM", "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM",
  "NOT2_SYM", "NOT_SYM", "NOW_SYM", "NO_SYM", "NO_WAIT_SYM",
  "NO_WRITE_TO_BINLOG", "NULL_SYM", "NUM", "NUMBER_SYM", "NUMERIC_SYM",
  "NVARCHAR_SYM", "OFFSET_SYM", "ON", "ONE_SYM", "ONLY_SYM", "OPEN_SYM",
  "OPTIMIZE", "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY",
  "OR2_SYM", "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER", "OUTFILE",
  "OUT_SYM", "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER",
  "PARSER_SYM", "PARSE_GCOL_EXPR_SYM", "PARTIAL", "PARTITION_SYM",
  "PARTITIONS_SYM", "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM",
  "PLUGIN_DIR_SYM", "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON",
  "PORT_SYM", "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL", "REBUILD_SYM",
  "RECOVER_SYM", "REDOFILE_SYM", "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM",
  "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM", "RELAY_LOG_FILE_SYM",
  "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM", "RELOAD",
  "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPEAT_SYM", "REPLACE", "REPLICATION", "REPLICATE_DO_DB",
  "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE", "REPLICATE_IGNORE_TABLE",
  "REPLICATE_WILD_DO_TABLE", "REPLICATE_WILD_IGNORE_TABLE",
  "REPLICATE_REWRITE_DB", "REQUIRE_SYM", "RESET_SYM", "RESIGNAL_SYM",
  "RESOURCES", "RESTORE_SYM", "RESTRICT", "RESUME_SYM",
  "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM", "REVERSE_SYM",
  "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM", "ROTATE_SYM",
  "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM", "ROW_COUNT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM", "SELECT_SYM",
  "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM", "SERIAL_SYM",
  "SESSION_SYM", "SERVER_SYM", "SERVER_OPTIONS", "SET", "SET_VAR",
  "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SHUTDOWN",
  "SIGNAL_SYM", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT",
  "SNAPSHOT_SYM", "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS",
  "SQL_BEFORE_GTIDS", "SQL_BIG_RESULT", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM",
  "SQL_SMALL_RESULT", "SQL_SYM", "SQL_THREAD", "SSL_SYM", "STACKED_SYM",
  "STARTING", "STARTS_SYM", "START_SYM", "STATS_AUTO_RECALC_SYM",
  "STATS_PERSISTENT_SYM", "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM",
  "STDDEV_SAMP_SYM", "STD_SYM", "STOP_SYM", "STORAGE_SYM", "STORED_SYM",
  "STRAIGHT_JOIN", "STRING_SYM", "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM",
  "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM", "SUBSTRING",
  "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM",
  "SYSDATE", "TABLES", "TABLESPACE_SYM", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TERMINATED", "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM",
  "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB",
  "TINYINT", "TINYTEXT", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY", "VARCHAR",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "WITH_CUBE_SYM",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL", "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'",
  "'^'", "'~'", "'('", "')'", "','", "'!'", "'{'", "'}'", "';'", "'@'",
  "'.'", "':'", "$accept", "query", "$@1", "opt_end_of_input",
  "verb_clause", "statement", "deallocate", "deallocate_or_drop",
  "prepare", "prepare_src", "execute", "$@2", "execute_using",
  "execute_var_list", "execute_var_ident", "help", "$@3", "change", "$@4",
  "$@5", "filter_defs", "filter_def", "opt_filter_db_list",
  "filter_db_list", "filter_db_ident", "opt_filter_db_pair_list",
  "filter_db_pair_list", "opt_filter_table_list", "filter_table_list",
  "filter_table_ident", "opt_filter_string_list", "filter_string_list",
  "filter_string", "master_defs", "master_def", "ignore_server_id_list",
  "ignore_server_id", "master_file_def", "opt_channel", "create", "$@6",
  "$@7", "$@8", "$@9", "$@10", "$@11", "$@12", "$@13", "$@14",
  "server_options_list", "server_option", "event_tail", "$@15",
  "ev_schedule_time", "$@16", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "$@17", "ev_sql_stmt_inner", "clear_privileges",
  "clear_password_expire_options", "sp_name", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "sp_c_chistic", "sp_suid", "call", "$@18",
  "opt_sp_cparam_list", "opt_sp_cparams", "sp_cparams", "sp_fdparam_list",
  "sp_fdparams", "sp_init_param", "sp_fdparam", "sp_pdparam_list",
  "sp_pdparams", "sp_pdparam", "sp_opt_inout", "sp_proc_stmts",
  "sp_proc_stmts1", "sp_decls", "sp_decl", "$@19", "$@20", "$@21",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "$@22", "sp_proc_stmt",
  "sp_proc_stmt_if", "$@23", "sp_proc_stmt_statement", "$@24",
  "sp_proc_stmt_return", "$@25", "sp_proc_stmt_unlabeled", "$@26",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch", "$@27", "sp_proc_stmt_close", "sp_opt_fetch_noise",
  "sp_fetch_list", "sp_if", "$@28", "$@29", "$@30", "sp_elseifs",
  "case_stmt_specification", "simple_case_stmt", "$@31", "$@32",
  "searched_case_stmt", "$@33", "simple_when_clause_list",
  "searched_when_clause_list", "simple_when_clause", "$@34", "$@35",
  "searched_when_clause", "$@36", "$@37", "else_clause_opt",
  "sp_labeled_control", "$@38", "sp_opt_label", "sp_labeled_block", "$@39",
  "sp_unlabeled_block", "$@40", "sp_block_content", "$@41",
  "sp_unlabeled_control", "$@42", "$@43", "$@44", "$@45",
  "trg_action_time", "trg_event", "change_tablespace_access",
  "change_tablespace_info", "tablespace_info", "opt_logfile_group_name",
  "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@46", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_file_block_size", "ts_wait", "size_number",
  "create2", "create2a", "$@47", "create3", "$@48", "$@49",
  "opt_create_partitioning", "opt_partitioning", "partitioning", "$@50",
  "partition_entry", "$@51", "partition", "part_type_def", "$@52",
  "opt_linear", "opt_key_algo", "part_field_list", "part_field_item_list",
  "part_field_item", "part_column_list", "part_func", "sub_part_func",
  "opt_num_parts", "opt_sub_part", "$@53", "$@54", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_num_subparts", "part_defs",
  "part_def_list", "part_definition", "$@55", "part_name",
  "opt_part_values", "$@56", "$@57", "part_func_max", "part_values_in",
  "part_value_list", "part_value_item", "$@58", "$@59",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@60", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "create_select", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_table_options",
  "table_options", "table_option", "opt_if_not_exists",
  "opt_create_table_options", "create_table_options_space_separated",
  "create_table_options", "create_table_option", "$@61", "default_charset",
  "default_collation", "storage_engines", "known_storage_engines",
  "row_types", "merge_insert_types", "udf_type", "create_field_list",
  "field_list", "field_list_item", "column_def", "key_def",
  "opt_check_constraint", "check_constraint", "opt_constraint",
  "constraint", "field_spec", "$@62", "field_def", "opt_generated_always",
  "opt_gcol_attribute_list", "gcol_attribute_list", "gcol_attribute",
  "opt_stored_attribute", "parse_gcol_expr", "generated_column_func",
  "type", "$@63", "$@64", "spatial_type", "char", "nchar", "varchar",
  "nvarchar", "int_type", "real_type", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_attribute", "opt_attribute_list", "attribute",
  "type_with_opt_collate", "now", "now_or_signed_literal", "charset",
  "charset_name", "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "opt_collate_explicit",
  "collation_name_or_default", "opt_default", "ascii", "unicode",
  "opt_binary", "opt_bin_mod", "ws_nweights", "$@65", "ws_level_flag_desc",
  "ws_level_flag_reverse", "ws_level_flags", "ws_level_number",
  "ws_level_list_item", "ws_level_list", "ws_level_range",
  "ws_level_list_or_range", "opt_ws_levels", "opt_primary", "references",
  "opt_ref_list", "ref_list", "opt_match_clause", "opt_on_update_delete",
  "delete_option", "normal_key_type", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "fulltext", "spatial", "init_key_options", "key_alg",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "key_using_alg", "all_key_opt", "normal_key_opt", "spatial_key_opt",
  "fulltext_key_opt", "btree_or_rtree", "key_list", "key_part",
  "opt_ident", "opt_component", "string_list", "alter", "$@66", "$@67",
  "$@68", "$@69", "$@70", "$@71", "$@72", "alter_user_command",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "password_expire",
  "connect_options", "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "alter_command_list",
  "standalone_alter_commands", "$@73", "$@74", "$@75", "opt_validation",
  "alter_opt_validation", "remove_partitioning",
  "all_or_alt_part_name_list", "add_partition_rule", "$@76",
  "add_part_extra", "reorg_partition_rule", "$@77", "reorg_parts_rule",
  "$@78", "alt_part_name_list", "alt_part_name_item", "alter_list",
  "alter_commands_modifier_list", "add_column", "alter_list_item", "$@79",
  "$@80", "$@81", "alter_commands_modifier", "opt_index_lock_algorithm",
  "alter_algorithm_option", "alter_lock_option", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "slave", "slave_start", "start_slave_opts", "$@82", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_connection_opts",
  "slave_user_name_opt", "slave_user_pass_opt", "slave_plugin_auth_opt",
  "slave_plugin_dir_opt", "opt_slave_thread_option_list",
  "slave_thread_option_list", "slave_thread_option", "slave_until",
  "slave_until_opts", "checksum", "$@83", "opt_checksum_type", "repair",
  "$@84", "opt_mi_repair_type", "mi_repair_types", "mi_repair_type",
  "analyze", "$@85", "binlog_base64_event", "check", "$@86",
  "opt_mi_check_type", "mi_check_types", "mi_check_type", "optimize",
  "$@87", "opt_no_write_to_binlog", "rename", "$@88", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "$@89",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "$@90",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "$@91", "cache_keys_spec",
  "cache_key_list_or_empty", "opt_ignore_leaves", "select", "select_init",
  "select_paren", "select_paren_derived", "select_part2",
  "select_options_and_item_list", "$@92", "table_expression",
  "from_clause", "opt_from_clause", "table_reference_list",
  "select_options", "select_option_list", "select_option",
  "opt_select_lock_type", "select_item_list", "select_item",
  "select_alias", "optional_braces", "expr", "bool_pri", "predicate",
  "bit_expr", "or", "and", "not", "not2", "comp_op", "all_or_any",
  "simple_expr", "function_call_keyword", "function_call_nonkeyword",
  "function_call_conflict", "geometry_function", "function_call_generic",
  "fulltext_options", "opt_natural_language_mode", "opt_query_expansion",
  "opt_udf_expr_list", "udf_expr_list", "udf_expr", "sum_expr", "variable",
  "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_ref", "join_table_list", "esc_table_ref",
  "derived_table_list", "join_table", "normal_join", "opt_use_partition",
  "use_partition", "table_factor", "select_derived_union",
  "select_part2_derived", "$@93", "select_derived", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition",
  "index_hints_list", "opt_index_hints_list", "opt_key_definition",
  "opt_key_usage_list", "key_usage_element", "key_usage_list",
  "using_list", "interval", "interval_time_stamp", "date_time_type",
  "table_alias", "opt_table_alias", "opt_all", "opt_where_clause",
  "opt_having_clause", "opt_escape", "opt_group_clause", "group_list",
  "olap_opt", "alter_order_clause", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list", "order_dir",
  "opt_limit_clause", "limit_clause", "limit_options", "limit_option",
  "opt_simple_limit", "ulong_num", "real_ulong_num", "ulonglong_num",
  "real_ulonglong_num", "dec_num_error", "dec_num",
  "opt_procedure_analyse_clause", "opt_procedure_analyse_params",
  "procedure_analyse_param", "select_var_list", "select_var_ident",
  "opt_into", "into", "into_destination", "do_stmt",
  "empty_select_options", "drop", "$@94", "$@95", "$@96", "$@97",
  "table_list", "table_name", "table_alias_ref_list", "if_exists",
  "opt_temporary", "drop_ts_options_list", "drop_ts_options",
  "drop_ts_option", "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_from_subquery", "fields", "insert_values",
  "insert_query_expression", "value_or_values", "values_list", "equal",
  "opt_equal", "row_value", "opt_values", "values", "expr_or_default",
  "opt_insert_update_list", "update_stmt", "update_list", "update_elem",
  "opt_low_priority", "delete_stmt", "opt_wild", "opt_delete_options",
  "opt_delete_option", "truncate", "$@98", "opt_table_sym",
  "opt_profile_defs", "profile_defs", "profile_def", "opt_profile_args",
  "show", "$@99", "show_param", "$@100", "$@101", "show_engine_param",
  "master_or_binary", "opt_storage", "opt_db", "opt_full", "from_or_in",
  "binlog_in", "binlog_from", "opt_wild_or_where",
  "opt_wild_or_where_for_show", "describe", "$@102", "$@103",
  "explainable_command", "describe_command", "opt_extended_describe",
  "opt_describe_column", "flush", "$@104", "flush_options", "$@105",
  "$@106", "opt_flush_lock", "$@107", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@108", "reset_options", "reset_option",
  "$@109", "slave_reset_options", "purge", "$@110", "purge_options",
  "purge_option", "kill", "kill_option", "use", "load", "$@111", "$@112",
  "$@113", "$@114", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "opt_field_term", "field_term_list", "field_term",
  "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_expr", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "field_ident", "table_ident", "table_ident_opt_wild",
  "table_ident_nodb", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "filter_wild_db_table_string", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident", "label_ident", "ident_or_text",
  "user", "keyword", "keyword_sp", "set", "start_option_value_list",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "option_value_following_option_type", "option_value_no_option_type",
  "internal_variable_name", "transaction_characteristics",
  "transaction_access_mode", "opt_transaction_access_mode",
  "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types", "password",
  "set_expr_or_default", "lock", "$@115", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@116",
  "shutdown_stmt", "alter_instance_stmt", "alter_instance_action",
  "handler", "$@117", "handler_read_or_scan", "handler_scan_function",
  "handler_rkey_function", "$@118", "handler_rkey_mode", "revoke", "$@119",
  "revoke_command", "grant", "$@120", "grant_command", "opt_table",
  "grant_privileges", "opt_privileges", "object_privilege_list",
  "object_privilege", "$@121", "$@122", "$@123", "$@124", "opt_and",
  "require_list", "require_list_element", "grant_ident", "user_list",
  "grant_list", "grant_user", "opt_column_list", "column_list",
  "column_list_id", "require_clause", "grant_options", "opt_grant_option",
  "grant_option_list", "grant_option", "begin", "$@125", "opt_work",
  "opt_chain", "opt_release", "opt_savepoint", "commit", "rollback",
  "savepoint", "release", "opt_union_clause", "union_list", "union_opt",
  "opt_union_order_or_limit", "union_order_or_limit", "order_or_limit",
  "union_option", "query_specification", "query_expression_body",
  "subselect", "$@126", "opt_query_spec_options", "query_spec_option_list",
  "query_spec_option", "view_or_trigger_or_sp_or_event", "definer_tail",
  "no_definer_tail", "definer_opt", "no_definer", "definer",
  "view_replace_or_algorithm", "view_replace", "view_algorithm",
  "view_suid", "view_tail", "$@127", "view_list_opt", "view_list",
  "view_select", "$@128", "view_select_aux", "$@129",
  "create_view_select_paren", "$@130", "create_view_select", "$@131",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@132", "udf_tail",
  "sf_tail", "$@133", "$@134", "$@135", "$@136", "$@137", "sp_tail",
  "$@138", "$@139", "$@140", "$@141", "xa", "opt_convert_xid", "xid",
  "begin_or_start", "opt_join_or_resume", "opt_one_phase", "opt_suspend",
  "install", "uninstall", YY_NULL
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   124,    38,    45,    43,    42,    47,    37,    94,
     126,    40,    41,    44,    33,   123,   125,    59,    64,    46,
      58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   671,   672,   673,   672,   672,   674,   674,   675,   675,
     676,   676,   676,   676,   676,   676,   676,   676,   676,   676,
     676,   676,   676,   676,   676,   676,   676,   676,   676,   676,
     676,   676,   676,   676,   676,   676,   676,   676,   676,   676,
     676,   676,   676,   676,   676,   676,   676,   676,   676,   676,
     676,   676,   676,   676,   676,   676,   676,   676,   676,   676,
     676,   676,   676,   676,   676,   677,   678,   678,   679,   680,
     680,   682,   681,   683,   683,   684,   684,   685,   687,   686,
     689,   688,   690,   688,   691,   691,   692,   692,   692,   692,
     692,   692,   692,   693,   693,   694,   694,   695,   696,   696,
     697,   697,   698,   698,   699,   699,   700,   701,   701,   702,
     702,   703,   704,   704,   705,   705,   705,   705,   705,   705,
     705,   705,   705,   705,   705,   705,   705,   705,   705,   705,
     705,   705,   705,   705,   705,   705,   706,   706,   706,   707,
     708,   708,   708,   708,   709,   709,   711,   710,   712,   713,
     710,   714,   715,   710,   716,   717,   710,   718,   710,   719,
     710,   710,   710,   710,   710,   720,   720,   721,   721,   721,
     721,   721,   721,   721,   723,   722,   725,   724,   724,   726,
     726,   726,   726,   727,   727,   728,   728,   729,   729,   730,
     730,   731,   731,   733,   732,   734,   734,   734,   734,   734,
     734,   734,   734,   734,   734,   734,   734,   734,   735,   736,
     737,   737,   738,   738,   739,   739,   740,   740,   740,   740,
     740,   740,   740,   741,   741,   741,   742,   742,   744,   743,
     745,   745,   746,   746,   747,   747,   748,   748,   749,   749,
     750,   751,   752,   752,   753,   753,   754,   755,   755,   755,
     755,   756,   756,   757,   757,   758,   758,   760,   759,   759,
     761,   759,   762,   759,   763,   763,   764,   764,   765,   766,
     766,   767,   768,   768,   769,   769,   769,   769,   769,   770,
     771,   771,   772,   772,   773,   773,   774,   774,   775,   775,
     775,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   777,   778,   779,   779,   779,   780,   780,
     781,   781,   782,   783,   783,   784,   784,   785,   786,   786,
     787,   788,   788,   788,   788,   788,   788,   788,   788,   788,
     788,   788,   788,   788,   789,   789,   790,   791,   790,   792,
     792,   792,   792,   792,   792,   792,   792,   792,   792,   792,
     792,   792,   794,   793,   796,   795,   798,   797,   800,   799,
     801,   802,   803,   805,   804,   806,   807,   807,   807,   808,
     808,   810,   811,   812,   809,   813,   813,   813,   814,   814,
     816,   817,   815,   819,   818,   820,   820,   821,   821,   823,
     824,   822,   826,   827,   825,   828,   828,   830,   829,   831,
     831,   833,   832,   835,   834,   837,   836,   838,   839,   840,
     838,   841,   842,   838,   843,   843,   844,   844,   844,   845,
     846,   847,   848,   848,   849,   849,   850,   851,   852,   852,
     854,   853,   855,   855,   855,   856,   856,   856,   857,   857,
     858,   858,   858,   859,   859,   859,   859,   859,   859,   859,
     859,   859,   860,   860,   861,   861,   861,   862,   862,   862,
     862,   862,   863,   863,   864,   864,   864,   865,   865,   865,
     865,   865,   865,   865,   866,   866,   867,   867,   867,   868,
     868,   868,   869,   870,   871,   872,   873,   874,   874,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   885,   886,   886,   887,   887,   887,   887,   888,   889,
     888,   890,   891,   890,   892,   890,   893,   894,   894,   896,
     895,   898,   897,   899,   900,   901,   900,   900,   900,   900,
     900,   902,   902,   903,   903,   904,   904,   905,   905,   906,
     907,   908,   909,   910,   910,   911,   912,   911,   913,   911,
     914,   914,   915,   916,   917,   917,   918,   918,   919,   919,
     921,   920,   922,   923,   924,   923,   925,   923,   926,   926,
     927,   927,   928,   928,   930,   931,   929,   932,   932,   933,
     933,   934,   934,   935,   935,   937,   936,   938,   939,   939,
     940,   940,   941,   941,   941,   941,   941,   941,   941,   941,
     942,   943,   943,   944,   944,   945,   945,   946,   946,   947,
     947,   948,   948,   949,   950,   950,   951,   951,   952,   952,
     953,   953,   953,   954,   954,   954,   954,   954,   954,   954,
     954,   954,   954,   954,   954,   954,   954,   954,   954,   954,
     954,   954,   954,   954,   955,   954,   954,   954,   954,   954,
     954,   954,   954,   954,   954,   954,   956,   957,   958,   959,
     960,   960,   960,   960,   960,   960,   961,   961,   961,   962,
     962,   962,   962,   963,   964,   964,   965,   965,   966,   966,
     967,   967,   967,   967,   967,   967,   968,   968,   969,   970,
     970,   971,   973,   972,   974,   974,   975,   975,   976,   976,
     977,   977,   978,   978,   978,   978,   978,   978,   979,   979,
     979,   980,   981,   982,   982,   982,   982,   982,   982,   982,
     982,   982,   982,   982,   982,   982,   982,   982,   982,   982,
     982,   982,   982,   982,   982,   982,   982,   982,   982,   982,
     982,   982,   982,   982,   982,   982,   982,   982,   983,   982,
     984,   982,   982,   982,   982,   985,   985,   985,   985,   985,
     985,   985,   985,   986,   987,   987,   988,   988,   989,   989,
     989,   989,   989,   990,   990,   990,   990,   990,   991,   991,
     991,   992,   992,   992,   993,   994,   994,   995,   995,   995,
     996,   996,   997,   997,   998,   998,   998,   999,   999,   999,
     999,  1000,  1000,  1001,  1001,  1002,  1002,  1003,  1003,  1004,
    1004,  1004,  1004,  1004,  1004,  1004,  1004,  1004,  1004,  1004,
    1004,  1004,  1004,  1004,  1004,  1004,  1005,  1006,  1007,  1007,
    1008,  1008,  1009,  1009,  1010,  1010,  1011,  1011,  1012,  1012,
    1013,  1013,  1014,  1015,  1015,  1016,  1016,  1017,  1017,  1018,
    1018,  1019,  1019,  1019,  1020,  1020,  1020,  1021,  1021,  1021,
    1021,  1021,  1021,  1021,  1022,  1022,  1024,  1023,  1025,  1025,
    1026,  1027,  1027,  1027,  1027,  1028,  1029,  1030,  1030,  1031,
    1032,  1032,  1033,  1033,  1034,  1034,  1035,  1036,  1036,  1037,
    1037,  1038,  1038,  1038,  1038,  1039,  1039,  1039,  1039,  1039,
    1040,  1040,  1040,  1040,  1040,  1041,  1042,  1042,  1043,  1043,
    1044,  1044,  1045,  1045,  1045,  1046,  1046,  1047,  1048,  1049,
    1050,  1050,  1051,  1051,  1052,  1052,  1053,  1053,  1054,  1054,
    1055,  1055,  1056,  1056,  1057,  1057,  1058,  1058,  1059,  1059,
    1060,  1061,  1061,  1062,  1062,  1062,  1063,  1063,  1064,  1064,
    1065,  1065,  1066,  1066,  1067,  1067,  1069,  1068,  1070,  1068,
    1068,  1071,  1068,  1072,  1068,  1073,  1068,  1074,  1068,  1075,
    1068,  1068,  1068,  1068,  1068,  1068,  1068,  1068,  1068,  1076,
    1077,  1077,  1078,  1078,  1079,  1079,  1079,  1079,  1079,  1079,
    1080,  1081,  1081,  1082,  1082,  1083,  1083,  1083,  1083,  1084,
    1085,  1085,  1085,  1085,  1086,  1086,  1087,  1087,  1088,  1088,
    1089,  1089,  1089,  1089,  1089,  1090,  1090,  1090,  1090,  1091,
    1091,  1091,  1091,  1091,  1092,  1091,  1091,  1093,  1091,  1094,
    1091,  1091,  1091,  1091,  1091,  1091,  1091,  1095,  1095,  1096,
    1096,  1097,  1098,  1098,  1100,  1099,  1101,  1101,  1101,  1103,
    1102,  1104,  1105,  1104,  1106,  1106,  1107,  1108,  1108,  1108,
    1109,  1109,  1110,  1111,  1111,  1111,  1112,  1111,  1113,  1114,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1115,  1115,  1115,  1116,
    1116,  1116,  1116,  1116,  1117,  1117,  1118,  1118,  1119,  1119,
    1120,  1120,  1121,  1121,  1121,  1122,  1122,  1122,  1123,  1123,
    1123,  1123,  1124,  1124,  1125,  1125,  1126,  1128,  1127,  1129,
    1130,  1130,  1131,  1131,  1132,  1132,  1132,  1133,  1134,  1134,
    1135,  1135,  1136,  1136,  1137,  1137,  1138,  1138,  1139,  1139,
    1140,  1140,  1141,  1141,  1142,  1142,  1142,  1142,  1142,  1144,
    1143,  1145,  1145,  1145,  1147,  1146,  1148,  1148,  1149,  1149,
    1150,  1150,  1150,  1152,  1151,  1153,  1155,  1154,  1156,  1156,
    1157,  1157,  1158,  1158,  1158,  1158,  1158,  1158,  1160,  1159,
    1161,  1161,  1161,  1163,  1162,  1162,  1164,  1164,  1165,  1165,
    1166,  1168,  1167,  1169,  1169,  1170,  1170,  1171,  1172,  1173,
    1173,  1175,  1174,  1176,  1176,  1177,  1177,  1178,  1179,  1181,
    1180,  1182,  1183,  1183,  1184,  1184,  1185,  1186,  1186,  1187,
    1187,  1188,  1188,  1189,  1189,  1189,  1191,  1190,  1192,  1193,
    1194,  1194,  1195,  1195,  1196,  1196,  1197,  1197,  1198,  1198,
    1198,  1199,  1199,  1199,  1200,  1200,  1200,  1201,  1201,  1202,
    1202,  1202,  1202,  1202,  1203,  1203,  1204,  1204,  1204,  1204,
    1204,  1204,  1204,  1204,  1204,  1204,  1204,  1205,  1205,  1205,
    1205,  1205,  1206,  1206,  1206,  1206,  1206,  1206,  1206,  1206,
    1206,  1206,  1206,  1206,  1206,  1206,  1207,  1207,  1207,  1207,
    1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,
    1207,  1208,  1208,  1209,  1209,  1210,  1210,  1211,  1211,  1212,
    1212,  1212,  1212,  1212,  1212,  1212,  1213,  1213,  1214,  1214,
    1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,
    1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,
    1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1215,
    1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,
    1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,
    1215,  1215,  1215,  1215,  1215,  1215,  1216,  1216,  1216,  1216,
    1216,  1216,  1216,  1216,  1216,  1216,  1216,  1216,  1216,  1216,
    1216,  1216,  1216,  1216,  1216,  1216,  1216,  1216,  1217,  1217,
    1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,
    1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,
    1217,  1217,  1218,  1218,  1218,  1218,  1218,  1218,  1218,  1218,
    1219,  1219,  1220,  1220,  1221,  1221,  1222,  1222,  1223,  1223,
    1224,  1224,  1225,  1226,  1226,  1226,  1226,  1226,  1226,  1226,
    1226,  1226,  1226,  1226,  1226,  1226,  1226,  1226,  1226,  1226,
    1226,  1226,  1227,  1228,  1228,  1228,  1229,  1229,  1230,  1230,
    1231,  1231,  1232,  1232,  1233,  1234,  1234,  1234,  1234,  1234,
    1234,  1234,  1234,  1234,  1234,  1234,  1234,  1235,  1235,  1236,
    1236,  1237,  1237,  1238,  1238,  1239,  1239,  1240,  1240,  1241,
    1241,  1242,  1242,  1243,  1244,  1244,  1245,  1245,  1246,  1246,
    1246,  1246,  1246,  1246,  1246,  1246,  1246,  1246,  1246,  1246,
    1247,  1247,  1247,  1248,  1248,  1249,  1250,  1250,  1250,  1251,
    1251,  1253,  1252,  1254,  1255,  1255,  1256,  1256,  1256,  1256,
    1257,  1257,  1258,  1258,  1259,  1259,  1260,  1260,  1261,  1262,
    1262,  1263,  1263,  1264,  1264,  1265,  1265,  1266,  1266,  1266,
    1266,  1266,  1266,  1266,  1266,  1266,  1266,  1266,  1266,  1267,
    1267,  1267,  1267,  1267,  1267,  1267,  1267,  1267,  1268,  1268,
    1268,  1268,  1269,  1269,  1269,  1270,  1270,  1271,  1271,  1272,
    1272,  1273,  1273,  1274,  1274,  1275,  1275,  1276,  1276,  1277,
    1277,  1277,  1278,  1279,  1279,  1280,  1281,  1281,  1282,  1283,
    1283,  1284,  1284,  1284,  1285,  1285,  1286,  1287,  1287,  1287,
    1288,  1288,  1288,  1288,  1288,  1289,  1289,  1290,  1290,  1290,
    1290,  1290,  1290,  1291,  1291,  1291,  1291,  1291,  1292,  1292,
    1292,  1292,  1292,  1293,  1293,  1293,  1293,  1294,  1295,  1295,
    1296,  1296,  1297,  1297,  1297,  1298,  1299,  1299,  1300,  1300,
    1301,  1301,  1302,  1303,  1303,  1303,  1304,  1305,  1307,  1306,
    1308,  1309,  1306,  1306,  1306,  1306,  1306,  1306,  1310,  1306,
    1306,  1306,  1306,  1306,  1306,  1311,  1311,  1312,  1313,  1313,
    1314,  1314,  1315,  1315,  1316,  1316,  1317,  1317,  1317,  1318,
    1318,  1319,  1319,  1319,  1320,  1320,  1320,  1321,  1321,  1321,
    1321,  1322,  1322,  1323,  1323,  1324,  1324,  1324,  1325,  1325,
    1325,  1326,  1326,  1327,  1328,  1328,  1329,  1329,  1330,  1330,
    1331,  1331,  1332,  1332,  1333,  1334,  1334,  1335,  1335,  1336,
    1336,  1337,  1337,  1338,  1339,  1339,  1340,  1341,  1341,  1342,
    1342,  1342,  1343,  1343,  1344,  1344,  1345,  1345,  1345,  1347,
    1346,  1348,  1348,  1349,  1349,  1350,  1350,  1351,  1351,  1351,
    1351,  1351,  1351,  1351,  1351,  1351,  1352,  1352,  1354,  1353,
    1355,  1355,  1355,  1355,  1355,  1355,  1355,  1355,  1355,  1355,
    1355,  1355,  1356,  1355,  1357,  1355,  1355,  1355,  1355,  1355,
    1355,  1355,  1355,  1355,  1355,  1355,  1355,  1355,  1355,  1355,
    1355,  1355,  1355,  1355,  1355,  1355,  1355,  1355,  1355,  1355,
    1355,  1355,  1355,  1355,  1355,  1355,  1358,  1358,  1358,  1359,
    1359,  1360,  1360,  1361,  1361,  1362,  1362,  1363,  1363,  1364,
    1364,  1365,  1365,  1366,  1366,  1366,  1367,  1367,  1367,  1369,
    1368,  1370,  1368,  1371,  1371,  1371,  1371,  1371,  1371,  1372,
    1372,  1373,  1373,  1373,  1373,  1374,  1374,  1374,  1376,  1375,
    1378,  1379,  1377,  1377,  1380,  1380,  1381,  1380,  1382,  1382,
    1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,
    1383,  1383,  1383,  1383,  1384,  1384,  1386,  1385,  1387,  1387,
    1389,  1388,  1388,  1388,  1390,  1390,  1392,  1391,  1393,  1394,
    1394,  1395,  1396,  1396,  1396,  1397,  1399,  1400,  1401,  1402,
    1398,  1403,  1403,  1404,  1404,  1405,  1405,  1405,  1406,  1406,
    1406,  1407,  1407,  1408,  1408,  1409,  1409,  1409,  1409,  1410,
    1410,  1411,  1411,  1412,  1412,  1413,  1413,  1414,  1414,  1415,
    1415,  1416,  1416,  1416,  1417,  1417,  1418,  1418,  1419,  1419,
    1420,  1420,  1421,  1422,  1422,  1422,  1422,  1423,  1423,  1423,
    1424,  1425,  1425,  1425,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1427,  1427,  1427,  1427,  1427,  1428,
    1428,  1428,  1429,  1429,  1430,  1430,  1431,  1432,  1432,  1433,
    1433,  1434,  1434,  1434,  1435,  1435,  1435,  1435,  1436,  1436,
    1436,  1437,  1437,  1438,  1439,  1439,  1440,  1441,  1442,  1443,
    1444,  1445,  1445,  1446,  1446,  1447,  1447,  1447,  1448,  1448,
    1448,  1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,
    1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,
    1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,
    1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,
    1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,
    1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1451,  1452,
    1452,  1452,  1452,  1452,  1452,  1452,  1453,  1453,  1454,  1454,
    1455,  1455,  1456,  1456,  1457,  1457,  1457,  1458,  1458,  1458,
    1458,  1459,  1459,  1459,  1459,  1460,  1461,  1461,  1461,  1461,
    1461,  1461,  1462,  1462,  1462,  1463,  1463,  1464,  1465,  1465,
    1466,  1467,  1467,  1468,  1468,  1469,  1469,  1469,  1469,  1470,
    1471,  1471,  1471,  1471,  1471,  1473,  1472,  1474,  1474,  1475,
    1475,  1476,  1477,  1477,  1477,  1477,  1479,  1478,  1480,  1481,
    1482,  1483,  1483,  1484,  1483,  1485,  1485,  1486,  1486,  1487,
    1487,  1487,  1487,  1488,  1487,  1489,  1489,  1489,  1489,  1489,
    1491,  1490,  1492,  1492,  1492,  1492,  1492,  1494,  1493,  1495,
    1495,  1495,  1495,  1496,  1496,  1497,  1497,  1498,  1498,  1499,
    1499,  1501,  1500,  1502,  1500,  1503,  1500,  1504,  1500,  1500,
    1500,  1500,  1500,  1500,  1500,  1500,  1500,  1500,  1500,  1500,
    1500,  1500,  1500,  1500,  1500,  1500,  1500,  1500,  1500,  1500,
    1500,  1500,  1500,  1500,  1500,  1505,  1505,  1506,  1506,  1507,
    1507,  1507,  1508,  1508,  1508,  1508,  1509,  1509,  1510,  1510,
    1511,  1511,  1511,  1511,  1511,  1511,  1512,  1512,  1513,  1513,
    1514,  1515,  1515,  1515,  1515,  1515,  1516,  1516,  1517,  1517,
    1518,  1518,  1519,  1519,  1519,  1519,  1519,  1521,  1520,  1522,
    1522,  1523,  1523,  1523,  1524,  1524,  1524,  1525,  1525,  1526,
    1527,  1527,  1528,  1529,  1530,  1530,  1531,  1532,  1532,  1532,
    1533,  1533,  1534,  1535,  1535,  1536,  1536,  1536,  1537,  1537,
    1538,  1538,  1540,  1539,  1541,  1541,  1542,  1542,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1544,  1544,  1544,  1545,
    1545,  1545,  1545,  1545,  1546,  1546,  1546,  1546,  1546,  1546,
    1547,  1547,  1548,  1549,  1550,  1550,  1550,  1551,  1552,  1552,
    1552,  1553,  1553,  1553,  1555,  1554,  1556,  1556,  1557,  1557,
    1559,  1558,  1561,  1560,  1560,  1563,  1562,  1562,  1565,  1564,
    1566,  1566,  1566,  1566,  1567,  1567,  1568,  1568,  1570,  1569,
    1571,  1571,  1573,  1574,  1575,  1576,  1577,  1572,  1579,  1580,
    1581,  1582,  1578,  1583,  1583,  1583,  1583,  1583,  1583,  1584,
    1584,  1585,  1585,  1585,  1586,  1586,  1587,  1587,  1587,  1588,
    1588,  1589,  1589,  1589,  1590,  1591
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     4,     1,
       2,     0,     4,     0,     2,     3,     1,     2,     0,     3,
       0,     6,     0,     5,     1,     3,     3,     3,     3,     3,
       3,     3,     3,     2,     3,     1,     3,     1,     2,     3,
       5,     7,     2,     3,     1,     3,     3,     2,     3,     1,
       3,     1,     1,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     5,     3,     1,     0,     1,     3,     1,
       3,     3,     3,     3,     0,     3,     0,     7,     0,     0,
      14,     0,     0,    14,     0,     0,    14,     0,     6,     0,
       3,     8,     4,     3,    11,     1,     3,     2,     2,     2,
       2,     2,     2,     2,     0,    12,     0,     6,     2,     0,
       1,     3,     1,     0,     2,     0,     2,     0,     1,     3,
       4,     0,     2,     0,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       3,     1,     0,     2,     0,     2,     2,     2,     2,     2,
       3,     3,     1,     1,     1,     2,     3,     3,     0,     4,
       0,     3,     0,     1,     3,     1,     0,     1,     3,     1,
       0,     3,     0,     1,     3,     1,     4,     0,     1,     1,
       1,     0,     3,     2,     3,     0,     3,     0,     5,     5,
       0,     7,     0,     6,     1,     1,     1,     3,     1,     1,
       1,     3,     0,     1,     1,     1,     1,     2,     1,     3,
       1,     1,     0,     1,     0,     2,     3,     5,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     4,     0,     1,     1,     1,     3,
       1,     3,     3,     1,     2,     1,     1,     1,     1,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     0,     0,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     5,     0,     2,     0,     3,     0,     2,
       2,     2,     2,     0,     6,     2,     0,     2,     1,     1,
       3,     0,     0,     0,     7,     0,     2,     2,     1,     1,
       0,     0,     8,     0,     6,     1,     2,     1,     2,     0,
       0,     6,     0,     0,     6,     0,     2,     0,     5,     0,
       1,     0,     5,     0,     2,     0,     5,     4,     0,     0,
       8,     0,     0,     8,     1,     1,     1,     1,     1,     2,
       4,     5,     0,     4,     4,     4,     3,     3,     2,     2,
       0,     2,     1,     2,     3,     1,     1,     1,     0,     1,
       1,     2,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     2,     3,     1,     1,     1,
       1,     1,     0,     1,     1,     2,     3,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     2,     3,     1,
       1,     1,     2,     2,     2,     1,     1,     1,     1,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     4,     3,
       1,     1,     1,     1,     2,     3,     2,     4,     5,     0,
       5,     0,     0,     5,     0,     7,     1,     0,     1,     0,
       3,     0,     3,     5,     6,     0,     4,     2,     2,     2,
       2,     0,     1,     0,     3,     0,     1,     1,     3,     1,
       4,     3,     3,     0,     2,     0,     0,     7,     0,    10,
       1,     3,     1,     1,     0,     2,     0,     3,     1,     3,
       0,     6,     1,     0,     0,     5,     0,     4,     1,     1,
       1,     3,     1,     3,     0,     0,     5,     1,     3,     1,
       1,     0,     3,     1,     3,     0,     4,     1,     0,     1,
       2,     1,     3,     4,     3,     3,     3,     4,     4,     3,
       4,     0,     1,     0,     1,     1,     2,     1,     1,     0,
       1,     1,     2,     1,     0,     3,     0,     1,     1,     2,
       1,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     0,     6,     1,     1,     3,     4,
       4,     3,     2,     2,     3,     3,     4,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     2,     2,
       7,     8,     8,     8,     8,     2,     0,     1,     4,     0,
       1,     2,     0,     3,     2,     9,     0,     2,     0,     1,
       2,     1,     1,     2,     2,     2,     1,     2,     0,     1,
       1,     4,     1,     3,     3,     3,     1,     2,     1,     1,
       3,     2,     3,     2,     2,     1,     3,     3,     2,     3,
       1,     2,     2,     2,     1,     2,     1,     1,     1,     2,
       3,     2,     3,     2,     2,     3,     3,     3,     0,     6,
       0,     6,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     2,     1,
       2,     3,     2,     1,     1,     1,     1,     1,     1,     1,
       2,     0,     1,     1,     5,     0,     3,     0,     2,     3,
       0,     1,     2,     1,     1,     1,     1,     3,     3,     3,
       3,     0,     1,     0,     1,     0,     1,     2,     1,     1,
       2,     2,     3,     1,     3,     2,     1,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     1,     1,
       2,     1,     1,     1,     1,     1,     0,     2,     1,     1,
       1,     1,     1,     0,     2,     0,     2,     1,     1,     0,
       1,     1,     2,     2,     1,     2,     2,     0,     1,     1,
       1,     3,     1,     3,     0,     1,     0,     4,     1,     1,
       1,     0,     1,     2,     1,     1,     2,     1,     3,     3,
       1,     1,     0,     2,     0,     1,     5,     0,     3,     3,
       1,     0,     2,     2,     2,     0,     3,     3,     6,     6,
       1,     1,     2,     2,     2,     1,     2,     2,     1,     1,
       0,     1,     1,     1,     1,     0,     1,     1,     1,     0,
       1,     2,     0,     1,     0,     1,     0,     1,     1,     2,
       1,     2,     1,     2,     2,     2,     3,     2,     1,     1,
       1,     1,     3,     1,     1,     1,     4,     2,     1,     4,
       0,     1,     0,     2,     1,     3,     0,     5,     0,     5,
       7,     0,     5,     0,     5,     0,     5,     0,     4,     0,
      10,     3,     4,     3,     3,     7,     5,     5,     1,     4,
       0,     1,     1,     2,     2,     2,     1,     4,     2,     2,
       3,     0,     2,     2,     1,     2,     2,     2,     2,     3,
       0,     3,     1,     4,     0,     3,     0,     2,     0,     1,
       1,     2,     2,     1,     3,     0,     1,     1,     3,     2,
       2,     1,     3,     4,     0,     6,     4,     0,     5,     0,
       6,     4,     3,     1,     7,     4,     4,     0,     1,     2,
       2,     2,     1,     1,     0,     5,     0,     3,     2,     0,
       5,     0,     0,     6,     1,     3,     1,     1,     3,     3,
       1,     3,     2,     3,     2,     4,     0,     6,     0,     0,
       7,     4,     4,     3,     3,     2,     2,     6,     5,     3,
       5,     5,     1,     1,     1,     2,     1,     1,     1,     0,
       1,     1,     2,     2,     3,     3,     3,     3,     0,     1,
       0,     1,     0,     1,     1,     0,     2,     1,     0,     1,
       1,     1,     2,     2,     2,     4,     3,     0,     4,     3,
       0,     1,     1,     3,     3,     2,     2,     4,     0,     3,
       0,     3,     0,     3,     0,     3,     0,     1,     1,     3,
       1,     1,     0,     2,     1,     3,     3,     3,     1,     0,
       5,     0,     1,     1,     0,     6,     0,     1,     1,     2,
       1,     1,     1,     0,     5,     2,     0,     5,     0,     1,
       1,     2,     1,     1,     1,     1,     1,     2,     0,     5,
       0,     1,     1,     0,     4,     4,     3,     5,     1,     3,
       3,     0,     6,     1,     1,     1,     3,     2,     3,     1,
       1,     0,     6,     1,     1,     1,     3,     3,     4,     0,
       5,     1,     0,     4,     0,     2,     1,     3,     4,     2,
       3,     3,     3,     4,     3,    11,     0,     3,     8,     2,
       0,     1,     1,     1,     0,     1,     2,     1,     1,     1,
       1,     0,     2,     4,     3,     1,     1,     1,     2,     0,
       2,     2,     1,     1,     0,     2,     3,     3,     3,     2,
       3,     4,     3,     4,     3,     4,     1,     3,     4,     3,
       6,     1,     5,     6,     5,     7,     6,     8,     5,     6,
       4,     4,     5,     3,     4,     1,     3,     3,     3,     3,
       3,     3,     5,     5,     3,     3,     3,     3,     3,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     1,     1,     3,     2,
       2,     2,     2,     3,     3,     5,     6,     4,     4,     7,
       2,     6,     5,     6,     6,     4,     4,     5,     3,     4,
       6,     2,     4,     4,     4,    10,     6,     8,     6,     4,
       4,     6,     4,     4,     4,     6,     4,     7,     7,     7,
       6,     6,     6,     6,     3,     4,     6,     8,     2,     2,
       8,     8,     6,     6,     1,     6,     6,     8,     8,     6,
       8,     6,     2,     8,     8,     2,     2,     2,     4,     4,
       4,     4,     3,     8,     6,     8,     4,     6,     4,     4,
       6,     8,     4,     3,     6,     4,     6,     5,     8,     7,
      10,     1,     6,     4,     4,     4,     4,     4,     6,     4,
       4,     6,     2,     3,     0,     4,     0,     3,     0,     1,
       1,     3,     2,     4,     5,     4,     4,     4,     5,     4,
       5,     4,     5,     4,     5,     4,     4,     4,     4,     4,
       5,     7,     2,     3,     1,     4,     0,     1,     0,     2,
       0,     3,     3,     1,     2,     2,     3,     2,     1,     2,
       1,     2,     1,     2,     2,     2,     1,     0,     1,     1,
       3,     1,     3,     1,     3,     0,     1,     0,     2,     4,
       5,     1,     1,     1,     1,     4,     1,     3,     3,     3,
       5,     5,     7,     4,     7,     9,     6,     7,     9,     6,
       1,     2,     2,     0,     1,     4,     4,     4,     4,     2,
       4,     0,     3,     1,     0,     1,     0,     2,     3,     3,
       1,     1,     6,     6,     1,     2,     0,     1,     1,     0,
       1,     1,     1,     1,     3,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     0,     2,     0,     1,     0,
       2,     0,     2,     2,     0,     0,     4,     3,     1,     0,
       1,     1,     3,     3,     1,     2,     0,     1,     3,     3,
       1,     0,     1,     1,     0,     1,     2,     1,     3,     3,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     5,     0,     1,     3,     1,     3,     1,     2,     1,
       0,     1,     2,     5,     2,     1,     3,     0,     0,     7,
       0,     0,     8,     4,     6,     4,     4,     5,     0,     6,
       4,     4,     4,     5,     4,     1,     3,     1,     1,     3,
       0,     2,     0,     1,     0,     1,     1,     2,     3,     1,
       1,     8,     9,     8,     6,     7,     6,     0,     1,     1,
       1,     1,     1,     0,     1,     1,     3,     4,     1,     3,
       4,     3,     1,     2,     2,     4,     1,     1,     3,     1,
       1,     1,     0,     1,     3,     0,     1,     3,     1,     1,
       1,     0,     5,     9,     3,     1,     3,     0,     1,     8,
       6,     7,     0,     2,     0,     2,     1,     1,     1,     0,
       4,     0,     1,     0,     1,     1,     3,     1,     1,     2,
       2,     2,     1,     1,     1,     1,     0,     3,     0,     3,
       2,     4,     4,     3,     4,     4,     1,     3,     3,     6,
       2,     2,     0,     6,     0,     7,     5,     2,     1,     5,
       5,     2,     2,     1,     4,     3,     2,     3,     2,     2,
       1,     3,     4,     3,     3,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     4,     1,     1,     1,     1,
       1,     0,     1,     0,     2,     0,     1,     1,     1,     0,
       2,     0,     2,     0,     2,     2,     0,     2,     2,     0,
       4,     0,     4,     1,     1,     1,     1,     1,     3,     1,
       1,     0,     1,     1,     3,     0,     1,     1,     0,     4,
       0,     0,     5,     1,     0,     3,     0,     3,     3,     1,
       2,     2,     2,     2,     2,     3,     2,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     0,     3,     3,     1,
       0,     4,     1,     2,     0,     1,     0,     3,     3,     2,
       2,     3,     0,     1,     1,     2,     0,     0,     0,     0,
      22,     1,     1,     0,     1,     0,     1,     1,     0,     1,
       1,     0,     2,     2,     1,     3,     4,     3,     3,     0,
       2,     2,     1,     3,     3,     0,     4,     0,     3,     1,
       1,     0,     3,     2,     3,     1,     1,     2,     0,     2,
       3,     1,     3,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     2,
       2,     2,     1,     1,     3,     5,     2,     1,     1,     1,
       1,     3,     4,     5,     1,     5,     3,     2,     1,     3,
       2,     2,     4,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       2,     2,     3,     6,     5,     8,     2,     2,     0,     2,
       1,     3,     2,     1,     1,     1,     1,     0,     1,     1,
       1,     0,     2,     2,     2,     3,     3,     4,     6,     2,
       3,     3,     1,     3,     3,     2,     2,     1,     0,     2,
       3,     0,     2,     2,     2,     2,     2,     2,     1,     1,
       1,     1,     1,     1,     1,     0,     4,     1,     1,     1,
       3,     3,     1,     1,     2,     2,     0,     3,     1,     3,
       4,     4,     3,     0,     7,     1,     2,     1,     1,     1,
       1,     1,     1,     0,     5,     1,     1,     1,     1,     1,
       0,     4,     6,     6,     6,     7,     5,     0,     4,     8,
       8,     8,     6,     0,     1,     1,     2,     0,     1,     1,
       3,     0,     3,     0,     3,     0,     3,     0,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     2,     1,     1,     2,     0,     1,     3,     1,     2,
       2,     2,     1,     3,     3,     1,     1,     3,     1,     3,
       4,     5,     4,     6,     6,     1,     0,     3,     3,     1,
       1,     0,     2,     2,     2,     2,     0,     2,     0,     3,
       2,     1,     2,     2,     2,     2,     2,     0,     3,     0,
       1,     0,     3,     2,     0,     1,     2,     0,     1,     4,
       4,     5,     2,     3,     0,     1,     3,     0,     1,     1,
       0,     1,     1,     2,     1,     0,     1,     1,     3,     4,
       1,     4,     0,     2,     0,     1,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     2,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     3,     1,     2,     1,     2,     3,     3,
       3,     0,     3,     3,     0,     7,     0,     3,     1,     3,
       0,     3,     0,     3,     4,     0,     2,     3,     0,     3,
       0,     3,     4,     4,     1,     1,     0,     2,     0,    12,
       7,     6,     0,     0,     0,     0,     0,    14,     0,     0,
       0,     0,    11,     4,     4,     3,     4,     3,     3,     0,
       2,     1,     3,     5,     1,     1,     0,     1,     1,     0,
       2,     0,     1,     3,     5,     3
};

/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  2662,  1180,  2597,     0,     0,     0,     0,     0,     0,
    2599,   159,    66,  1754,  1859,  1860,  1667,  1692,     2,     0,
    1180,   305,   209,     0,    78,  1707,     0,  1912,     0,     0,
    1180,     0,   521,     0,  1906,     0,     0,  1180,  1747,  1896,
     282,   209,  2599,     0,  1226,     0,  1778,  2478,     0,     0,
       0,  1761,     0,  2476,  1747,     0,     0,     0,     0,     3,
       8,    19,     0,    41,    24,    30,    14,    18,    13,    54,
      48,    26,    39,    38,    10,     0,    27,    57,  1142,    58,
      16,    45,    11,    12,    15,    36,    44,    37,    40,    52,
    1216,    22,    23,    31,    46,    62,    20,    59,    55,    21,
    1861,    25,    47,    42,    33,    63,    34,    53,    35,    61,
      56,   978,    29,    49,    28,     9,    17,    50,    51,    43,
      64,    32,    60,     0,  1008,     0,     0,     0,     0,     0,
       0,     0,     0,  1690,   967,  2660,  2661,  2662,  1182,  1181,
       0,  2599,  2018,  1165,  1191,  2032,  2088,  2089,  2090,  2091,
    2092,  2093,  2034,  2094,  2095,  2033,  2096,  2098,  2097,  2099,
    2100,  2035,  2036,  2101,  2102,  2103,  2105,  2104,  2106,  2037,
    2038,  2107,  2108,  2109,  2110,  2111,  2039,  2040,  2112,  2114,
    2113,  2041,  2115,  2116,  2117,  2120,  2119,  2118,  2042,  2121,
    2043,  2122,  2123,  2124,  2125,  2126,  2127,  2128,  2129,  2130,
    2132,  2131,  2044,  2133,  2134,  2135,  2136,  2137,  2139,  2138,
    2140,  2141,  2142,  2045,  2143,  2144,  2145,  2146,  2147,  2148,
    2149,  2150,  2151,  2046,  2152,  2153,  2154,  2174,  2047,  2155,
    2158,  2157,  2156,  2159,  2160,  2161,  2163,  2162,  2164,  2165,
    2048,  2166,  2167,  2168,  2169,  2170,  2172,  2171,  2176,  2177,
    2178,  2179,  2180,  2049,  2050,  2051,  2173,  2175,  2385,  2181,
    2052,  2183,  2182,  2184,  2186,  2185,  2053,  2187,  2054,  2055,
    2188,  2189,  2014,  2190,  2015,  2191,  2193,  2194,  2195,  2201,
    2196,  2056,  2192,  2197,  2198,  2199,  2200,  2202,  2203,  2057,
    2204,  2205,  2206,  2207,  2208,  2209,  2210,  2211,  2212,  2213,
    2236,  2224,  2226,  2217,  2219,  2220,  2222,  2218,  2225,  2223,
    2229,  2230,  2228,  2231,  2232,  2233,  2234,  2235,  2227,  2215,
    2221,  2216,  2237,  2238,  2214,  2239,  2240,  2241,  2242,  2243,
    2244,  2245,  2246,  2247,  2248,  2249,  2251,  2250,  2252,  2253,
    2254,  2255,  2256,  2257,  2259,  2258,  2260,  2261,  2262,  2263,
    2265,  2264,  2267,  2268,  2058,  2266,  2269,  2270,  2271,  2272,
    2273,  2059,  2060,  2061,  2274,  2275,  2062,  2063,  2276,  2278,
    2277,  2279,  2280,  2281,  2282,  2283,  2284,  2285,  2064,  2065,
    2066,  2286,  2287,  2288,  2289,  2290,  2291,  2292,  2293,  2294,
    2295,  2296,  2297,  2298,  2299,  2301,  2300,  2302,  2303,  2304,
    2305,  2306,  2307,  2308,  2067,  2309,  2068,  2310,  2311,  2312,
    2313,  2314,  2315,  2316,  2317,  2318,  2069,  2319,  2070,  2320,
    2321,  2322,  2323,  2071,  2324,  2325,  2326,  2327,  2329,  2330,
    2328,  2331,  2072,  2332,  2333,  2334,  2073,  2336,  2335,  2337,
    2074,  2339,  2075,  2076,  2338,  2078,  2340,  2341,  2077,  2079,
    2342,  2343,  2344,  2345,  2346,  2348,  2347,  2349,  2350,  2351,
    2352,  2080,  2353,  2354,  2355,  2356,  2081,  2357,  2358,  2359,
    2360,  2361,  2363,  2362,  2364,  2365,  2366,  2367,  2369,  2371,
    2370,  2368,  2372,  2373,  2374,  2375,  2378,  2379,  2380,  2381,
    2376,  2377,  2082,  2382,  2383,  2384,  2386,  2387,  2389,  2388,
    2083,  2084,  2390,  2391,  2087,  2392,  2393,  2394,  2397,  2395,
    2396,  2399,  2398,  2400,  2403,  2401,  2402,  2085,  2404,  2086,
    2405,  2406,  2407,   228,  2021,   211,  2022,  2031,     0,     0,
    2468,  2467,  1149,  1166,  2600,  2601,   614,   917,     0,     0,
     918,     0,   613,   916,   614,  2662,     0,   610,   611,     0,
       0,     0,  1758,  1757,  1756,     0,  1754,     0,  1690,  1690,
    1690,     0,     0,  1690,  1690,     0,  1693,  1690,  1690,  1690,
       0,    71,  1868,   306,   307,     0,  2507,   208,     0,     0,
       0,  2013,     0,  1709,  1710,  1708,  1100,     0,  1913,  1914,
       0,  1921,     0,  1922,  1916,  2465,     0,     0,     0,     0,
       0,     0,   209,  1183,     0,  1712,  1748,  1713,  1711,     0,
     272,   281,   283,   284,   280,  2500,  2601,  2612,  2614,  1606,
    1234,   831,     0,     0,  2424,  2425,  2259,  2279,  2426,  2376,
       0,     0,  2442,  2408,     0,  2418,     0,  1835,   284,  1112,
    1136,  1120,  1113,  1136,  1762,  1759,     0,     0,  1100,  1915,
    2724,     0,     0,     0,  2719,     0,  2725,     0,  1226,     0,
       0,     1,     5,     0,     0,  1254,  2027,  2392,     0,  2026,
    2025,  2028,  2575,  2581,  2568,     0,  1114,  1128,  2169,  2051,
    2278,  1851,  1849,  2008,     0,   958,  1009,     0,   963,     0,
    2479,     0,   961,     0,   974,   973,   971,     0,   485,   956,
       0,   209,     0,  2671,   965,  1163,  2598,     0,   230,     0,
      80,    82,     0,     0,     0,  2604,     0,     0,     0,     0,
     163,     0,   209,     0,   160,  2671,  2671,  2662,  2664,  2666,
     614,   612,     0,     0,     0,     0,     0,  1688,  1752,  1755,
    2089,  2033,  2100,     0,  1981,     0,     0,     0,  1495,     0,
    2039,     0,  2115,  2117,  2044,     0,     0,  1254,  1254,   787,
       0,     0,     0,  2141,  2142,  1987,     0,     0,     0,  1978,
    1988,  2051,  2183,  2184,     0,  1980,  2189,     0,     0,     0,
       0,  2208,  1985,     0,     0,  2246,  2248,     0,     0,  2252,
    2253,  2254,  2255,  1964,  1308,     0,   787,  1977,  1984,  1970,
    2279,  2284,  2285,     0,  2294,     0,     0,  2323,     0,  2330,
    2328,  2334,     0,     0,  2360,     0,     0,   787,  1963,  2378,
    2379,  2380,  2381,     0,  1979,  2082,  1986,     0,  2392,  1254,
     787,   787,     0,     0,     0,  2400,  2403,  2407,     0,     0,
    1246,     0,  2632,  1307,     0,     0,     0,  1384,  1666,  1245,
    1249,  1266,  1271,  1285,     0,  1300,  1319,  1320,  1322,  1421,
    1321,  1327,  1326,  1974,  1325,  1324,  1975,  1976,  1247,  1318,
    1998,  2021,  1997,     0,     0,     0,     0,     0,     0,     0,
    1694,     0,   209,  1678,  1690,    73,     0,     0,     0,  2010,
    1582,  2482,  2483,     0,    79,  1101,  1713,     0,  1911,  1997,
       0,  1925,     0,  1178,     0,   712,   531,   522,     0,  1830,
    1829,     0,  1907,  2613,     0,     0,  1154,  1714,     0,  1902,
       0,  1900,  1897,  1899,   273,     0,     0,   303,     0,  2607,
    2604,  2625,  1217,  2615,     0,     0,  1614,  1607,     0,  1241,
    2645,  2640,  2639,  2642,  2643,  1240,  2644,  1239,  2641,  2638,
       0,  1235,  1237,  1238,   830,     0,   833,   835,  1730,  1731,
     834,   843,     0,   832,     0,     0,     0,     0,  2410,  2451,
    2448,  2447,  2431,     0,   839,   841,   840,  2439,   838,     0,
    2376,  2411,  2418,     0,     0,  2409,     0,     0,   831,  1843,
       0,     0,  1843,     0,  1614,  1833,  1836,     0,  2428,  1810,
     914,   913,   912,  2429,  1829,     0,  1786,  1798,     0,  1763,
    1803,     0,  2430,     0,  1832,     0,  1614,  1843,     0,  1779,
       0,     0,     0,     0,   279,  1141,  1140,  1116,  1137,  1138,
       0,     0,  1119,  1121,  1122,   144,     0,  2735,  2477,     0,
    1969,  1968,  2019,  2721,  1967,  2729,  2731,  2715,     0,  2718,
    2717,  2726,  1219,     0,  2617,     6,    65,     0,  2030,     0,
       0,     0,     0,     0,     0,   991,     0,     0,     0,     0,
       0,  1148,     0,  1144,  1143,     0,  1117,  1130,     0,     0,
    1865,  2669,  2670,  2668,   849,     0,  2663,   212,     0,   972,
       0,   486,   212,     0,     0,     0,     0,     0,   487,   488,
     419,  1015,  1691,   979,   969,     0,     0,   968,  2671,     0,
       0,  1193,  1195,  1194,  1212,   232,   229,   210,     0,     0,
    1151,  1685,  1687,  1168,  2603,     0,     0,  2605,  2609,  1306,
    1305,     0,   157,   162,     0,     0,     0,     0,  2667,     0,
     614,     0,     0,     0,  2659,  2647,  2654,  2655,  2658,  2657,
    2656,     0,  2653,  2646,  2649,  2650,  2652,  2651,  2671,  2665,
       0,   919,   919,   919,     0,  1523,  2008,     0,     0,     0,
    2011,     0,     0,  1587,  1340,  1587,  1587,  1587,  1496,     0,
       0,     0,     0,     0,     0,     0,     0,  1587,  1378,  1351,
       0,  1379,     0,     0,     0,  1989,     0,     0,     0,  2632,
       0,     0,  1487,     0,  1466,     0,     0,     0,  2632,     0,
       0,     0,     0,     0,  1491,  1493,  1997,  1587,     0,     0,
    1587,     0,     0,     0,     0,     0,  1259,   827,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1587,  1587,     0,     0,  1587,  1392,  1991,     0,     0,     0,
    1990,     0,     0,     0,  1983,  1982,  1965,     0,  1395,  1397,
    1396,     0,  1587,  1587,     0,     0,     0,  1330,  1329,  1331,
       0,     0,     0,     0,  2431,  1462,  1464,     0,     0,  1304,
    1303,     0,  1302,  1301,     0,  1248,     0,     0,  1253,  1252,
    1309,  1310,  1311,  1312,     0,  1313,  1314,  1315,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1332,     0,     0,
    1966,     0,  1438,     0,  1673,  1680,  1675,     0,  1694,  1676,
    1684,   501,   500,  1699,  1700,  1682,  1695,  1696,     0,  1681,
       0,     0,  1668,     0,    72,     0,  1891,     0,     0,     0,
    1887,  1889,  1893,  1888,     0,     0,  1892,     0,  1890,  1869,
    1873,  1879,  1870,     0,     0,   304,   308,   310,     0,   313,
    2517,  2532,  2533,  2529,  2534,  2552,  2535,  2539,     0,  2531,
    2523,     0,  2538,     0,  2527,  2536,     0,  2521,     0,  2537,
    2542,  2553,  2525,  2530,  2508,     0,  2515,  2519,  1583,  1584,
       0,  2481,     0,  2009,     0,     0,     0,  1201,  1926,  1927,
    1923,  1582,  2466,  2469,     0,   711,   532,     0,     0,   543,
       0,     0,    68,    69,     0,  1185,     0,  1184,  1188,     0,
       0,  1523,  1903,  1904,     0,   271,   296,   291,   299,   293,
     295,   294,   300,   301,   302,   297,   292,   298,   285,     0,
    2517,     0,  2501,     0,  2608,     0,  2610,  2627,  2626,     0,
    2152,     0,     0,  1665,  1657,  1662,  1659,     0,     0,  1241,
    1615,     0,  1589,     0,     0,  1224,  1227,  1236,  2444,     0,
    2441,  2440,     0,     0,  2459,  2412,     0,  2453,  2454,     0,
    2445,     0,  2446,     0,     0,     0,     0,     0,  2443,  2417,
    2416,     0,  2419,  2420,     0,  2423,  2463,  2464,  2461,  2462,
    2460,  2436,  1839,     0,     0,  1809,     0,   614,     0,     0,
       0,     0,     0,   209,     0,  1780,     0,     0,   659,  1802,
    1837,  1838,  1843,     0,     0,  1843,     0,  1815,  1833,     0,
    1843,  1775,     0,     0,  1767,  1772,  1768,     0,  1774,  1773,
    1776,  1764,  1765,  1839,  1791,   144,  1833,  1801,  1808,     0,
    1790,  1797,     0,  1806,  1833,  1833,  1846,  1846,     0,  1125,
    1126,     0,     0,     0,  1115,  1760,  1234,     0,     0,  1504,
       0,  1506,  1503,  1502,  1501,  1523,     0,     0,  2716,  2732,
    2714,  2720,  2727,  2728,  2713,  1220,  1614,  2624,  2618,  1218,
    2619,  2622,     7,     4,  1255,   999,     0,  2029,     0,     0,
       0,     0,  2585,  2583,     0,  2584,  2582,  2558,  2569,     0,
     980,     0,     0,     0,     0,     0,     0,     0,     0,   144,
       0,  1132,  1864,     0,  1853,  1854,  1855,  1856,  1857,  1852,
    1850,  1866,  1867,   850,   849,   605,   608,   607,     0,     0,
     964,     0,     0,   474,   962,     0,     0,   452,   430,   452,
     489,  1098,  1732,  1098,     0,  1732,  1732,  1098,  1732,     0,
       0,  1732,  1732,  1732,  1732,     0,     0,  1732,     0,     0,
    1098,     0,  1732,     0,  1083,     0,     0,  1732,  1732,  1732,
    1732,  1732,  1098,     0,     0,  1732,  1732,     0,  1108,     0,
       0,  1732,  1732,  1732,  1732,     0,  1732,  1732,     0,  1732,
       0,     0,     0,  1082,   618,   646,   647,   957,  1010,  1013,
    1088,  1021,  1033,  1017,  1016,     0,  1057,  1060,  1086,  1087,
    1084,  1000,     0,     0,   966,  1164,     0,     0,   909,   908,
    1209,     0,  1212,  1197,  1211,     0,   233,   235,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   144,
     112,   135,     0,     0,     0,     0,     0,     0,     0,    83,
      84,  1153,  1152,     0,  1150,  1176,  1175,  1173,     0,  1174,
    1172,  1167,  1169,  1170,  2602,  2606,   615,   849,   462,     0,
     422,  2581,     0,     0,     0,   211,  2708,     0,  2648,   146,
     920,     0,     0,     0,     0,     0,  1589,  1524,     0,  1589,
    1689,  1753,  1752,     0,     0,  1588,  1587,     0,     0,     0,
       0,     0,     0,  1497,     0,     0,  1489,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   788,  1402,     0,     0,
       0,     0,     0,     0,  1558,  1559,  1560,  1561,  1569,  1562,
    1563,  1564,  1571,  1576,  1565,  1566,  1572,  1573,  1574,  1567,
    1575,  1570,  1568,  1577,     0,  1557,     0,     0,  1488,  1581,
    1578,  1580,  1579,     0,  1467,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1587,     0,     0,
       0,  1587,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1413,     0,
       0,     0,     0,     0,  1587,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1374,     0,  2000,  1999,     0,
       0,     0,   882,     0,  1334,     0,  1333,  1531,     0,  2630,
    2633,     0,     0,     0,     0,  1244,  1251,  1250,  1257,  1256,
    1258,  1262,  1267,  1260,  1264,     0,  1316,  2095,  1269,     0,
       0,  1297,  2632,  1594,  1298,  1283,  1288,  1289,     0,  1286,
    1287,     0,  1291,     0,  1290,  1294,  1295,  1296,  1299,     0,
       0,     0,     0,  1323,  1328,  1348,  1249,     0,  1439,  1440,
    1994,  2001,     0,  1670,  1683,  1831,  1697,  1732,  2566,  1677,
    1102,     0,     0,    74,    76,  1884,  1881,  1880,  1882,  1886,
     144,  1883,     0,  1894,  2141,  2378,  2381,   317,     0,   289,
     288,   290,   314,     0,     0,  2518,  2516,  2550,  2549,  2554,
       0,  2551,  2547,  2540,  2576,  2544,     0,  2576,  2546,  2545,
    2576,  2541,  2548,  2576,  2513,     0,  1586,  2179,  2264,     0,
    1589,  2485,  1523,  2734,  2001,     0,  1924,     0,     0,     0,
    1179,     0,     0,   530,   529,   528,   527,     0,   545,   525,
     533,    70,     0,     0,  1908,     0,     0,     0,     0,  1156,
       0,  1905,   144,  1898,     0,     0,  2516,     0,  2513,  2611,
    2616,  2020,  1664,   836,  1658,     0,  1611,  1608,  1610,  1623,
    1624,  1622,  1616,  1617,  1621,  1620,  1223,  1233,  1229,  1232,
       0,  1595,  1242,     0,   848,   847,   844,   842,     0,     0,
       0,     0,  2458,  2450,  2452,  2449,  2432,  2433,  2434,     0,
    2437,  2435,     0,  2422,     0,  1841,  1844,  1845,     0,     0,
    1824,  1818,  1817,  1813,  1819,     0,  1814,  1828,  1827,  1826,
    1788,  1787,  1783,  1834,  1823,  1821,  1811,  1843,  1822,  1820,
    1769,  1770,  1771,     0,  1614,     0,  1841,  1816,  1843,  1833,
       0,  1843,  1843,     0,     0,  1805,  1807,  1139,  1124,  1123,
       0,     0,  1533,     0,  2620,     0,     0,     0,  1520,  1534,
       0,  1534,     0,     0,     0,     0,  1582,  2722,  2730,     0,
    2623,   977,     0,  2570,  2572,  2561,  2560,  2559,  2556,     0,
       0,     0,     0,     0,   992,   994,     0,     0,   976,   981,
     982,   986,   140,  2016,  1641,  1642,  1640,  1638,  1639,   141,
     142,  1631,  1632,  1628,  1629,  1627,  1630,   143,  1147,  1146,
    1145,  1129,  1118,     0,     0,  1134,     0,   606,  1732,  1732,
       0,     0,     0,     0,     0,     0,     0,     0,   213,   222,
    2480,     0,     0,   428,   429,  1732,   427,   475,   476,   479,
     480,   481,     0,     0,     0,     0,     0,     0,     0,     0,
     165,   482,  1732,  1732,   424,   453,   454,   457,   458,   459,
     460,   461,   420,     0,   425,  1099,   950,  1180,  1064,     0,
     690,   950,   905,   910,   910,  1062,  1733,     0,     0,  1180,
       0,     0,     0,     0,     0,  1180,     0,     0,     0,     0,
       0,  1732,     0,  1075,     0,  1019,     0,     0,     0,     0,
       0,  1076,     0,     0,     0,  1020,  1732,     0,     0,     0,
       0,     0,     0,  1180,     0,     0,     0,  1180,  1111,  1110,
    1109,     0,     0,  1180,  1180,     0,     0,     0,     0,   652,
     653,     0,     0,     0,   644,  1085,  1039,  1040,   619,   519,
       0,  1011,  1012,   849,   849,   689,     0,  1105,   686,   692,
    2004,     0,  1002,  1004,  2672,  2673,  2674,  1200,  1192,  1199,
    1196,  1212,     0,  1549,  1198,   231,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    81,
       0,     0,     0,     0,     0,     0,     0,     0,  1686,  1177,
    1171,   158,   849,  1732,  1732,  1732,  1732,   426,   463,   464,
     467,   468,   469,   470,   473,   471,   472,     0,     0,   438,
     991,     0,   174,  2702,     0,     0,   415,   414,     0,   616,
       0,     0,   921,     0,     0,     0,  1589,     0,  1606,  2009,
    1750,     0,  2012,     0,  1398,     0,  1443,  1474,  1445,  1446,
    1447,     0,     0,     0,     0,     0,  1399,     0,  1349,     0,
    1400,  1401,     0,     0,     0,     0,  1449,     0,   789,     0,
       0,  1352,  1353,  1345,  1337,     0,     0,  1423,     0,  1470,
    1354,     0,     0,     0,     0,     0,  1424,  1492,     0,  1494,
    2001,     0,  1453,  1406,  1359,     0,  1451,     0,  1360,  1425,
    1426,  1427,  1408,     0,  1429,     0,  1409,     0,     0,  1412,
       0,     0,  1362,  1457,  1455,     0,     0,     0,     0,  1459,
    1364,     0,     0,     0,  1363,     0,     0,     0,     0,     0,
       0,     0,  1366,     0,  1346,  1456,  1458,  1415,     0,     0,
       0,     0,     0,  1375,     0,  1230,  2634,  1531,     0,     0,
    2625,  1338,   952,  1463,  2002,  1263,  1268,  1261,  1265,  2632,
       0,     0,     0,     0,  1281,  1280,     0,     0,     0,  2632,
    1594,  1284,  1442,  1430,     0,  1487,     0,  1674,  1671,  1698,
       0,     0,  1104,  1103,  1679,  1102,    77,     0,  1885,  1878,
    1895,  1871,     0,   309,   318,   311,   315,   316,   312,  2543,
       0,  2524,     0,  2528,  2522,  2526,     0,     0,  2514,     0,
    2520,  2495,  2489,  2496,  2498,  2492,  2497,  2499,  2490,  2491,
    2486,  2493,  1614,     0,     0,  1202,  1204,  1205,  1203,  1212,
       0,     0,  2472,  2473,  2471,  2470,   535,     0,   553,  1648,
    1649,  1634,  1635,  1633,  1636,   544,  1637,  1647,     0,   556,
       0,     0,     0,  1910,  1909,     0,  1186,  1189,  1190,  1161,
    1160,  1162,  1155,  1157,  1158,  1234,     0,  1727,  1726,     0,
    2614,  1704,  1706,  1715,  1718,     0,  1901,     0,   286,     0,
       0,     0,     0,     0,     0,  1931,  1656,  1612,  1613,  1996,
       0,     0,     0,  1590,     0,  1591,     0,     0,  2414,     0,
    2456,  2455,  2457,     0,  2421,  1840,     0,  1792,     0,  1812,
    1825,  1785,     0,  1804,  1766,  1794,  1784,  1589,  1833,  1781,
    1782,  1847,  1848,   145,  1230,  2625,  1582,  1529,  2621,     0,
    1522,  1521,  1535,     0,     0,  1534,  1534,     0,  1509,  1508,
    1589,  1745,     0,  1507,  1546,     0,  2733,  2571,     0,     0,
    2557,   997,   995,   996,   998,   993,   985,   984,   209,   983,
     989,     0,   988,  1131,     0,     0,  1127,  1858,     0,     0,
     960,   216,   219,   217,     0,   218,     0,     0,   484,   483,
       0,  1831,   477,   169,   168,   170,   171,   173,   172,   167,
     975,     0,     0,     0,  1831,   455,   431,   432,   435,   436,
     437,   691,   951,  1044,     0,     0,     0,   910,   685,   950,
     919,   911,   950,   950,  1094,  1095,     0,     0,   631,   626,
    1066,   640,  1042,  1027,  1043,  1054,  1056,     0,   628,   629,
     630,   654,     0,     0,   642,     0,     0,  1022,  1073,  1074,
    1102,   623,   658,     0,     0,     0,   667,   668,   666,   648,
     655,  1096,  1097,   624,   625,  1068,     0,  1602,  1604,  1611,
     633,   632,   627,     0,     0,  1079,  1049,     0,   665,   663,
     660,   662,   661,   664,   643,   635,   634,   637,   636,   639,
     638,   651,   641,  1032,     0,     0,  1041,  1098,  1098,  1058,
    1059,  1014,  1018,  1061,     0,   673,   674,   676,   677,  2007,
       0,  1107,  1063,     0,   678,   687,   679,     0,     0,     0,
       0,     0,   179,  2676,     0,  1552,     0,  1553,  1550,  1551,
     234,   136,   134,   115,   119,   121,   114,   117,   118,   120,
     124,   125,   123,   126,   127,   130,   131,   128,   122,   129,
     116,   132,   113,     0,    86,    87,     0,    88,    89,     0,
      90,    91,     0,    92,    85,     0,     0,     0,     0,  1831,
     465,     0,     0,  1732,  1732,   421,   439,   440,   443,   444,
     445,   446,   447,   450,   448,   451,   449,   980,     0,     0,
     236,   671,   672,   670,   669,     0,  2709,   418,   416,   417,
       0,     0,   689,   147,   517,   617,   620,   943,   945,   944,
     935,   934,   148,   151,   154,  1751,     0,  1555,  1625,     0,
       0,  1444,     0,  1498,     0,  1342,   801,   801,   785,  1482,
     781,  1486,   801,  1478,   785,  1480,     0,     0,  1490,     0,
       0,     0,  1450,  1448,     0,     0,     0,     0,     0,     0,
    1468,     0,     0,     0,  1347,     0,  1434,  1454,  1452,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1460,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   871,   877,   880,   881,   883,
     875,     0,  1417,  1335,  2628,  1231,  1589,     0,  2635,  2637,
    1230,     0,  2620,     0,     0,  1465,     0,  1278,  1274,     0,
    1272,  1593,  1293,  1292,     0,     0,     0,  1282,  1441,     0,
    1995,  2003,  1089,   498,  2567,  1669,    75,  1874,     0,     0,
    2580,     0,  2579,     0,  2562,  2565,  2008,     0,     0,     0,
       0,  2484,     0,  1741,  1741,     0,  1212,  1214,  1917,  2474,
    2475,     0,   536,   537,   539,   541,   531,     0,   523,   526,
       0,   535,     0,  1159,     0,  1705,     0,     0,     0,  1722,
    1993,  1992,  1999,  1724,  1735,  1723,  1729,     0,     0,     0,
       0,     0,     0,   837,     0,  1939,  1609,  1619,  1618,     0,
       0,  1606,  1243,     0,  2413,  2438,  1842,  1614,  1800,  1799,
    1777,  1614,  1796,  1843,  1527,     0,  1528,  1505,     0,  1513,
       0,     0,     0,     0,     0,     0,     0,  1606,     0,  1540,
    1541,     0,     0,  1544,  1547,  1548,  1526,  2723,  2573,  2574,
     990,     0,  1133,     0,   657,   656,   221,   220,   226,   227,
    1645,  1643,  1644,   490,   502,  1646,   503,   478,   166,   491,
     492,   456,     0,   433,  1046,     0,   950,   906,   907,   919,
       0,   919,   919,     0,     0,  1026,     0,  1168,     0,  1031,
     843,   649,  1035,  1072,  1071,     0,  1036,   650,     0,  1024,
       0,  1605,  1023,     0,  1051,  1029,  1894,   520,  1065,   689,
    1106,   887,   777,   725,   716,   801,   719,   718,   763,   785,
     730,   781,   779,   748,   781,   781,   756,   755,   773,   754,
     759,   738,   857,   857,   737,   776,   857,   760,   758,   762,
       0,   764,   781,   769,   757,   761,   778,   753,   750,   775,
     801,   785,   785,   734,   774,   857,     0,   767,   801,   693,
     805,   736,   857,   864,     0,     0,   801,   803,  2006,     0,
     189,     0,     0,  1001,     0,   182,   180,   191,     0,     0,
       0,  1213,     0,     0,   137,   139,    93,     0,    95,    97,
     102,     0,   104,     0,   107,     0,   109,  2017,   111,     0,
      98,     0,   497,   496,   495,   494,   466,     0,     0,     0,
       0,  1831,   441,   161,     0,     0,     0,   237,   239,   240,
       0,   247,     0,   506,     0,   504,     0,   516,   518,     0,
    1928,   849,   621,     0,     0,     0,  1525,     0,     0,  1749,
       0,  1376,  1499,     0,     0,   802,  1475,   857,     0,  1484,
       0,  1485,   783,   782,  1477,  1479,  1483,  1481,  1341,  1350,
    1422,  1344,  1343,     0,     0,  1382,  1404,     0,  1383,     0,
       0,     0,     0,     0,  1356,     0,  1358,     0,     0,  1436,
    1407,  1428,  1385,  1410,     0,  1361,  1336,     0,  1386,     0,
    1391,  1389,     0,  1365,     0,     0,  1372,     0,  1370,     0,
    1371,     0,  1373,  1414,  1416,     0,     0,   882,   868,   869,
     870,     0,   872,   874,   876,     0,     0,  1595,  1532,  2636,
    1221,  1222,  2629,  2631,   953,  1270,     0,  1279,  1276,     0,
    1273,  1431,  1672,  1091,  1090,  1876,     0,  1872,   326,   321,
     329,   323,   325,   324,   330,   331,   332,   333,   327,   322,
     328,   320,   319,  2577,     0,  2588,     0,     0,     0,     0,
       0,     0,  1741,     0,  1701,  1703,  1206,  1212,  1214,     0,
    1207,  1928,   540,     0,     0,   560,     0,   558,   534,     0,
    1187,  1230,     0,  1716,  1719,  2617,     0,     0,     0,  1740,
    1739,     0,  1736,  1738,     0,   287,     0,  2506,     0,     0,
       0,     0,     0,     0,     0,  1932,  1934,     0,  1663,  1599,
    1598,  1592,  1614,     0,  1793,   144,  1789,  1530,     0,  1501,
       0,     0,     0,  1501,  1511,  1510,     0,  1744,  1625,  1746,
    1536,  1536,  1545,   987,  1135,   434,     0,     0,  1045,     0,
       0,     0,     0,     0,     0,  1078,     0,  1105,  1028,  1055,
    1081,     0,  1069,  1180,  1603,  1080,  1050,  1052,  1156,     0,
     675,     0,   891,   724,   717,   735,   733,   790,   780,     0,
     790,   790,   851,   862,   860,   854,     0,   858,   859,   744,
     763,   739,     0,   857,   752,   743,   765,   768,   770,   772,
     790,     0,   857,   732,   731,   741,   728,   790,   813,     0,
       0,     0,     0,   809,     0,   885,     0,     0,   816,   694,
     806,   808,   696,     0,     0,   766,   857,   721,   865,   864,
     723,   857,   864,   790,     0,   804,   790,     0,   190,   178,
       0,     0,  1003,  1005,     0,     0,  1006,  2678,     0,  2680,
    1210,  1554,   133,     0,    94,     0,   103,     0,     0,   108,
       0,     0,    99,     0,     0,   423,   493,   499,   442,     0,
       0,  2703,     0,     0,  2701,   250,   248,   249,     0,   243,
     245,   240,     0,     0,     0,   616,  1930,  1929,   505,   601,
     622,     0,     0,     0,  1556,  1626,     0,  1500,     0,     0,
       0,     0,  1476,     0,     0,     0,     0,     0,  1471,  1473,
    1469,  1461,     0,     0,     0,     0,     0,  1339,     0,  1432,
       0,     0,     0,     0,     0,     0,  1369,  1367,  1368,   866,
    1419,     0,   879,   873,   871,   878,     0,  1591,  1275,     0,
    1093,  1092,     0,     0,  2578,     0,  2512,  2564,  2563,  2581,
    2581,  2581,     0,  1702,     0,  1208,  1215,     0,   538,     0,
     533,     0,   557,     0,   524,   600,  1725,  1717,  1720,  1721,
    2001,  1734,     0,  1728,     0,  2503,  2504,  2502,     0,     0,
       0,     0,  1933,     0,     0,  1940,  1942,  1600,  1601,     0,
    1596,  1650,  2415,  1795,     0,     0,  1516,  1519,     0,     0,
       0,  1743,     0,     0,     0,  1048,     0,   688,     0,     0,
       0,  1611,   948,     0,     0,     0,     0,     0,     0,     0,
    1077,  1971,  1067,  1037,  1105,  1025,     0,  1030,   645,     0,
     890,     0,   895,   794,   795,   796,   745,   791,   793,     0,
     747,   715,   853,   852,   856,     0,   855,   864,   740,   771,
     746,     0,   742,   729,   819,   820,   822,   821,   818,   828,
     811,   829,     0,     0,   823,   824,   825,   817,     0,   807,
       0,     0,   815,   810,   720,   722,   726,   727,   713,     0,
     714,  2005,   176,   181,   192,   193,   970,  2677,     0,  2675,
       0,   138,    96,   105,   106,   110,     0,     0,     0,  2700,
     187,     0,   238,   843,   241,  2710,   247,     0,     0,   507,
     509,   517,   602,     0,     0,     0,     0,  1377,   799,   797,
     800,   798,   786,     0,  1380,  1381,  1405,     0,  1403,     0,
    1357,  1433,     0,     0,  1411,  1387,  1390,  1388,  1393,  1394,
       0,  1418,     0,  1606,  1277,  1877,  1875,     0,  2586,  2586,
    2586,  2494,     0,     0,     0,   546,     0,   563,   562,   559,
    1737,  2505,  1937,  1938,     0,  1935,     0,     0,  1941,  1597,
       0,  1660,  1514,     0,  1517,     0,  1512,     0,  1537,     0,
    1549,     0,  1047,     0,     0,   922,     0,   947,     0,     0,
       0,  1973,  1972,  1034,  1038,  1070,     0,   888,     0,   892,
     893,   894,     0,   886,   792,     0,   954,   863,   861,     0,
     812,   814,   819,   697,     0,   183,  1007,   354,  2679,  2688,
    2685,  2690,  2682,     0,     0,   164,   179,   188,  2704,   826,
     214,   244,     0,     0,  2617,  1928,     0,   512,   922,   924,
     926,     0,  1472,     0,  1435,  1437,   867,     0,  1614,  2589,
       0,  2510,  2511,  2509,     0,     0,     0,   554,     0,     0,
     588,  1936,  1944,  1943,     0,  1241,  1661,     0,     0,  1539,
    1538,     0,     0,     0,   922,     0,  1732,   680,   923,   939,
     938,   928,  1611,     0,   924,   926,     0,   889,     0,     0,
     857,     0,   857,     0,     0,   185,   380,     0,   366,   352,
       0,     0,     0,   356,   194,   197,   195,     0,   196,   202,
       0,   203,   204,   205,   206,   207,   198,   378,   379,   201,
     199,   200,     0,  2023,     0,  2024,  1226,  2685,     0,     0,
       0,  2681,  2614,   100,     0,   191,     0,  2711,   246,  2696,
     510,   508,     0,  2614,   149,     0,   152,   925,   941,   932,
     155,   927,   940,   930,   784,  1355,  1420,  1650,     0,     0,
       0,     0,     0,  2587,  2591,  1742,  1523,   542,     0,   547,
       0,   550,   552,   566,     0,  1732,     0,     0,  1732,  1732,
    1732,  1732,   581,   589,   591,     0,  1652,  1225,  1515,  1518,
    1543,  1542,   684,   683,   937,     0,   929,   946,   949,   681,
     682,     0,   901,     0,   900,     0,   897,   896,   749,   955,
     751,     0,   184,     0,   177,     0,     0,   365,   368,     0,
       0,   371,   361,   360,   362,     0,   355,   354,   354,   408,
     359,   405,   404,   397,  2689,     0,  2617,  2686,     0,     0,
       0,  2683,     0,     0,  2705,   224,   223,   215,     0,   354,
    2694,  2695,     0,  2698,   514,   513,  1089,     0,  1089,   933,
    1089,   931,  1241,  2592,  2595,  2593,  2594,  2596,  2590,  1918,
     555,   548,     0,     0,   564,     0,  1732,  1732,     0,     0,
       0,     0,     0,   561,   590,  1732,  1655,     0,  1653,   936,
    1053,   903,   904,   902,     0,     0,   708,   186,   381,   392,
     395,   387,   367,     0,     0,     0,   357,   354,     0,   341,
     339,   340,   346,   347,   348,   349,   350,   351,   342,   345,
     343,   344,   354,     0,   255,     0,     0,  2687,  2684,     0,
    2691,     0,   101,   193,   214,   225,  2712,  2697,   354,  2617,
     150,   942,   153,   156,  1228,   836,   554,   551,   574,   567,
     570,     0,   599,     0,     0,   595,   596,   594,   592,   585,
       0,   583,     0,  1651,     0,     0,     0,   710,   709,   698,
       0,     0,   354,   388,     0,   363,     0,   372,     0,     0,
     253,   411,   409,   251,   399,   399,  2692,  2693,   175,  2706,
    2699,   515,  1919,   549,   574,     0,   572,     0,   568,   565,
     569,   597,   598,     0,   582,     0,   593,  1654,   899,   898,
       0,   706,   702,   695,   699,   701,     0,     0,   389,   395,
     385,   393,   354,     0,     0,   353,     0,   407,   254,     0,
       0,     0,   354,     0,   398,   400,   402,   354,  1945,   571,
       0,   579,   575,   577,   580,   588,   587,   584,   704,   703,
     700,   707,   705,     0,   386,     0,     0,   384,   364,   369,
     354,   412,   354,   265,   264,     0,   257,   334,   406,     0,
     256,  2707,     0,  1931,   573,     0,     0,   586,   390,     0,
     354,     0,   354,     0,   354,     0,     0,     0,     0,     0,
     252,     0,  1939,   578,   576,     0,   382,   354,   370,   375,
       0,     0,   260,   335,   336,     0,   262,     0,  1947,   354,
     354,   371,   374,   413,   410,     0,   337,   258,   259,   270,
     269,     0,  1946,     0,  1951,   354,   354,   376,   278,   276,
     354,   266,   274,   268,     0,   275,     0,   263,     0,     0,
    1958,     0,   261,   277,   338,  1949,  1950,  1948,  1953,     0,
       0,  1955,  1956,     0,  1920,   267,  1957,  1952,     0,  1959,
    1961,     0,  1954,     0,     0,  1960,  1962
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    58,   663,  1603,    59,    60,    61,    62,    63,  1422,
      64,   885,  1344,  2013,  2014,    65,   582,    66,  1118,  1119,
    1779,  1780,  2984,  3397,  3398,  2993,  3411,  2987,  3401,  3402,
    2990,  3405,  3406,  1769,  1770,  3393,  3394,  1771,  1574,    67,
    2469,  3443,  4356,  3444,  4358,  3445,  4360,  1797,   545,  2289,
    2290,  1144,  3019,  3383,  4115,  3387,  4195,  4314,  4126,  2392,
    3746,  4116,  4117,  4204,   576,   577,  1804,  1650,  4237,  2268,
    4347,  2269,    68,   708,  1116,  1745,  1746,  3426,  3427,  3773,
    3428,  3778,  3779,  3780,  3781,  4532,  4407,  4483,  4533,  4587,
    4615,  4621,  4565,  4630,  4631,  4632,  4619,   925,  4633,    69,
     612,   613,   927,  1448,  2027,  1449,    70,    71,   575,  1365,
    1366,  1367,  1368,  2638,  2028,  2633,  2634,  3561,  4566,  4617,
    4636,  4408,  4409,  4321,  4410,  4207,  4411,  4325,  4412,  4210,
    4413,  4414,  4415,  4416,  4524,  4417,  4320,  4558,  4404,  4405,
    4526,  4599,  4612,  4418,  4217,  4315,  4470,  4218,  4316,  4519,
    4400,  4520,  4553,  4595,  4401,  4471,  4556,  4474,  4419,  4425,
    4534,  4420,  4426,  4421,  4222,  4332,  4424,  4330,  4423,  4530,
    4529,  4583,  2468,  3030,   694,   695,   720,  2459,   696,  1133,
    1089,  1653,  2302,  2303,  2836,  2837,  3005,  3006,  3007,  2294,
    2295,  2296,  2447,  2448,  2449,  2276,  2277,  2278,  1657,  2273,
    2274,   697,  1090,  1100,  2297,  2298,  2299,  3011,  2451,  2452,
    2453,  2454,  1333,  3015,  1334,  3273,  3033,  3435,  4134,  3788,
    4243,  4439,  3436,  3437,  3438,  2925,    72,   598,   907,  1419,
    2690,  1420,  2692,  3181,  3182,  3183,  2073,  2074,  4055,  2078,
    2689,  4157,  4446,  4270,  4271,  2677,  4269,  3188,  3586,  3587,
    3861,  4057,  4160,  4451,  4373,  4499,  4449,  4495,  4450,  4497,
    4576,  4542,  4543,  4383,  4460,  4461,  4503,  4545,  4282,  4283,
    4284,  2710,  4013,  2441,  1644,  1645,   546,   547,   548,   717,
    3034,  1713,  3035,  1714,  2924,  1715,  1716,  2881,  1527,  2914,
    2889,  3025,  2934,  2935,  2936,  2937,  2938,  2944,  2848,  2309,
    2310,  2388,  2947,  3369,  3971,  4513,  4514,  4515,  4469,    73,
     904,  4003,  3679,  3701,  3371,  3372,  3373,  3374,  3375,  3376,
    3377,  3461,  3462,  3459,  1191,  3936,  3937,  3938,  3455,  3456,
    3736,  3719,  3720,  3721,  4004,   847,  3960,  3686,   960,   961,
    2725,   976,   977,  2125,  1480,  3722,  2126,  1648,  3687,  3688,
    3689,  3730,  3516,  4040,  3522,  3523,  3524,  3115,  3116,  3117,
    3118,  3119,  2582,  3723,  2946,  3672,  3929,  3932,  4103,  4306,
    2311,  2849,  1741,  2852,  1018,   549,  2313,  2314,  1810,  1811,
    4177,  4246,  4250,  4178,  4251,  4247,  4179,  4180,  4181,  4253,
    4249,  3040,  3910,  3911,  2841,  3135,  4105,    74,  1101,  1084,
    1092,  1087,  1108,   703,  1731,    75,  2228,  2229,  2230,  2231,
    1620,  2224,  2225,   668,  2393,  2952,  3986,   685,  1717,  1718,
    1719,  3663,  3297,  3668,  4093,  1720,  2382,  2863,  1721,  3284,
    3648,  1722,  3314,  3666,  3926,  2864,  2865,  1723,  1724,  1725,
    1726,  3296,  3308,  3924,  1727,  3542,  3543,  3544,  2315,   896,
    2624,  2942,  2362,    76,    77,    78,   676,  1629,    79,  1032,
    1033,  1034,  1076,  1077,  1631,  2255,  2806,  1027,  1028,  1029,
     677,  1074,    80,   712,  1784,    81,  1430,  2702,  2703,  2704,
      82,  1109,    83,    84,   713,  1791,  1792,  1793,    85,  1414,
     140,    86,   915,  1425,  1427,  1428,    87,   707,  1110,  1111,
    1112,  1113,  2398,    88,  2065,  2665,  2666,  2667,  2668,  1742,
    2402,  1743,  1744,  3580,    89,    90,   660,  2589,   618,   619,
     620,  3124,  3125,  3126,  2118,   950,   951,   952,  1475,   848,
     849,  1285,  1058,  1836,   851,   852,   853,  1286,  1287,  3724,
     854,  1298,  1969,   855,   856,   857,   858,   859,   860,  3488,
    3489,  3819,  1997,  1998,  1999,   861,   862,  1275,  1885,  3481,
    3080,  3808,  1827,  3066,  1877,  1878,  1213,  1214,  1179,  2494,
    1833,  1579,  1580,  1581,  1582,  1583,  2203,  1816,  1817,  1584,
    2193,  2585,  2586,  2194,  2773,  3903,  3252,  3253,  3254,  3255,
    3256,  2956,  2957,  2958,  3046,  1874,  1875,  1883,  1400,  1401,
    1828,  2121,  3221,  2604,  2735,  3619,  3890,  1730,  2897,  2898,
     936,  1596,  2107,  2729,  1469,  1470,  2112,  2113,  3449,  4620,
    3120,  2239,  3274,  2686,  2687,  4071,  4387,  4388,  1463,  1464,
     938,   939,  1465,    91,   557,    92,  2011,  2618,  3152,  1341,
    2630,  1121,   736,   701,   570,  1335,  1336,  1337,    93,    94,
     586,   607,   918,  2711,  2712,  3198,  2713,  2714,  2715,  3205,
    2316,  2317,  3206,  3601,  3602,  3603,  3574,    95,  2780,  2781,
     608,    96,  1170,   555,   556,    97,  1036,   645,  1550,  1551,
    1552,  2174,    98,   637,  1019,  3227,  3231,  2160,   911,  1338,
    1532,  1022,  1533,  2145,  2747,  1515,  2185,    99,  1080,  1079,
    1639,   100,   681,  1640,   101,   886,  1359,  2023,  3157,  3547,
    3842,  1360,  1361,  2631,   102,   609,   922,   923,  1433,  2092,
     103,   600,   912,  2084,   104,   590,   105,   106,   901,  3581,
    4445,  4538,   594,  2067,  1410,  3789,  3215,  3615,  3616,  3618,
    3885,  3886,  4573,  4624,  4647,  4640,  4650,  4651,  4654,  4659,
    4660,   863,  1043,   864,  3920,   865,   866,   867,  3199,   868,
    2108,   869,  2782,   870,  2842,  1585,   737,   580,   524,  3407,
    3408,   669,  1044,  2102,   899,  4224,   671,   672,   526,   527,
     107,   633,   981,   985,  1502,  1503,  1504,  1023,  1496,   982,
    1505,   636,   968,   969,  1492,   970,  1490,   971,  2133,  1485,
    1511,   108,   902,   532,  1412,  1413,  2674,   109,   647,   110,
     111,   690,   112,  1402,  2060,  2061,  2660,  3170,  2661,   113,
     928,  1452,   114,   888,  1394,  2649,  1395,  2036,  1396,  1397,
    2050,  2044,  2053,  2047,  2219,  1616,  1617,  3167,  2009,   673,
     674,  2641,  3161,  3162,  1065,  4151,  3846,  4263,  4264,   115,
     141,   535,   715,  1128,  1455,   116,   117,   118,   119,   932,
    1598,  1599,  2767,  1600,  1601,  1459,  1949,  1950,  1271,  1272,
    3127,  3128,   953,   724,  1153,  1145,   134,   135,   136,   727,
     728,   137,  1106,  1107,  2953,  3389,  3748,  3989,  3990,  4121,
    4232,  4228,  4229,  4122,  4226,  4231,  4352,  4353,  1147,  4438,
    1148,  1149,  3020,  4001,  4236,  4434,  4537,  1150,  2465,  3431,
    4130,  4349,   120,  1049,  1045,   657,  1594,  1588,  1590,   121,
     122
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -4054
static const int yypact[] =
{
    4347,  1291,   125, -4054,  -112,   908, 54792,  1111,  1362,  1362,
     711,  3371, -4054,  1459, -4054, -4054, -4054,  3423, -4054, 54792,
     125,   383, -4054, 27743, -4054,  1343,  1052,   522,   122,  1362,
     125,   863, -4054, 54792, -4054,  1087,  1432,   125,   995, -4054,
   48362, -4054,   711, 54792, -4054, 30977, -4054, -4054, 48362,   926,
     138,   992,  1253, -4054,  1376, 54792,  1465,  -114,  1677,  1543,
   -4054, -4054,  1329, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, 43218, -4054, -4054,  1168, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   28390, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054,  1596, 54792,  1618, 54792,  1331,  1606, 54792,
   47076, 54792, 27743,  1599,  1673, -4054, -4054,  1747, -4054, -4054,
    1362,   711, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054,  1269, -4054, -4054,  1379,  1786,
   -4054, -4054, -4054, -4054, -4054,  1872,  1752, -4054,  1801, 47076,
   -4054, 54792, -4054, -4054,  1752,  1139,  1473, -4054,  1482,  1807,
    1834,  1838, -4054, -4054, -4054, 49005,  1459,  9990,  1599,  1599,
    1599, 54792,  1883,  1599,  1599, 54792, -4054,  1599,  1599,  1599,
    1362, -4054, -4054, -4054, -4054,  1957, -4054, -4054, 54792,  1733,
     201,   -72, 47076, -4054, -4054, -4054,  1885, 54792, -4054, -4054,
   13315, -4054,  1865, -4054, -4054, -4054,  1362, 13315,  2073,  1936,
    1070, 54792, -4054, -4054,  1362, -4054, -4054,  1900, -4054,  1290,
    1530, -4054, -4054,  1658, -4054, -4054,   171, -4054,  1558,   146,
    1134,    96,  1672,  1509,   208,   215, 40646,   858,   432,   104,
   31623, 41289,  1523, -4054, 49648,  1532,   131,  6339,  1658, -4054,
     -47,  -109, -4054,   -47, -4054, -4054, 54792,  1362,  1885, -4054,
   -4054,   245,   245,   245,  2105,   245, -4054,   245, -4054,  -114,
    1541, -4054, -4054,  1554, 54792,  1547, -4054,  1571,  1982, -4054,
   -4054,  1569,  2014,  -138, -4054,  1468, -4054,  1614,  2040,  2091,
    2340, -4054, -4054,  1589,  1058, -4054,  1653, 43861, -4054, 47076,
   -4054, 54792, -4054,  1882, -4054, -4054, -4054,  1748, -4054, -4054,
    2097, -4054, 54792,  1742, -4054, -4054, -4054, 27743,  1612, 54792,
   -4054, -4054, 27743, 27743,  1091,  1299,  1495, 54792, 54792,  2116,
   -4054,  2271, -4054,  1836, -4054,  1281,  1258,  1747,  2317, -4054,
    1752, -4054, 54792, 54792, 54792, 27743,    37, -4054,  1663, -4054,
    1692,  1698,  1702, 17970, -4054,  1705,  1708,  1714, 13315,  1721,
    1728,  1743,  1761,  1770,  1772,  1788,  1792,  1547,  1547,  1795,
    1800,  1820,  1824,  -157,  1826, -4054,  1856,  1860,  1863, -4054,
   -4054,  1869,  1871,  1874,  1879, -4054,  1884,  1888,  1891, 13980,
    1896,  1918, -4054, 25150,  1925,  1948,  1952,  1955,  1960,  1975,
    1984,  1992,  1995, -4054, -4054, 13315,  1795, -4054, -4054, -4054,
    2002,  2008,  2025,  2032,  2034,  2038,  2041,  2077,  2093,  2096,
    2098,  2102,  2114,  2118,  2123,  2126,  2139,  1795, -4054,   871,
    2156,  2160,  1026,  2171, -4054,  2180, -4054,   263,  2196,  1547,
    1795,  1795,  2202,  2204,  2218,  2230,  2241,  2245, 17970, 17970,
   -4054, 17970, 13315, -4054, 54792, 32269, 54792, -4054,  1686, -4054,
   40000,  3012, -4054,  2675, 17970,   927, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054,  1837, -4054, -4054, -4054, -4054, -4054,  2132,
   -4054,  2252,  1773, 54792, 54792, 54792,  2121, 54792, 54792, 47076,
     873, 54792, -4054, -4054,  1599,  1944,  3314, 34207,  3347, -4054,
     154, -4054, -4054, 54792, -4054, -4054,  1900,  2081,  1364,  1949,
    2543,   243, 27743, -4054,  2047,  1364,  1246, -4054,  -199, -4054,
   -4054,  2424, -4054, -4054, 43861, 27743, -4054, -4054, 27743, -4054,
    2715, -4054,  2128, -4054, -4054,  1837,  2808, -4054,  4457,  2429,
    1299,   373, -4054, -4054, 30331,  2877,  2655, -4054,  2724,  1225,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
    9990,  1134, -4054, -4054, -4054, 54792, -4054, -4054, -4054, -4054,
   -4054,  2862, 13315, -4054, 43861,  1059,  2670,     0, -4054,  2294,
    2300, -4054,    65,   131, -4054, -4054, -4054, -4054, -4054, 54792,
     104, -4054,  1532,   131, 32915, -4054,  9325,  2789, -4054,    15,
    2315,  2395,    15, 44504,  2655,   876, -4054,   172, -4054,  2787,
   -4054, -4054, -4054, -4054,  2440,  2426, -4054, -4054,   189,  2824,
   -4054,  2825, -4054,    84, -4054,  2454,  2655,    15,   876, -4054,
    2726,  2845,   225,  1164, -4054, -4054, -4054, -4054,  2352, -4054,
     624,  2931, -4054,  2367, -4054,  2850, 27743, -4054, -4054, 22553,
   -4054, -4054, -4054,  2382, -4054,  2671,  2492, -4054,  2407, -4054,
   -4054,    58, -4054,  2392,   738,  2900, -4054,  2400, -4054,  2404,
    3016, 47076,   133,  1565, 43861,  2430,  2908,  2915,  2916,  2919,
    2920, -4054,  2921, -4054,  2419,  2923, -4054,  2681, 47076,  2396,
   45147, -4054, -4054, -4054,  2963,  2979, -4054, -4054,  2779, -4054,
    3094, -4054, -4054,  2444,  2996,  2996,  2996,  3109, -4054, -4054,
   -4054,  5547, -4054, -4054, -4054,  2622,  2490, -4054,  1742, 27743,
    2875,  2459, -4054, -4054,  1409, 13315, -4054, -4054,  4881,  3262,
     178, -4054, -4054,   164, -4054,  3068,  2679, -4054, -4054, -4054,
   -4054,  2964, -4054, -4054,  3094,  3026,  2996, 43861, -4054,  2940,
    1752, 54792, 54792, 54792, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, 54792, -4054, -4054, -4054, -4054, -4054, -4054,  1742, -4054,
   27743, -4054, -4054, -4054,  -214,  2742,  1309, 22553, 54792, 36785,
   -4054, 13315, 13315,  1133,  3074,  3134,  3134,  3134,  1364,  2514,
   13315, 13315, 13315, 13315, 13315, 13315, 13315,  1581, -4054, -4054,
     -68, -4054,  2487, 13315, 13315, -4054, 13315, 13315, 29037, -4054,
    4189, 13315, 13315,   388,  3010, 13315, 13315, 13315, 13315,  2557,
   13315, 13315, 29037,  3141,  2489, -4054,  2485,  1600, 13315, 13315,
    1654, 13315, 13315, 13315, 13315, 13315, -4054, -4054, 13315, 13315,
   13315, 17970, 13315, 13315, 13315, 13315, 13315, 13315,  2496, 13315,
    3134,  3134, 13315, 13315,  1693, -4054, -4054, 13315,  2144,  2144,
   -4054, 13315,  8660, 13315, -4054, -4054, -4054,  2499, -4054, -4054,
   -4054, 29037,  3134,  3134, 13315, 13315, 13315,  3074,  3074,  3074,
     252,  2505,  1028, 13315,    65, -4054,  2666,  2502, 13315, -4054,
   -4054, 50291, -4054, -4054, 13315, -4054, 13315, 13315, -4054, -4054,
   -4054, -4054, -4054, -4054,  2092, -4054, -4054, -4054, 14645, 17970,
   17970,  2515, 17970, 17970, 17970, 17970, 17970,  2902, 17970, 17970,
   18635, 19300, 17970, 17970, 17970, 17970,   662,  3074, 47076, 17970,
   -4054,  1837, 13315, 37428, -4054, -4054,  2506, 27743,   873, -4054,
   -4054, -4054, -4054, -4054, -4054,  2518,   873, -4054,  3024, -4054,
   43861, 27743, -4054,  2516, -4054,  2896, -4054,  2903,  2907,  2909,
   -4054, -4054, -4054, -4054,  3137,  2910, -4054,  2922, -4054, -4054,
    2545, -4054, -4054, 19965, 47076, -4054,  2547, -4054,  3051, -4054,
    2793,  2733,  1372, -4054, -4054, -4054, -4054, -4054,  2830, -4054,
   -4054,  2653, -4054,  2843, -4054, -4054,   345, -4054,    77, -4054,
   -4054, -4054, -4054, -4054, -4054,  2844,  2560, -4054, -4054, -4054,
   54792, -4054, 55435, -4054, 27743,  -112, 54792, -4054, -4054, -4054,
    2943,   155,  2565, -4054, 27743, -4054, -4054,   114,   114,  2828,
    1567, 47076, -4054, -4054,   180,  2570,  2648,  2575, -4054,  2656,
   27743,  2742, -4054,  3231,  1290, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,  2585,  3090,
    2793,  2876, -4054,  2878, -4054, 54792, -4054, -4054, -4054,  1071,
    2683,  2683, 47076,  2597, -4054, -4054, -4054, 13315, 41932,   915,
   -4054, 21906,  2626,  2654,  3013, -4054,  1686, -4054, -4054, 45790,
   -4054,  1364,   131,  2603, -4054, -4054,  1472, -4054, -4054,  3017,
   -4054,  2838, -4054,  2604,  2606,  2608, 50934, 13315, -4054, -4054,
   -4054,  9325,  2620, -4054, 50934, -4054, -4054, 17970,  1856, -4054,
    1364, -4054,  3039,  -112, 13315, -4054,  2633,  1752, 54792, 54792,
   54792, 27743, 54792, -4054, 27743, -4054,   845,   845, -4054, -4054,
   -4054, -4054,    15, 54792, 54792,    15, 43861, -4054,   876, 54792,
      15, -4054,  3043,  2730, -4054, -4054, -4054,  3115, -4054, -4054,
    3108,  2642, -4054,  3039, -4054,  2850,   876, -4054, -4054, 27743,
   -4054, -4054,   876, -4054,   876,   876,   701,   701,   -47, -4054,
   -4054,  2795,  -109,  3252, -4054, -4054,  1134, 22553, 54792,  2009,
    2816, -4054,  2659, -4054, -4054,  2742,   245,  2918, -4054,  3130,
   -4054, -4054, -4054, -4054, -4054, -4054,  2655, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054,  2754, -4054,  1148, 47076,
    2764,  2765, -4054, -4054,  2772, -4054, -4054,   276, -4054,  1924,
     232,  -112,   248,  -112,  2495,  -112,  -112,  1760,  -112,  2850,
    3186,  3221, -4054,  3261, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054,   101, -4054, -4054, -4054,  2104,  3217,
    2743,  3093,   664,  1434,  2743,  1247,  -112,   959, -4054,   959,
   -4054,  2856,   131,  3283,  2962,   131,   131,  3283,   131,  2966,
    2967,   131,   131,   131,   131,  2781,  3233,   131,  3111,  1011,
    2645,  3113,   131,  2969, -4054,  1027,  3243,   131,   131,   131,
     131,   131,  3283,  2980,  3332,   131,   131,  2982,   227,  2984,
    2986,   131,   131,   131,   131,   216,   131,   131,  2987,   131,
    2990,  2771,  2777, -4054,  6495, -4054, -4054, -4054,    -8, -4054,
   -4054, -4054, -4054,  2735,  2739, 25797, -4054, -4054, -4054, -4054,
   -4054,  3027,  1474, 27743, -4054,  2745, 51577, 27743, -4054, -4054,
   -4054,  2748,  1608, -4054, -4054,  2749,  2753,  1364,  3257,  3265,
    3269,  3270,  3271,  3272,  3273,  3275,  3277,  3278,  3279,  3280,
    3288,  3290,  3293,  3295,  3297,  3298,  3299,  3303,  3305,    72,
   -4054, -4054,  3306,  3308,  3311,  3313,  3315,  3318,  3320,  2758,
   -4054, -4054, -4054, 27743, -4054, -4054, -4054, -4054,  2812, -4054,
   -4054, -4054, -4054,  2324, -4054, -4054, -4054,   111,  2695,  2839,
    2868,  -138, 54792, 54792,  2826,   635, -4054,  1430, -4054, -4054,
    1145,  3107,  3116,  3118, 22553,  2836,  2626, -4054, 36785,  2626,
   -4054, -4054,  2820,   303,   496, -4054,  3134,  2837, 13315,  2851,
    2853,  2858, 13315,    45,   200,   582,  1364,  1395,  1324,  1198,
     371,   188, 13315,  2859, 10655,  2860, -4054, -4054,   405,   435,
    1233,  1235,  2861,  2867, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054,  3304, -4054,   470,  2871,  2855, -4054,
   -4054, -4054, -4054,  2872, -4054, 13315,  1239,   492,   504,   254,
    2879,   523,  1421,  1424,  2880, 29037, 54792,  3134,  2892,  1250,
    1283,  3134,  2893,   542,  1292,  1460,  1466,  1492,  1301,   593,
    1525,  2314,  1308,   613,   732,  1313,   783,   794, -4054,  1349,
    2894,  2897,   994,   283,  3134,  2904,   278,  2874,  2911,  1383,
   11320, 11985, 12650,  1210,  1060, -4054,  2913, -4054,  2485,  2917,
    2925,   285,   195,  1385, -4054, 13315, -4054, -4054,  1106, -4054,
    2937,   184, 47076, 13315, 54792, -4054, -4054, -4054,  2195,   161,
   -4054, -4054, -4054, -4054, -4054,   950, -4054,  2912, -4054,  2924,
    1972,  2841, 13315,   985,  2841,  3162,  2415,  2415, 17970,  3106,
    3005, 13980,  1597, 13980,  1597,  2841,  2841,  2841, -4054, 17970,
    2928, 17970, 17970, -4054,  3074, -4054, 40000,  2932,  2933, -4054,
   -4054,  -244, 54792, -4054,  2518,   -20, -4054,   131, -4054,  2936,
     191, 27743, 47076,  2942, -4054, -4054, -4054, -4054, -4054, -4054,
    2850, -4054,  3875, 27743,  2934,  2993,  3000, -4054, 34853, -4054,
   -4054, -4054, -4054, 34853,     8, -4054, -4054, -4054, -4054, -4054,
    2975, -4054, -4054, -4054,  2939, -4054, 43861,  2939, -4054, -4054,
    2939, -4054, -4054,  2939,  1147,  4792, -4054,   301,   708,  3407,
    2626, -4054,  2742, -4054,   856, 27743, -4054,  3342,   -38, 27743,
    2745,  2946, 17970, -4054, -4054, -4054, -4054,  2797,  3028, -4054,
    3569, -4054, 13315,  -112, -4054, 43861, 43861, 27743, 27743,   670,
    1609, -4054,  2850, -4054,  2808, 19965,  2949, 43861,  1162, -4054,
   -4054, -4054, -4054,  2162, -4054, 33561,  1898,  2951, -4054, -4054,
   -4054, -4054, -4054,   -84, -4054, -4054, -4054, -4054, -4054, -4054,
   13315,  3372, -4054,  3092, -4054, -4054, -4054, -4054,  1214,  3037,
     167,  3165, -4054, -4054, -4054, -4054, -4054, -4054, -4054,   131,
    1364, -4054, 32915, -4054,  -112,  3420, -4054,  1364,  2957, 54792,
   -4054, -4054, -4054, -4054, -4054, 43861, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054,    15, -4054, -4054,
   -4054, -4054, -4054,  3192,  2655,  2824,  3420, -4054,    15,   876,
   27743,    15,    15,  -112, 13315, -4054, -4054, -4054, -4054, -4054,
    -112,  9990,  2659,  -218,   118, 23200,  3364,  3368, -4054,  3237,
     771,  3237, 23200, 23200, 29037, 22553,  1549,  2968, -4054,  3301,
   -4054, -4054,  3057, -4054,   408, -4054, -4054, -4054, -4054,   296,
    2495,  2495,  2495,  2495,  1924, -4054,   -22,  3460, -4054,   232,
   -4054,   981, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054,  -112,  3475,  3232,  2797, -4054,   131,   131,
    3286,  -112,  3110,  3112,  3119,  3120,  3121,  3148, -4054, -4054,
   -4054,  -112,  -112, -4054, -4054,   131, -4054,  1613, -4054, -4054,
   -4054, -4054,  -112,  -112,  -112,  -112,  2495,  -112,  -112,  1573,
   -4054, -4054,   131,   131, -4054,   174, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054,  1406, -4054, -4054, 29684,   125, -4054,   274,
   -4054, 29684, -4054,  1608,  1608, -4054, -4054, 52220, 29684,   125,
     248,  2495, 29684,  2495, 52863,   125,  -112,  -112,  -112,  -112,
    2162,   131,  2495, -4054, 52863, -4054,  3378, 54792,  3381, 29684,
   29684, -4054, 47076, 54792, 52863, -4054,   131,   148,  2495, 53506,
     248,   248, 29684,   125, 29037,   240,  -112,   125, -4054, -4054,
   -4054, 29684, 27743,   125,   125,  2402,  1950,  2012,  2532, -4054,
   -4054, 54792,  2495, 52863, -4054, -4054, -4054, -4054, -4054, -4054,
    3245, -4054, -4054,  5337,  5909, 21259, 54792,  1230,   221, -4054,
    2999,   183, -4054,  3205, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054,  1608,  2988, 54149, -4054, -4054, 13315,  3008,  2495,  -112,
    2495,  2495,  -112,  -112,  2495,  2495,  -112,  -112,  -112,  -112,
    -112,  -112,  -112,  -112,  2495,  2495,  -112,  2292,  4881, -4054,
    3009,  3009,  3015,  3015,  3018,  3018,  3020,  3262, -4054, -4054,
   -4054, -4054,   119,   131,   131,   131,   131, -4054,  2125, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, 47076,  3385,  2594,
    2430,  3199, -4054, -4054,   938,  3021, -4054, -4054,    82,  3941,
     599,   599, -4054, 27743, 27743, 27743,  2626, 54792,  3289,  1345,
   -4054,  3029, -4054, 15310, -4054,  3022, -4054,  1364, -4054, -4054,
   -4054,  1046, 13315, 13315,  3532,  2686, -4054, 46433, -4054, 13315,
   -4054, -4054, 13315, 46433,  2686,  1732, -4054,  3025, -4054,  3443,
    3444, -4054, -4054, -4054, -4054, 13315, 13315, -4054, 13315,   -94,
   -4054, 13315, 13315, 13315, 13315, 13315, -4054, -4054, 17970, -4054,
    3023,  3032, -4054, -4054, -4054,  3034, -4054, 13315, -4054, -4054,
   -4054, -4054, -4054, 13315, -4054, 13315, -4054, 13315, 13315, -4054,
   13315, 13315, -4054, -4054, -4054, 15975, 13315, 13315,  3036, -4054,
   -4054, 13315, 13315, 13315, -4054, 13315,  1169, 13315,  1666, 13315,
    2138, 13315, -4054, 13315, -4054, -4054, -4054, -4054, 13315,  1137,
    2797,  2495,  3038, -4054,  1737,  2724,  1425, -4054,  1106,  3040,
     373, -4054,  3035,  1364, -4054, -4054, -4054, -4054, -4054, -4054,
   17970,   312,  3044, 17970, -4054,  3162,  2557,  2557,  2087, 13315,
     985,  3162, -4054, -4054, 13315, 13315, 38071, -4054, -4054, -4054,
   47076, 43861, -4054, -4054, -4054,   191, -4054,  2516, -4054, -4054,
    2745, -4054,  3535,  3042, -4054, -4054, -4054, -4054, -4054, -4054,
   54792, -4054,  3124, -4054, -4054, -4054, 26444, 26444, -4054, 26444,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054,  2655,  2146, 54792, -4054,  3045, -4054, -4054,  1409,
    2683,  3067,  3429, -4054, -4054, -4054, 54792,  3053,  3162, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,  3665,  3066,
    3071,  3558,  3076,  1364, -4054,  3145, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054,    41,  1134, 29037, -4054, -4054, 23847,
    1558, -4054, -4054, -4054, -4054,  3077, -4054,  3581, -4054,  3536,
    3551, 26444, 26444, 26444, 42575,  3677, -4054, -4054, -4054, -4054,
   13315, 41932, 41932,  1364,  3705,  3537,  3413,  3095, -4054,  3105,
   -4054, -4054, -4054,  9325, -4054, -4054,   248, -4054,    66, -4054,
   -4054, -4054,  3396, -4054, -4054, -4054, -4054,  2626,   876, -4054,
   -4054, -4054,  1364, -4054,   213,   373,  3198, -4054, -4054,  2327,
   -4054, -4054, -4054,  3513, 23200,  3237,  3237,  3517,  3401,   756,
    -192, -4054,   131, -4054,    55,  2495, -4054, -4054,  -112,  -112,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054,  2797, -4054, -4054,  -112,  3620, -4054, -4054, 45790, 42575,
   -4054, -4054, -4054, -4054,  3672, -4054,  3673,  1505, -4054, -4054,
    2568,   693, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054,  1247,  2568,  2568,   656, -4054,   151, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054,  3131,  3528,  3534,  1608, -4054, 29684,
   -4054, -4054, 29684, 29684, -4054, -4054,   144, 52863, -4054, -4054,
   -4054, -4054, -4054, -4054,  3132, -4054, -4054,  2797, -4054, -4054,
   -4054, -4054, 42575,  -112, -4054,  3234, 29684,  3132, -4054, -4054,
     433, -4054, -4054,  3169,  3238,  -112, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, 52863,  3147, -4054,  1038,
   -4054, -4054, -4054, 52863,  3225, -4054, -4054, 52863, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054,  3150,  2073, -4054,  2901,   996, -4054,
   -4054, -4054,  2735, -4054,  3160,  3149, -4054, -4054, -4054, -4054,
   54792, -4054, -4054, 27743, -4054, -4054, -4054,  6664, 54792,    63,
    1354,  3240,   294,  3164, 52863, -4054,  3166, -4054,  3167, -4054,
    1364,  2495, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, 35499, -4054, -4054, 36142, -4054, -4054,  1174,
   -4054, -4054,  1759, -4054, -4054,  -112,  2797,  2568,  2568,  2049,
   -4054,  3445,  3615,   131,   131, -4054,  2064, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054,   232,   938,  3453,
   54792, -4054, -4054, -4054, -4054,  3316, -4054, -4054, -4054, -4054,
    3458, 27743, 20612, -4054,  3436, -4054,  2798, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054,  1774, -4054,  3563, 13980,
    1426, -4054, 13315,  1364,  2129, -4054,  3180,  3180,  3181, -4054,
    3183, -4054,  3180,  3599,  3181,  3600,  3188,  3189,  1364,  1457,
    3190,  3194, -4054, -4054, 13315, 13315,  1477,   333,  1483,  3800,
    3367,  1102,  1161,   353, -4054,  1519,  2890, -4054, -4054,  1531,
    1542,  1577,  1590,  1179,  1598,  1831, 13980,  1629,  1203,   359,
   -4054,  1634,  1189,  1191,  1662, 13315,  1678, 13315,  1706, 13315,
    1730,  1740,  1745,  3202,  3202,   238, -4054,  3196, -4054, -4054,
   -4054,  3203, -4054, -4054, -4054, -4054,  2626,  9990,  1425, -4054,
    2724,  3207,   118,  1028, 54792, -4054,  3209, -4054, -4054, 13315,
   -4054,   927, -4054, -4054, 17970,   465,  3211, -4054, -4054,  3212,
   -4054, -4054,  1074, -4054, -4054, -4054, -4054,   258,  3161, 34853,
   -4054,  1851, -4054, 43861,  3206, -4054,  3210,  3284,  3309,  3310,
    3215, -4054, 29037,  3500,  3500, 27743,  1608,  3650, -4054, -4054,
   -4054,  3220,  3223, -4054, -4054, -4054,  3607,  3486, -4054, -4054,
    2797, 54792, 43861, -4054,  9990,  3226,  1382,  3229,  1880, -4054,
   -4054, -4054,  3219, -4054, 16640,  3235, -4054, 19965,  3509, 43861,
    3699,  3702,  3703, -4054,    86,  3623, -4054, -4054, -4054, 13315,
   13315,  3289, -4054,  3037, -4054, -4054, -4054,  2655, -4054, -4054,
   -4054,  2655, -4054,    15, -4054,  1028, -4054, -4054, 23200, -4054,
    3648,  3653, 23200, 13315, 13315,  3251, 29037,  3289, 16640, -4054,
   -4054,  1608,  1608, -4054,    55, -4054, -4054, -4054, -4054, -4054,
   -4054,  3793, -4054,  -112, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054,  1406, -4054,   -91, 13315, 29684, -4054, -4054, -4054,
    3253, -4054, -4054,  3790,  3791, -4054, 29684,  2324, 54792, -4054,
    2862, -4054, -4054, -4054, -4054,  3351, -4054, -4054,  6664, -4054,
   29037, -4054, -4054, 29684, 54792, -4054, 27743, -4054, -4054, 21259,
   -4054,  3258, -4054,  3180,  3180,  3180, -4054, -4054, -4054,  3181,
   -4054,  3183,  3504, -4054,  3183,  3183, -4054, -4054, -4054, -4054,
   -4054, -4054,   284,   416, -4054, -4054,   284, -4054, -4054, -4054,
     121,  1321,  3183, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
    3180,  3181,  3181, -4054, -4054,   284,  3180, -4054,  3180, -4054,
    2737, -4054,   264,   159,  3180,  3180,  3180,  3259,  3254,  3510,
   -4054, 13315, 13315,  3547, 54792,  3549, -4054,  3851, 54792,  3908,
    3274, -4054, 54149,  1904, -4054, -4054, -4054,  1907, -4054, -4054,
   -4054,  1911, -4054,  3263, -4054,  1915, -4054, -4054, -4054, 54792,
   -4054,  1937, -4054, -4054, -4054, -4054, -4054,  3281, 54792,  2568,
    2568,  2364, -4054, -4054,  3415,  3450,  3282,  3285, -4054, -4054,
    -112,   984, 27743, -4054, 27743, -4054,  3440, -4054, -4054,  3287,
      49,  6508, -4054,  3291,  3292,  3294, -4054, 54792, 41932, -4054,
    2557, -4054,  1364, 13315,  1241, -4054, -4054,   284,  3568, -4054,
    1513, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054,  2557,  2557, -4054, -4054, 13315, -4054, 13315,
     245,  3302, 13315, 13315, -4054, 13315, -4054,   234,  3317,  3322,
   -4054, -4054, -4054, -4054, 13315, -4054, -4054,  2557, -4054, 13315,
   -4054, -4054, 13315, -4054, 13315, 13315, -4054,  1763, -4054,  1781,
   -4054,  1804, -4054, -4054, -4054,  2797,  3319,  3670, -4054, -4054,
   -4054,  2797,  3470, -4054, -4054,  2797,  2495,  3372,  1686, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054,  1945, -4054, -4054, 13315,
   -4054, -4054, -4054,  3661,  3935, -4054,  3518, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, 54792,   505,  3307, 38714, 43861, 43861,
   43861, 16640,   -61,  3803, -4054, -4054, -4054,  1608,  3650,  3685,
   -4054,    87, -4054, 54792,  1603, -4054,  1970, -4054, -4054,  3323,
   -4054,   213,  3440, -4054, -4054,   738,  1382, 29037, 37428,  1856,
    1364,  3324,  3321, -4054,  3077, -4054,  3760,  2936, 43861, 43861,
   43861,  3912,  3913,  3812,  3918,    86, -4054,   -90, -4054,  1272,
   -4054,  1364,  2655,  3326, -4054,  2850, -4054, -4054,  1249,  3352,
   23200, 23200,  3011,  3355,  1364,  1364, 54792, -4054,  3563, -4054,
    3777,  3777, -4054, -4054, -4054, -4054,  2797,  3486, -4054,  1830,
    3312,  3328, 54792,  3333,  3334, -4054,  2914,  1230, -4054, -4054,
   -4054, 27743, -4054,   125, -4054, -4054, -4054,  3132,    41,  3331,
   -4054, 54792,  3657, -4054, -4054, -4054, -4054,  1177, -4054,  3335,
    1177,  1177,  3937,   166, -4054,  3942, 46433, -4054, -4054, -4054,
    1672, -4054,  3354,   284, -4054, -4054,  3373, -4054, -4054, -4054,
    1177,  3336,   284, -4054, -4054, -4054, -4054,  1177, -4054, 47076,
    1690,  -112,  2873, -4054,  3369, -4054,  3873,  1327,  3737, -4054,
    3427, -4054,  3802,  3743,  3635, -4054,   284, -4054, -4054,  3974,
   -4054,   284,  3974,  1177,  3638, -4054,  1177, 54792, -4054,  1364,
    2557,  3932, -4054, -4054,  3503,  -112,  3872, -4054,  1998, -4054,
   -4054, -4054, -4054,  2495, -4054, 54792, -4054, 54792, 54792, -4054,
    -112,  3353, -4054,  3356,  1247, -4054, -4054, -4054, -4054,  -112,
    1354, -4054, 54792,  6664, -4054, -4054, -4054, -4054,  3357,  3358,
   -4054, -4054,  3826,  3360,  3361,  6495, -4054, -4054, -4054,  4005,
   -4054, 54792, 54792, 54792, -4054, -4054,  1363,  1364,  3365,  3370,
    3376,  3377, -4054,  3380,  2005,  3382,  3383,  1875,  3366, -4054,
   -4054, -4054,  1932,  1193,  2050,  3688,  3769, -4054,  3612, -4054,
    1940,  1368,  2016,  2018,  2036,  2048, -4054, -4054, -4054, -4054,
   -4054,  3384, -4054, -4054,   477, -4054,  3386,  3537, -4054,  2060,
   -4054, -4054,  3868,  3762, -4054,  3838, -4054, -4054, -4054,  -138,
    -138,  -138,  2067, -4054,  3792, -4054, -4054,  3810, -4054,  3397,
    3569, 54792, -4054,  3486, -4054, -4054, -4054, -4054, -4054, -4054,
    3388, -4054, 16640, -4054, 43861,  2936,  2936,  2936,   245,   245,
    4011,   245, -4054,  4014,  4015,   -90, -4054, -4054, -4054, 13315,
   -4054,  3651, -4054, -4054, 13315,  3411, -4054, -4054, 13315,  3412,
    2069, -4054,  1222,  3417,  3418, -4054,  2099, -4054, 54792, 54792,
    2107,  1038,  3422, 54792, 54792,  2934,  2993,  3000,  2292,  2292,
   -4054, -4054, -4054,  1336,  1230, -4054,  3822, -4054, -4054,  2111,
   -4054,   827,  3698, -4054, -4054, -4054, -4054,  1177, -4054,   245,
   -4054, -4054, -4054, -4054, -4054, 46433, -4054,  3974, -4054, -4054,
   -4054,   245, -4054, -4054,   961, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054,  3713,  3463, -4054, -4054, -4054, -4054, 47076, -4054,
    4070,  4065, -4054, -4054, -4054, -4054, -4054, -4054, -4054,  3424,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, 54792, -4054,
    1131, -4054, -4054, -4054, -4054, -4054, 54792, 54792,  2127, -4054,
    3547,  3616, -4054,  2862, -4054, -4054,   127, 54792,  3939, -4054,
   -4054,  3436, -4054,  1141,  2130,  2143,  2161, -4054, -4054, -4054,
   -4054, -4054, -4054,  3717, -4054, -4054, -4054, 13315, -4054, 13315,
   -4054, -4054,  3749,  3920, -4054, -4054, -4054, -4054, -4054, -4054,
    3432, -4054,  2495,  3289, -4054, -4054, -4054,  3710,  3461,  3461,
    3461, -4054,  3491,  3542, 17970, -4054,  3448,  3481, -4054, -4054,
   -4054,  2936, -4054, -4054,   245, -4054,   245,   245, -4054, -4054,
    4094,  3865,  1364, 54792,  1364, 54792, -4054,  4064, -4054,  4066,
   54149, 54149, -4054,  2165,  2167,   306, 54792, -4054,  3740,  2172,
    2177, -4054, -4054, -4054, -4054, -4054,  3462, -4054, 54792, -4054,
   -4054, -4054,   219, -4054, -4054,  2182, -4054, -4054, -4054,  2210,
   -4054, -4054, -4054, -4054,  3464,  3584, -4054, 61222, -4054, -4054,
    3465,  3487, -4054,  3468,  3471, -4054,   294, -4054, -4054, -4054,
   -4054, -4054,  6664,  3643,   738,    49,  3440, -4054,   306,   105,
    1003,  3473, -4054,  2085, -4054, -4054, -4054,  3476,  2655, -4054,
    1973, -4054, -4054, -4054, 29037, 27743,  3477,  3579, 54792,  1717,
    3033, -4054, -4054, -4054,  3483,   915, -4054,  2225,  2266, -4054,
   -4054,  3485,  2273,  3709,   306,  -112,   131, -4054,   306, -4054,
   -4054, -4054,  1038,  3489,   105,  1003,  3486, -4054,   939,   939,
     284,   245,   284, 13315, 13315,  4000,  3527, 54792,   177, -4054,
   62508, 62508, 54792, -4054, -4054, -4054, -4054,  4661, -4054, -4054,
     728, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054,  4141, -4054,  3505, -4054, -4054,  3465,  3519,  3686,
    1182, -4054,  1558, -4054, 54792,  3851,  6664,  3350, -4054,   905,
   -4054, -4054,  3522,  1558, -4054,  3782, -4054,   105, -4054, -4054,
   -4054,  1003, -4054, -4054, -4054, -4054, -4054,  3651,  3804,  2495,
    2495,  2495,  2495,  1973, -4054,  3226,  2742, -4054,  2797, -4054,
    2276, -4054, -4054, -4054,  3611,   131,  4054,  4056,   131,   131,
     131,   131,  3533,  3033, -4054,  4035,  3824, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054,  2495, -4054, -4054, -4054, -4054,
   -4054,  2297, -4054,  4192, -4054,   907,  3817,  3827, -4054, -4054,
   -4054,  3540,  1364, 13315, -4054, 13315,  3570, -4054, -4054,  4009,
   54792, -4054, -4054, -4054, -4054, 13315, -4054, 61222, 61222, -4054,
   -4054, -4054, -4054,  4175, -4054,  3548,   738, -4054,  4145,  3829,
    4147, -4054,  3550,  4072, -4054, -4054, -4054, -4054,  4083, 61222,
   -4054, -4054, 47076, -4054, -4054, -4054,  1074,  1819,  1074, -4054,
    1074, -4054,   915, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, 54792,  3557, -4054,  -112,   131,   131,  2870,  2870,
    2797, 54792,  3668, -4054, -4054,   131, -4054,  3562,  3564, -4054,
   -4054, -4054, -4054, -4054,  3617,  4090,  1156,  1364,  1364, -4054,
      75, -4054, -4054,  3979,  4075, 13315,  1364, 58007,  3565, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, 61865, 13315, -4054,   728,  4141, -4054, -4054,  3845,
   -4054,  3846, -4054, -4054, -4054, -4054, -4054, -4054, 61222,   738,
   -4054, -4054, -4054, -4054, -4054,  2162,  3579, -4054,  3575, -4054,
   -4054,   -81, -4054,  -112,  -112, -4054, -4054, -4054, -4054, -4054,
    2316, -4054, 47076, -4054,  3824,   939,   939, -4054, -4054,   590,
    3608, 13315, 61222, -4054,  4097, -4054,  4022,  1364,  3961,  3588,
   -4054,  3586,  1364,  4135, 62508, 62508, -4054, -4054, -4054,  3350,
   -4054, -4054, -4054, -4054, -4054,  2341, -4054, 17305, -4054, -4054,
   -4054, -4054, -4054, 47076, -4054,  3668, -4054, -4054, -4054, -4054,
    -112, -4054,  3997, -4054,   590, -4054,  3998,  3890, -4054,    90,
   -4054,  1364, 58650,  4211, 54792, -4054,  3691, -4054, -4054, 13315,
    4125, 47719, 59293,  3602, -4054, -4054, -4054, 61222,  3785, -4054,
    3575, -4054,  3609, -4054,  3162,  3033, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, 13315, -4054,  4116,  3700, -4054,  3610, -4054,
   61222,  1364, 61222, -4054, -4054,  4059,  3613,  1688, -4054,  3618,
   -4054, -4054,  4049,  3677, -4054, 17305,  3621, -4054,  1364,  4224,
   61222, 54792, 56078,  4126, 59936,  4088, 54792,  6664,  4092,  4093,
   -4054,  4236,  3623, -4054, -4054,  3714, -4054, 56721, -4054,  2599,
    3833,  3654, -4054, -4054,  4166,  2332, -4054,   245,  4061, 61222,
   61222, -4054, -4054, -4054, -4054, 39357, -4054, -4054, -4054, -4054,
   -4054,  1071, -4054,  3922,  3632, 57364, 60579, -4054, -4054, -4054,
    7640, -4054, -4054, -4054,  4100, -4054, 13315, -4054,    57, 24495,
    3796, 39357, -4054, -4054,  1364, -4054, -4054, -4054, -4054, 47076,
    2355, -4054, -4054, 29037, -4054, -4054, -4054, -4054, 27096,  3636,
   -4054,   131, -4054, 29037, 16640, -4054, -4054
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4054, -4054, -4054, -4054, -4054,    91, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054,  1674, -4054, -4054, -4054, -4054, -4054,
   -4054,  1867,  1881, -4054, -3263, -4054, -4054,  1877, -4054,   543,
    1876, -4054,   553, -4054,  1887, -4054,   549,  -538, -1501, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,   552,
    1486,  3593, -4054,   550, -4054,   196, -4054, -4054, -4054, -3195,
      88,  -108, -4054, -4054,    17,  1526,    23,  3236,  -113, -3096,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,   545,
     555, -4054, -4054,   324, -4054, -4054, -1918, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054,  -310,  -273,  1980, -4054, -4054, -4054,
    4285, -4054,  3696, -4054, -2006,  2243, -4054, -4054, -4054, -4054,
   -4054,  2302, -1940, -4054, -4054, -4054,  1180, -4054, -4054, -4054,
   -4054,   -78,   223, -4054,   224, -4054,   230, -4054,   231, -4054,
     233,   235,   236,   239, -4054,   241, -4054, -4054,  -269, -4054,
   -4054, -4054, -4054,   242, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054,  -181, -4054, -4054,   -51, -4054, -4054,  -168,   246, -4054,
    -131,   250, -4054,   251, -4054,   -71, -4054,   -63, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054,  3239, -4054, -4054, -4054, -2604, -4054, -4054, -2515,  2698,
   -4054, -2103, -4054, -4054, -2247, -4054, -4054, -2073,  1123, -4054,
   -4054,  1192,   606, -4054, -1589, -2207, -2206, -4054, -4054, -4054,
   -2350, -2326, -1521, -4054, -1506, -2496, -4054, -4054, -4054,   247,
   -4054, -4054, -2944, -4054,  2647, -4054, -4054, -4054,  1444, -4054,
   -4054,  1184,   511,  1181, -4054,   791,  2958, -1337, -4054, -4054,
   -4054, -4054, -4054, -4054,     5,   326,   -65, -4054, -3427,   515,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4042, -4054,
   -4054, -4054,  -191, -4054, -4054,  -120, -4054, -4054,  -159, -4054,
     107, -2657, -4054, -4054,  2591, -1483, -4054,  3843, -4054,  -410,
     607,  2680, -2755, -2398, -4054, -1021, -1007, -2580, -4054, -4054,
   -4054,  1375,  1367, -4054,  1076,  2676, -1583, -4054,  2015, -4054,
   -4054,  1100, -4054,  1092, -4054, -4054, -4054,  -107, -4054, -4054,
     226, -2693, -4054, -4054, -4054,  1063, -4054,  1065, -4054, -4054,
   -4054,  -646,  1032, -1775,  1643,  -422, -4054,   479,   730,   -25,
   -4054, -4054, -4054,   697, -3682, -3400, -4054,   -41, -2436, -2364,
     -24, -4054, -4054, -2681, -3137, -4054,  1615, -4054, -4054, -4054,
   -3181, -3348,  1306, -4054, -4054,   900, -4054, -2368,   902, -4054,
   -4054, -4054,   911, -4053,   256, -4054, -4054, -4054, -4054, -3120,
   -4054, -4054, -1577, -2090, -4054, -4054,  4414,  4420, -1115, -2615,
   -3014,   249,   253, -4054, -4054, -4054,  2624, -1601,   257,   186,
     192,  1969,  -593,   355, -2189, -4054,   494, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054,  1431, -4054,  2214, -4054,
    1987, -4054,  2226, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
    2068, -4054, -4054, -4054, -4054,   528, -4054,  -335, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -2233, -2198,  2071, -4054, -4054,
    2070, -4054, -4054, -4054,   603, -2216, -1087, -1078, -1536,  3809,
   -1541, -3378, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054,  2886, -4054, -4054, -4054, -4054, -4054,  3818, -4054,  2895,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054,   792,  1758, -4054,
   -4054, -4054, -4054, -4054, -4054,  1170,  2672, -4054, -4054, -4054,
     -12, -4054, -4054, -4054, -4054,  2379, -4054, -4054, -4054, -4054,
    2732, -4054, -4054, -4054, -4054, -4054, -4054,  1297, -4054,  1805,
   -4054, -1699, -4054,   895, -1070,  3030,  3816,  1892,  -655, -4054,
   -4054, -2614,  3538, -4054, -4054, -1485, -4054,  3541, -1458,  -920,
    3208,  2488,  1150,  4124, -4054, -1260, -1198, -4054, -4054,  -711,
   -4054, -4054, -4054,  -684, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054,  1873, -4054, -1322, -4054, -4054, -4054,
   -4054, -4054,  -979,  1981,  1878, -1138, -4054,  3300, -4054, -4054,
   -4054, -2060,  -998,  2289,  2930, -4054, -4054, -1411, -4054, -2126,
   -4054,  1908, -4054, -4054, -1991,   855, -4054,  1244, -4054, -4054,
   -4054,   419,  1108,   420, -3112, -1153,  1779, -4054, -4054, -1343,
    3327, -1721,   665,  1899,   983, -4054, -4054, -4054, -4054,  1201,
   -2428,  -609, -4054, -2817,  -970, -1035, -4054, -2560,   875, -1130,
   -2041, -1747, -1344, -2767, -4054,   259, -4054,    51, -4054,  2416,
     449,   451, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
    -633,  -876,  3788,  3176, -4054,  3201, -4054, -1172,  3452,  3454,
   -4054, -4054,  3640,  1886,  1890, -4054, -2610, -2530, -4054, -4054,
    -620, -1269,   928, -4054,   963, -3178, -2618,  3459, -2646,  1293,
    4486,  3466, -1649,  3985, -4054, -4054, -4054, -4054, -4054, -4054,
    2371, -4054, -4054, -4054, -4054, -4054, -4054,  3031,  3914,  -636,
   -1397, -4054,  -796,  2997,  2378,  -918,  2992, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054,  2538,  1245, -4054, -4054, -4054,  3129, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054,   986,    -9, -4054,   951,   -23,
   -4054,   683, -4054, -4054, -4054, -4054, -4054,   -88, -4054, -4054,
     -92, -4054, -1068, -1433,   860, -1331, -2372, -4054,   976, -2570,
   -2655,  -757, -1240, -1239, -1663,   375,  3406, -4054,  2935, -1372,
   -4054,    89,  -534, -1361,    -6, -2562,   -73,  -656, -4054,  1675,
   -4054, -4054, -4054,  3595, -4054,  2436,  4534, -4054,  3329,  3078,
    4536,  -494,  3603,  3098, -4054,  3096, -4054, -4054, -4054, -1999,
   -1418, -4054, -4054,   149, -4054,  2517, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054,  2486,  3662,  3142, -4054,  2539,
   -4054, -4054, -4054, -4054, -4054,  2374, -4054,  -118, -3043, -1122,
    3531,   237, -4054,  1033, -1773, -1011, -4054, -4054,   335, -4054,
   -4054,   322,  3980,  3674, -4054, -4054, -4054, -4054, -4054, -2659,
    -616, -3447,  1475, -2075, -4054, -1451, -2777, -4054, -1127, -4054,
   -4054, -4054, -2387, -4054, -4054, -4054,    56,  4055,  4060, -4054,
   -4054,  -197, -4054,   268, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054,   379, -4054,   381, -4054, -4054, -4054, -4054,  3882, -4054,
   -4054,  3886, -4054, -4054, -4054, -4054, -4054,  3887, -4054, -4054,
   -4054, -4054, -4054, -4054,  1651, -4054, -4054, -4054, -4054, -4054,
   -4054
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -2556
static const yytype_int16 yytable[] =
{
     525,  1021,   933,  1052,   631,  1131,   962,   965,   572,  1634,
     937,  2116,  1641,   571,  1728,  1801,   986,   581,   596,  1597,
    2090,  1936,  1937,  1729,  1529,   604,  1215,   599,  2460,   523,
    1476,  1086,  2030,  1911,   614,  2114,  2685,   617,  1968,   632,
    3153,  2029,   614,  2404,  1837,  1838,  1557,  1812,  1813,   649,
    3048,  3203,  3197,  3275,  2177,  2981,  1890,   693,   615,  1174,
    3195,  3067,  2389,  1646,  2279,  3275,  3275,  3070,  2068,   670,
    3639,  3036,  1853,  1892,  1525,  3216,  2778,  1647,  2308,  1120,
    1123,  2076,  3311,  2141,  2312,  1905,  1906,  1907,  2632,  2718,
    3440,  2191,  1910,   143,   683,  2478,  2839,  2840,  2480,  1558,
    2103,  1970,  1971,  2339,  2877,  1974,  1975,  1976,  1977,  3012,
    1979,  1980,  1982,  1984,  1985,  1986,  1987,  1988,   686,  2768,
     525,  2361,  2850,   525,   670,   698,   683,  2318,  2252,  2738,
    2739,  2322,  2280,  3013,   722,  2769,  2300,  1073,  2300,  3200,
     983,  2167,  1316,  2779,  2340,  2883,  3761,  2281,  3866,   688,
    3234,  2301,   692,  2301,  1267,  1268,  2352,  1269,   533,  2178,
    1575,  2257,  3694,  3660,  2006,  3695,  3607,  2181,  2182,  1819,
    1317,  3217,  3218,  2482,  2206,  1398,  1398,  2292,   595,  1279,
    1280,  1608,  4175,  3696,  3705,   603,  2051,  2071,  3742,  3943,
     714,  3727,  2835,   704,  3728,  2492,  1829,  1830,  1831,  3129,
    2292,  3000,  1279,  1280,  2822,  -511,  1279,  1280,  1843,  2450,
    2777,  2082,  3027,  1279,  1280,  2807,  2579,  2699,  1279,  1280,
    3906,  2495,  1559,  1785,  2853,  4472,  1643,   988,   622,  3228,
    3275,  3275,  3283,   591,  1167,  3290,  1643,  2226,  1898,  3611,
    4472,  1902,  1534,  2622,  1643,  2740,  4498,  3249,  2358,  2232,
    3612,  2240,  3009,  3010,  3370,  2671, -2039,  -959,  1426,  1539,
    3518,  1920,  1921,  2796,  2949,  1925,  1573,  -603,  2429,   891,
    1279,  1280,  1279,  1280,  1493,  -604,  3802,  2455,  3815,  3922,
    3786,  3442,  1040,  1939,  1940,  2844,  3250,  3682,  3293,   705,
    1513,   958,  2456,  2731,  3079,  2218,  1279,  1280,  1562,  3683,
    1254,  1279,  1280,  1279,  1280,  1845,  1554,  3682,  1482, -2008,
   -1585,  3646,  3959,  3684,  1399,  1399,  1592,  3573,  3786,  3683,
    1160,  1279,  1280,  3028,  1030,   988,   622,  1063,  1408,  1320,
    1279,  1280, -1831,  3684,  2886,  4645,  3279,  3280,  2844,  2662,
    1786, -2555,   642, -1660,  1787,   988,   622,  1494,   729,  4188,
    1331,  1279,  1280,  1497,  1781,  2369,  3533,   592,  1788,   966,
    3213,  1610,  2241,  1501,   616,  2900,  3775,  4176, -2186,  3519,
    2234,  1279,  1280,   142,  4318, -2210,  3776,  1279,  1280,   658,
    1487,  3975,  2636,  4175,  3977,  2765,  1457,  2359,  2275,  1279,
    1280,  1435,   934,  2379,  1468,  2672,  2320,  2321,   579,  2323,
    1025,  1814,  2326,  2327,  2328,  2329,  4496,   138,  2332,  4500,
    1471,  2275,  2048,  2342,  2887,  1195,  4516,  2615,  2347,  2348,
    2349,  2350,  2351,  1279,  1280,  2616,  2355,  2356,  2242,  2788,
    3379,  3385,  2365,  2366,  2367,  2368,  2235,  2371,  2372,  3682,
    2374,  1852,  2380,  2120,  2766,  3265,  3386,  3883, -1585,  1168,
    4238,  3683,  3545,  1279,  1280,  1215,  2789, -2487,  3627,  2243,
     142,  4516,  1738,   706,  1041,  3684,   719,  2845,  2580,  1421,
    2700,  3246,  3613,  2119,  2293,   682,  1735,   988,  3690,  3380,
    2556,  3884,  1255,  1279,  1280,  2622,   573,  1026,  1279,  1280,
    1739,  3422,  3992,  2637,  2247,  1789,   139,  2293,  4574,  3518,
    1879,  3414,  3415,  1880,  1196,  3787,   935,   699,  3300,   894,
    1279,  1280,  3948,  1458,  1279,  1280,  3530,  2888,  2207,  2628,
    3777,  3952,  1279,  1280,  3900,  1064,  3572,  1014,  1031,  1593,
    2244,  1159, -2555,   670,   935,   698,  1409,   967,  2236,  4646,
    4319,  1279,  1280,  3787,  1331,  3974,  4095,   659,  2370,   738,
    3976,   872,  1611,   963,  4344,   876,  3575,   973,   978,   698,
    1279,  1280,  4110,  1495,  3620,  3875,  3876,  3877,  4176,  2499,
    3647,  1282,   889,  2858,  1283,  1282,   670, -2487,  1283,  2732,
    4494,   897,  1282,  1965,  2797,  1283,  3593,  1282, -1585,  3816,
    1283,  2716, -2337,  1790,  1846,   913,  1017,   893, -2039,  4108,
    1279,  1280,  3246,  2893,  2894,  2673,  2031,  1782,  3519,   588,
    1332,  1279,  1280,  2245,  2162,  3370,  1088,  2165,  1973,   914,
     670,  2237,  2169,  1646,   670,   670,  2210,  1555,   632,  2839,
    2840,  1279,  1280,   959,   892,  1994,  2227,  1647,  3036,  1282,
    1037,  1282,  1283,  1488,  1283,  3294,  3037,  1563,  3239,   643,
    1514,  2663,  3275,  3275,  2701,  2856,  3012,  3614,  1056,  2860,
    3289,  2623,  2943,  3291,  3292,  1282,  3594,  4510,  1283,  3251,
    1282,  2950,  1282,  1283,  3651,  1283,  2879,  2880,  3645,  2493,
    3013,   670,  2292,   670,  2008,  1091,  3790,  4240,  2279,  2895,
    1282,  3029,  2846,  1283,  4060,  1989,   525,  3229,  2904,  1282,
    1168,   683,  1283,  1117,  2505,  2052,   683,   683,  2010,  4399,
   -2186,  1132,  1091,  3520,  2838,  1535,  -511, -2210,  1103,   884,
    1282,  1014,  2389,  1283,  4518,  1104,  1161,  1162,  1163,  1166,
    1803,  3281,  1540,  4123,  4124,  2428,  2851,  2851,  2620,  1137,
    1282,  3529,  4245,  1283,  3697,   903,  1282,  2519,  3277,  1283,
    1279,  1280,  3416,   916,   929,  3045,  2280,  3288,  1282,  4301,
    3261,  1283,  2741,  2083,  2030, -2039,  2180,  3944,  -959,   593,
    1609,  2281,  1276,  2029,  2300,  2072,  1646,  1216,  -603,  3784,
    2605,  2070,  2757,  1158,  3240,  3241,  -604,  1995,  1564,  2301,
    1647,  2608,  1282,  3622,  2611,  1283,  1038,  2089, -1585,  3009,
    3010,  1279,  1280,  2503,  1332,  4127,  1330,  2584,  2312,  1284,
    2360,  1565,  1279,  1280,  3282,  3038,  2476,  1042,  2763,  3638,
    3454, -1585,  1282,  1174,  3809,  1283,  3299,  1783,  4189, -2555,
    2482,  4061,  1284,  2619,  2246,  1256,  1284,  2834,  1273,   670,
    1277,  1783,  2238,  1284,  1289,  2602,  2699,  2485,  1284,  1614,
    2591,  2504,  1282,  -884,  1783,  1283,  2049,  1282,  2581,  2450,
    1283,  1466,  2128,  2784, -2488,  3685,  4129,  1324,   525,  1326,
    3008,  1091,   525,   670,  2678,   525,  1278, -2186,  2847,  1282,
    2166,  1369,  1283,  1282, -2210,  3685,  1283,  1403,  3795,  4428,
    3725,  1282,  3521,  2275,  1283,  3546,   683,  1325,  2470,  1340,
    1284,  1329,  1284,  2623,  1339,  4604,  3768,  2438,   670,   683,
    1282,  1990,   683,  1283,  1944,  1945,  1944,  2523,  2531,   574,
    1528,  2471,  2535,  3766,  3767,  3454,  1284,  2455,   670,  1282,
    2275,  1284,  1283,  1284, -2337,  3197, -2487,  1991,  3014,  1288,
    2560,  2561,  2456,   631,   872,  2558,  2557,  2577,  2578,  1478,
     589,  1284,  3520,  3016,  3853,  3413,  1129,  1130,   670,  2257,
    1284,  4167,  4511,  4168,  1881,  1937,  2483,  1882, -2487,  1282,
    3177,  4342,  1283,  1498,  3138,  3139,  2183,  3865,   632,  2293,
    1282,  1284,  -846,  1283, -2488,  2292,  3867,   670,  1607,  2808,
    2809,  4302,  4491,  1146,  1154,  3476,  3477,  1423,  1318,  3226,
    1282,  1284,  2139,  1283,  1569,  1632,  2820,  1284,  3715,  4308,
     983,  4310,  1279,  1280,  1468,  3484,  3485,  3685,   958,  1284,
    4327,  3501,  3502,  2832,  2833,  4099,  1331,  3200,  3954,  2774,
     683, -1831,  4392,   683,  2502,  1362,  3232,  2963,  3691,  3367,
    2966,  2967,  2775,  3036,  2970,  2971,  2972,  2973,  2974,  2975,
    2976,  2977,   964,  1284,  2980,   670,  1318,  2768,   670,  3247,
    2727,  3021,  2873,  1331,  1279,  1280,  3868,  4135,  2509,  4307,
    2305,  3012,   670,  1530,  1642,  2839,  2840,  2885,  1279,  1280,
    4175,  3667,  1114,  1284,  3155,  3039,  1662,  1122,  1122,  2250,
    2791,  2792,  2793,  2794,  4087,  3013,  4350,  3650,  2510,  2700,
    3659, -2337,  2271,   683,  1992,   909,  2800,  2149,  2464,  1473,
    1165,  2200,  3629,  1284,  2899,  1937,  3633, -1831,  1284,  1282,
    1279,  1280,  1283,   605,  4244,  1531,   935,  3538,  3539,  2595,
     639,   670,  2157,  2516,  3244,  1805,   525,   525,  2529,  3133,
    1284,  4346,  3845,   144,  1284,   525,  1825,   940,  1124,  3588,
    2603,   123,  1284,  3832,   683,  2521,  2827,  3834,  2484,  1597,
    4293,   683,   738,  1822,  -846,  1806,  1807,  2522,  1064,  2728,
    1282,  1284,  3113,  1283,  2995,  2996,  2997,  2998,  3628,  1279,
    1280,  1282,  3632,  4328,  1283,  3022,  2525,  1279,  1280,  2336,
    1284,  2859,  1216,  2861,  4512,  2158,  2275,  1279,  1280,  3114,
    1474,  3605,  2874,  1014,  2753,  2537,  1216,  1279,  1280,  1279,
    1280,  1279,  1280,  3303,  3009,  3010,  1279,  1280,  2890,  2632,
    3194,  1279,  1280,  3775,  3623,  2901,  2801,  4100,  1279,  1280,
    1284,  1738,  2279,  3776,  4069,  4338,  2916,  2918,  2920,  2940,
    1014,  1284,  2922,  1331,  2496,  1993,  4339,  2838,  2776,  2751,
    3947,  1279,  1280,  1279,  1280,  1938,  2543,  1279,  1280,  1739,
    2756,  1284,  2272,  2759,  2760,  4176,   125,  1570,  1279,  1280,
    2851,  2764,   872,  1826,   941,  1957,  2547,  1411,  2962,  4393,
    2964,  2965,  2293,  2701,  2968,  2969,  1332,  4112,   606,  3466,
    1429,  2032,  1139,  1431,  2978,  2979,  1728,  1728,  2114,  2114,
    2280,  1279,  1280,   123,   709,  1729,  1729,  2610,  4303,  3178,
    1279,  1280,   670,  2300,  3235,  2281,  1319,  2001,  4351,  1279,
    1280,   683,  2596,  1332,  1134,  3225,  1279,  1280,  2301,  1331,
    3086,  1279,  1280,  1783,   670,   683,  2184,  4101,  2031,  3304,
    3137,   931,  2802, -2488,  2308,  4508,  4509,  2646,  2081,  2196,
    2312,  2339,   534,  3189,   942,  2282,  4137,  1216,   670,  1689,
     959,  3233,  2721,  3798,  4329,  4297,  3105,  1279,  1280,  2389,
    1956,  3245,  4142,  3023,  1319, -2488,  1734,  3777,  2625,  3381,
    1284,  1282,  1279,  1280,  1283,  2584,   910,  3036,  2159,  2104,
    2642,  1081,  2340,  4346,  2056,  2548,  2059,  3499,   683,   124,
    2064,  1279,  1280,  1279,  1280,  3527,  2127,  2571,   683,  4304,
    2450,  1122,  2334,  3095,  2338,   670,  2941,  3008,   125,  1473,
    1014,  1646, -1661,  3236,   683,  1140,  1808,   528,  2344,  2695,
    2696,  1284,  2292,  1282,  4077,  1647,  1283,   640,   940,  2466,
    4305,  2720,  1284,  1246,  1279,  1280,  2550,  1282,  1140,  2099,
    1283,  3121,  3964,  3142,  3143,  2312,   670,  2551,  1151,   587,
    1125,  2467,  2115,  1483,  4340,   683,  3965,  1937,  2283,  3201,
    1937,   583,  3136,   670,  3829,  1279,  1280,  3578,  2455,  4242,
    4078,  1141,  3146,  1328,  1122,  3014,  4666,  2197,  3024,  1282,
     632,   126,  1283,  2456,  2063,  1279,  1280,   650,   632,  2750,
    3016,  1279,  1280,  1332,  3896,  3897,  1014,  2198,  4265,  4107,
    1474,   641,   525,   525,   525,   683,   525,  2615,   683,  2743,
    2199,  1947,  3382,  1416,   597,  2664,  1417,  2163,   525,   723,
     670,  3799,  1247,   525,   127,  1809,  2214,  1279,  1280,  2597,
    2155,  2150,  2151,  2152,   651,  2154,  4091,  4092,  1282,  1279,
    1280,  1283,  2212,   683,  3676,  2598,  1282,  2164,   644,  1283,
    1279,  1280,  2168,   584,    44,   941,  1282,  2647,   529,  1283,
    1398,   683,  2195,  4341,   601,  2335,  1282,   128,  1282,  1283,
    1282,  1283,  2722,  1283,  4355,  1282,  3703,  3704,  1283,  1332,
    1282,  2345, -1831,  1283,  1825,  1279,  1280,  1282,  1250,  2587,
    1283,  2394,  2146,   670,  2200,  3905,   919,  2259,  1279,  1280,
    4079,  3275,  3275,  1825,  3800,  4148,  1279,  1280,  2737,   652,
    1282,  3052,  1282,  1283,  4119,  1283,  1282,  3894,  1082,  1283,
    1610,  1484,  3268,  2389,  2705,  3798,   585,  1282,  4322,  4323,
    1283,  2284,  1284,  2275,  1738,   942,  -242,  1279,  1280, -1585,
    3665,  2285,  1279,  1280,  1083,  3257,  2389,  2555,  2286,  3966,
     646,   943,   944,   945,   946,   947,   948,  1825,  1126,   606,
    1282,  2275,  1739,  1283,  3640,  3641,  1418,   661,  1142,  1282,
    1279,  1280,  1283,   949,  1279,  1280,  3933,  1251,  1282,  1948,
     552,  1283,  3171,  2838,  1284,  1282,  1279,  1280,  1283,   662,
    1282,  1142,  2003,  1283,  4467, -1585,  1825,  1566,  1284,  1399,
    2233,   129,  2233,  2648,  2248,  2249,  1122,  2251,   920,  2390,
    2213,  1842,  2395,  2573,  1279,  1280,  2201,   683,  2648,  2293,
    2399,   683,    57,   721,  3419,  3420,  1282,  2470,  1300,  1283,
    1897, -1585,  2312, -1585,   664,  2291,   142,  1127,  1279,  1280,
    1284,  1282,   553,  3269,  1283,  1094,   684,   880,  1279,  1280,
    2471, -1585,  2287,  1279,  1280,  3482, -1585,  2588,  1066,  1067,
    1282, -1831,  1282,  1283,  4588,  1283,   675,   683,   687,  2062,
   -1585,  1279,  1280,  2079,  3934,  4468,  1484, -1585,  1567,  1122,
     130,  1105,  4120,  4589,  1901, -1585,  2461,   525,  2202,  1279,
    1280,   921,  4136,  3799,  1331,  1122,  1095, -1585,   683,  1284,
    1740,   689,  2479,  1282,  1105,  3955,  1283,  1284,   691,  3859,
   -1585,  1611,  1279,  1280,  3483, -1585,  2462,  1284,  3935,   700,
    2080,  3395,  3008,  1924, -1585,  3801,  3404,  1284,  3956,  1284,
     702,  1284,  3494,  1738,  1282,  1143,  1284,  1283,  1279,  1280,
    2275,  1284,  3504,  2038,  3505,   131,  4029,   132,  1284,  2288,
    2501,  1129,  1130,  3107,  1282,  3500,  3860,  1283,  1143,   937,
    1282,  1739,  2572,  1283,   125,  2705,  2030,  3957,  3177,  2592,
     653,  1284,  4506,  1284,  3537,  2029,  3804,  1284,   554,  1216,
    2530,   714,  1096,  1279,  1280,  2511,  2153,  2512,  1284,  2156,
    3014,  2520,   654,   133, -1585,  2130,  1282,  1188,  1189,  1283,
    3887,  3888,  2533,  1068,  1069,  3016,  1279,  1280,  1282,  3141,
    2727,  1283,  4535,  4535, -1752,   530,  2131, -1585,   531,  1282,
    1612,  1284,  1283,  1937,  2179,  3889,  2039, -1585,   709,  2626,
    1284,  2040,  1303,   655,  3698,  2534,   670,  3699,  2594,  1284,
    1279,  1280,   943,   944,  2538,   946,  1284,   948,  1279,  1280,
   -1752,  1284,   710,  2542,  1282,  3154,  4273,  1283,  2132, -1585,
    2546,   711, -1752,  1711,   949,  2549,  1712,  1282,  1818,  1258,
    1283,  1014,   716,  1331,  2041,  1282,  2500,  2499,  1283,  4274,
    1289,  2600,  1070,  1071,  1072,   530,  2617,  1284,   531,  2875,
    2042,  3536,  2707,  2708,   656,   683,   670,  1937, -1752,  2884,
    2497,  2552,  1284,   718,  2481,  2114,  1282,   683,  2524,  1283,
     611,  1282,  1369,  2524,  1283,  4017, -1585,  1369,   611,  2728,
    4035,  1284,  1466,  1284,  1279,  1280,  1279,  1280,  2923,   730,
     670,  3565,   732,  3592,   602,  2564,   272,  2583,   274,  1282,
   -1585,   542,  1283,  1282,  1279,  1280,  1283,  2498,  2499,   683,
    1066,  1067,  2724,   683,  1332,  1282,  1279,  1280,  1283,   733,
    2899,  1937,  2241,   734,  1284,  2915,  4048,  4049,  4050,   670,
     670,   683,   683,  2526,  2499,  1288,  2527,  1895,  3451,  1216,
    2292,   670,   887,  1282,   933,   877,  1283,  1597, -1585,   670,
    1613,   631,  2705,  1279,  1280,  1284,  3144,  3801,  2396,  2196,
    2706,   900,  2401,  1300,   890,  1097,   895,  1282,  1614,  3470,
    1283,   906,  2539,  2499,  3893,  1284,  2443,  1282,  2540,  2499,
    1283,  1284,  1282,   908,  2241,  1283,   632,  2917,  2242,  3475,
    4440,  2443,  4442,  2749,  4443,  3478,   917,  1279,  1280,   670,
    1282,   924, -1585,  1283,  2541,  2499,  1279,  1280,  1122,   926,
    1014,   931,  3248, -1585, -1585,   988,   622,  1284,  1282,  2243,
   -1862,  1283,  2694,   954,   683,  2258,  3653,  3654,   955,  1284,
    1098,  3486,  1099,  4258, -1585,   872, -1585,  2544,  2499,   683,
    1284,  1282,   979,  3490,  1283,   984,   683,   683,  1938,   683,
    2242,  1048,  2443,  1054,  3491,  1068,  1069,  3528,  1057,  1615,
    1060, -1585, -1585,  1279,  1280, -1585, -1585,  1282,  1658,  1659,
    1283,  1055, -1831,   988,   622,  1284,  1075,  4370,  1300,  2707,
    2708,  2243,  1059,  2745, -1862,  2830,  2831,  1061,  1284,  3492,
    2244,  3003,  1062,  1332,  2220,  2221,  1284,  2197,  3004,  2222,
    2223,  1078,  3493,  1312,  1313,  1314,  1315,  3624,   893,  1800,
    3495,  3625,  1282,  1085,  1858,  1283,  1093,  2198,  1102,  2882,
    2709,  1961,  2761,  1115,  3591,  1105,  2821,  1284,  1136,  2233,
    2199, -1862,  1284, -1831,  2643,  1282,  2275,  2644,  1283,  2872,
    2645,  3498,  1138,  4259,  4260,  2843,  3503,  3796,  4261,  4262,
    2390,  2275,  2244,  1046,  1047,  2390,  1050,  2857,  1051,  1135,
    1284,  2855,  2390,  2867,  1284,  3626,  2390,  1303,  2866,  1282,
    3805,  3806,  1283,  2245,  3506,  3921,  1284,  1282,  2866,   123,
    1283,  2866,  1169,  2390,  2390,  3109,   670,  2866,  2866,  4457,
    3508,  2896,  2803,  2892,  3821,  2903,  2390,  3814,  1938,  1278,
    2811,  2906,  2907,  1171,  1284,  2390,   683,  3201,  1937,  1172,
    2818,  2819,  2275,  1173,  2200,  2921,  1175,  2866,  3510,  1176,
    1862,  2823,  2824,  2825,  2826,  1177,  2828,  2829,  1284,  2390,
    2939,  3921,  1180,  1785,  3001,  2245,  1122,  2293,  1284,  1181,
    2292,  1321,  3512,  1284,  3072,  2499,  3836,  2959,  1122,  3123,
    2499,  3839,  3513,  1282,  1182,  1282,  1283,  3514,  1283,  1042,
    4422,  1284,  3810,  2444,   765,  2868,  2869,  2870,  2871,  1331,
    3409,  3410,  1183,  1282,   963,  3826,  1283,  2196,  2444,  1284,
     963,  1184,  1303,  1185,  1331,  1282,  3446,  3447,  1283,  1227,
    2669,  2443,  1323,  3827,  1411,  2902,  3849,  3850,  3851,  1186,
    2031,   670,  1284,  1187,  2241,  1300,  1190,  3841,  1129,  1130,
    1245,  1192,  1429,  2698,  1962,  3840,  3828,   683,   683,   683,
   -1863,  3047,  1282,  1259,  1260,  1283,  1305,  1306,  1284,  1863,
     770,  1193,  2908,  1866,  2909,  1194,  2201,  1197,  2445,  2444,
    1867,   670,  3907,  3496,  2499,  1331, -1862,   670,  2233,  1327,
    1786,  2233,  2233,  1517,  1787,  2233,  2233,  2233,  2233,  2233,
    2233,  2233,  2233,  3563,  3564,  2233,  1282,  1198,  1788,  1283,
    2242,  1199,  3295,  1284,  1200,  1282,    13,  2910,  1283,  3168,
    1201,  3169,  1202, -1862, -1863,  1203,  3590,  4026,  4248,  4252,
    1204,  3003,  3596,  3597,  2246,  1205,  1284,  2882,  3004,  1206,
    2911,  2243,  1207,  2008,  4522,  2758,  1300,  1210,  2202,  1343,
    1597,  3309,  1518,  2545,  2445,  2197,  3752,  3753,  3312,  3754,
    3755,  1868,  3315,  3756,  3757,  1279,  1280,  3759,  3760,  1211,
    1284, -1863,   782,  4248,  4252,  2198,  1217,  3982,  1284,  2912,
    1633,  1305,  1306,  1407,  4028,  1519,  1014,  1405,  2199,  3762,
    3763,  2275,  4034,  3210,  3211,  3212,  2246,  3838,  2499,  1218,
    3151,  1014,   937,  1219,   670,   670,  1220,  2241,  1406,  3390,
    2292,  1221,  2244,  3395,  1308,  1309,  1310,  1311,  1312,  1313,
    1314,  1315,  3862,  3863,  3160,  1870,  1222,    25,   937,  2705,
    3166,  3166,  4582,  3166,  4584,  1223,  4248,  3172,  2446, -1862,
    4252,   963,  3891,  1224,  2241,  1789,  1225,  2919,  3151,  1303,
    3987,  3988,  4597,  1228,  1284,   798,  1284,  4020,  4023,  1229,
    3184,  2443,  1014,  1854,  1855,  1856,  1857,  1858,  4036,  1332,
    4037,  1963,  2200,  2242,  1284,  3677,  1230,  2293,  3680,  3681,
    2679,  4625,  4626,  1231,  1332,  1232,  1284,  1964,  4038,  1233,
    1938, -1862,  1234,  3202,  3453,  2245,  3700,  4287,  1299,  1415,
    4039,  1424,  4030,  2499,  2243,  3166,  3166,  3166,   670,  2305,
    2242,  3056,  4044,  2499,  2446,  2115,  2115,  3421,  2444,  4051,
    3872,  4076,  3447,  1284,  1331,  2127,   963,  2905,  1235,  1308,
    1309,  1310,  1311,  1312,  1313,  1314,  1315,  4255,  3057,  4610,
    4611,  2243, -1831,  1790,  1236,  1332,  2680,  1237,  -845,  1238,
    1303,  4082,  3863,  1239,  3708,  1432,  2707,  2708,   683,  4085,
    4086,  3003,  2443,  4097,  4098,  1240,  1871,  1284,  3004,  1241,
    1859,  1860,  1861,  1862,  1242,  2244,  1284,  1243,  2999,  4125,
    2831,  1434,  4138,  4086,  1873,   272, -1863,   274,  3058,   963,
    1244,  3059,   670,   670,  2201,  4139,  4086,  2709,  3709,  3060,
    4062,  4063,  3710,  4065,  3711,  1520,  1300,  1248,  1305,  1306,
    2261,  1249,  2244,  4140,  4086,  1665,  1666,  4173,  4086,  4174,
    4086,  2275,  1252, -1863,  4184,  4086,  2262,  1541,  2336,  4185,
    4086,  1253,  2913,  2390,  4190,  4191,  2390,  2390,  3042,  3043,
    3044,  2866,    38, -1831,   610,  4369,  2678,  1257,  3270,  -849,
    -849,  1668,  3712,  1261,  1436,  1262,   670,  1542,  2245,  -849,
    2390,  4106,  4192,  4191,  1437,  1671,  2202,  3258,  3259,  1263,
    1738,  1672,  1673,  4106,  1438,  1674,   826,  4288,  3447,    44,
    2866,  1264,  1863,  3262,  1864,  1865,  1866,  2866,  1439,  1440,
    1441,  2866,  1265,  1867,  4444,  2245,  1266,  4295,  1739,  1676,
     744,  1014,  4147,  1322,  1442,  1937,  1454,  2293,  1543,  2679,
    -689,  1471,  1544,  1643,  1301,  1467,  2246,  1677,  4289,  3447,
    2305,  1468,  2275,  1479,  3320,  4291,  3392,   683,  4371,  4372,
    -845,  3271,  3378,  1486,  1282,  2306,  3061,  1283,  2866, -1863,
    1302,   744,  2008,  2008,  2008,  1512,  1682,  1489,  2444,  4390,
    3863,  1521,  3301,  1491,  1331,  -689,  1308,  1309,  1310,  1311,
    1312,  1313,  1314,  1315,  3307,  2305,  1516,  3399,  4504,  4505,
    3403,  1536,  1522,  1537,  1868,  2680,  2930,  2933,  3915,  1538,
    2306,  1553,  2679,  3237,  1332,   765,  4161,  1556,  4162,  4163,
    -884, -1863,  1561,  4539,  4540,    54,  4375,  1523,  2263,  4378,
    4379,  4380,  4381,  1560,  3429,  1568,  2681,  4657,  4658,  1571,
    1303,  3165,  3165,  1524,  3165,   683,  2390,  1927,  1928,  3915,
    1572,  1300,  3457,  1686,  4455,  4456,   765,  3464,  4152,  4153,
    1687,  1129,  1130,  3062,  1573,  1586,  2337,  1869,  1870,  -689,
    1587,  1589,   769,  1591,  1595,   537,  1602,    57,  2680,  2444,
    1688,   770,  1604,  2338,  1606,  1331,  1605,  1619,  1621,  1310,
    1311,  1312,  1313,  1314,  1315,  1622,  1623,  1545,  2233,  1624,
    1625,  1626,  1627,  1628,  3412,  1630,  2264,  2682,  1643,  2246,
    1649,  1738,   775,   769,  -689,  1651,  3165,  3165,  3165,  1597,
     537,  1652,   770,  1129,  1130,  1655,  1656,  4453,  4454,  3713,
    4275,  2196,  2265,  1660,  1732,  3714,  4462,  1304,  1733,  1739,
    1690,   872,  1737,  4309,  1736,  1794,  2246,  1795,  3534,  4364,
    4365,  4366,  4367,   775,  2445,  1796,  1738,  1799,  1691,  3487,
    1802,  1014,  1443,  1815,  4276,  1318,  1300,  1825,  1832,  1847,
    1884,  1894,  1895,  1369,  1896,  3715,  1546,   670,  1918,  1444,
    3270,  1935,  3272,   782,  1739,  4389,  1938,  1946,  1953,   683,
    2683,  1954,  1290,  1291,  2266,  2002,  1972,  1978,  4257,  1305,
    1306,  2005,  2007,  2015,  2012,  3184,   670,  2019,   872,  1871,
    2016, -1831,  1307,  1695,  2017,  3063,  2018,  2020,  4014,  4015,
    4016,  1216,  1696,   670,   782,  1284,  1872,  1873,  2022,  2021,
    2033,  2034,  2035,  1292,  2037,  2043,  2045,  3548,  2008,  1398,
    1547,  2046,  2054,  2055,  1332,  2066,  1293,  3549,  2069,   793,
    2077,  2086,   683,  2085,  3716,  1303,   683,  3550,  2087,  2088,
    1938,   796,  1014,  3271,  2091,   797,   798,  1300,  2094,  2197,
    2095,  3551,  3552,  3553,  2097,  2101,  2098,  2307,  3940,  3941,
    2105,  2120,  2123,  2122,  2129,  3064,  1294,  3554,  4277,  2198,
     793,   967,   966,  2136,  -689,  2137,  2267,  2138,  3950,  1295,
    2390,  1701,  2199,  2142,  3717,  3953,   797,   798,  2144,  2148,
    2390,  2171,  2866,  3065,  2446,  2170,  2172,  1445, -1585,  4544,
    3675,  1597,  2173,  1300,  1938,  2175,  1296,  2390,  2866,  2188,
     683,  3978,  2190,  2390,  3980,  4083,  4084,  2204,  3321,  -689,
    4089,  4090,  2205,  2208,  2209,  1332,  2211,  1308,  1309,  1310,
    1311,  1312,  1313,  1314,  1315,  3702,  2215,  2216,  1702,  1703,
    1704,  3718,  1548,  3707,  2217,  1705,  2253,  2254,  2256,  1345,
    1303,  3733,  3644,  2260, -1585,  4278,  2270,  2305,  1399,  1446,
    1370,  1371,  1706,  2319,  2330,  1707,  2200,  2324,  2325,  2331,
    2343,  1297,  2333,  4279,  2341,   540,  1447,  4544,   525,  2346,
    2354,  2353,  3747,  2357,  1549,  2363,  2959,  2364,  2373,  3898,
    2376,  2684, -1585,  2375,  1305,  1306,  2377,  4280,  2383,  4652,
    1937,  1709,  2384,  3399,  1597,  2391,  3433,  3743,  1783,  2403,
   -1585,  2405,  3765,  4661,  1937, -1585,  2406,  2407,  4652,  1937,
     540,  2437,  2439,  4661,  1937,  2408,   683,  2261,   683,  2409,
    2410,  2411,  2412,  2413,   937,  2414, -1585,  2415,  2416,  2417,
    2418,  3794,  2115,  2262, -1585,   818,  1372,  1346,  2419,  3916,
    2420,  1303,  3917,  2421,  3708,  2422, -1585,  2423,  2424,  2425,
    -689,  3441,   824,  2426,  3272,  2427,  2430,   826,  2431, -1585,
     827,  2432,  1347,  2433, -1585,  2434,  1348,  1373,  2435,   536,
    2436,  2457,  2458, -1585,  4345,  2473,   818,  2463,  2201,  2481,
    3916,  1374,   871,  3917,  2474,  3555,  2475,  2477,  3968,  2486,
    1315,  2515,  3710,   824,  3711,  -689,  1195,  1303,   826,  1305,
    1306,   827,  3556,  2488,  1375,  2489,  1349,  1376,  2499,  3774,
    2490,  2506,  2508,  2513,  4285,   871,  4348,  3918,  3919,  2514,
    1377,   558,   871,  2517,  2524,  2518,  1350,  2562,  2639,  4622,
    2590,  2528,  1308,  1309,  1310,  1311,  1312,  1313,  1314,  1315,
    3577,  4637,  3712, -1585,  2532,  2536,  2553,  1378,  3160,  2554,
    2202,  1403,   670,   670,   670,  1246,  2559,  2651,  3918,  3919,
     537,  4334,  1250, -1317,  2563,  2574, -1585,  3184,  2670,  2575,
    1014,  2691,  1379,  2688,  2734,  2599, -1585,  2576,  1380,  2609,
     559,  3202,  3870,  2652,  2613,  2736,  2614,  4281,  2742,  2621,
    2640,  1351,   670,   670,   670,  2627,  -915,  2676,  2653,  1484,
    1305,  1306,  2719,   963,  2730,  2263,   933,  2746, -1585,  2748,
    2752,  2654,  2770,   560,   683,   683,  2771,   933,  2772,  2787,
    3047,  2785,  1381,  3557,  2798,  2804,  2127,  2786,  2805,  2810,
    2817,  2876,  3945,  2812,  2878,  2813,  3912,  4285,  2926,  2954,
    3558,  3925,  2814,  2815,  2816,   683,  2951,   538,   561,  1310,
    1311,  1312,  1313,  1314,  1315,  3930,  1305,  1306,  2948,  2961,
    2983,  3002,  3018,  2655,  2656, -1585,  2986,   935,   871,  2989,
     670,  2992,  3026,   871,  3051,  1821,  3055,  3073,  3074,  3075,
    -884,  1122,  2664,  2264,  3087,  3158,  3088,  1352,  3100, -1585,
    3122,  2657,  3132,   670,  3134,  3159,  3140,  3163,  3175,   562,
    3179,  3180,  3559,  3186,   871,  3185,  1129,  1130,  3190,  2265,
    1772,  1773,  1774,  1775,  1776,  1777,  1778,  3187,  3192,  3560,
     871,  3981,  2072,  1353,   873,   874,   875,  3191,  3204,   878,
     879,  3207,  1354,   881,   882,   883,  3208, -1585,  3209,  3399,
    3214,  3403,  3994,  3219,  3220,  3222,  3223,  1355,  4517,  1309,
    1310,  1311,  1312,  1313,  1314,  1315,  3429,  3224,  1382,  3230,
    2658,  3238,  1383,   871,   871,  3242,   871,   871,  4348,  3243,
    3263,  2266,  1356,  3266,  3267,  3912,  3912,  3912,  1384,   871,
    3463,  3286,  3285,  1129,  1130,  3298,  1385,  3287,  3302,  3713,
    3958, -1585,  3306,  4517,  1386,  3714,  3305,  3782,  3313,  3783,
    3310,  3316,  3319, -1585,  1308,  1309,  1310,  1311,  1312,  1313,
    1314,  1315,  3318,  3384,  2659,  3388,  1357,  3418,  3391,  3417,
    3392,  3425,  3430, -1585,  3984, -1585,  3432,  2379,   -67,  3448,
    1387,  3454,  3458,   563,  3460,  3715,  3465,  3467,  3479,  2233,
    3468,  3469,  3471,  1388,  1389,  4058,  3472,  1358,  3999,  3525,
   -1585, -1585,  3480,  3515, -1585, -1585,  3526,  3568,   670,  3531,
     539,  3535,   963,  3540,  3541,  3566,  3571,   530,  3573,  3567,
     531,  3579,  3582,  2267,  1416,   871,  3583,  3585,  3598,  3246,
     540,  3595,  3569,  3570,  3606,  2127,  3608,   871,  3604,  3609,
    3610,  3617,  3912,  3912,  4634,  1390,  3630,  3912,  3912,  4285,
    1345,  3631,  3636,  3643,  3652,  3655,  3656,  3661,  3678,  3671,
    3734,   871,   564,  3737,  3716,  3741,  3738,  3744,  3745,  3749,
    4634,  3769,  3758,  2705,  1391,   541,  3750,  -609,  3770,   670,
     542,  3803,  3764,  2580,  3771,  3520,  1689,  1662,  3772,  3785,
    3854,  3843,  3791,  3792,  3856,  3793,  1392,  3874,  1393,  3818,
    3878,  3879,   670,  3847,  3811,  3880,  3881,  3895,  1665,  1666,
    3899,  3902,  3942,  3908,  3717,   543,  3931,  3946,  3962,  3817,
    3725,  3830,  4118,   544,  3872,  3864,  3871,   565,  3892,  3909,
    3399,  3399,   566,  3928,  3913,  3914,  3939,  3951,  3963,  3949,
    3967,  4132,  -849,  -849,  1668,  3970,  3972,  3973,  1346,  3728,
     567,  3979,  -849,  2949,  3983,  3985,  3996,  3997,  1671,  4005,
    4008,  4006,  4009,  4010,  1672,  1673,  4012,  4018,  1674,  4027,
    4031,  3718,  4019,  1347,  4032,   568,  3923,  1348,  4020,  4021,
    4033,  4664,  4022,  4045,  4024,  4025,  4041,  4046,  4047,  4042,
     871,   569,  1676,  3673,  3674,  4052,  4053,  2616,  4054,  4064,
    1342,  3463,  4066,  4067,  3463,  3463,  1643,  3047,  4096,  3047,
    1677,  4070,  4073,  4075,  2959,  2959,  4102,  1349,  4080,  4081,
    3912,   796,  3463,  4088,  4111,  4113,  4114,  4023,  4133,  4128,
    4141,  4144,  4187,  4145,  4146,  4149,  3706,  1350,  4150,  1682,
    4154,  4159,  3726,  3729,  3731,  3732,   871,   871,  4155,  4158,
    4164,   934,  4169,  4183,  4170,   871,   871,   871,   871,   871,
     871,   871,  4194,  4186,  4230,  4193,  4227,  4239,   871,   871,
    4233,   871,   871,  4268,  4234,  4254,   871,   871,  4256,  4267,
     871,   871,   871,   871,  4286,   871,   871,  4290,  1938,   683,
    2943,  4298,  4272,   871,   871,  4313,   871,   871,   871,   871,
     871,  -383,  1351,   871,   871,   871,   871,   871,   871,   871,
     871,   871,   871,  4331,   871,  4333,  1686,   871,   871,  4119,
    4357,  4336,   871,  1687,  4354,  4374,   871,   871,   871,  4363,
    4376,  4317,  4377,  4385,  4382,  4394,  4324,  4386,  4391,   871,
     871,   871,  4396,  1688,  4399,  4395,  4402,  -401,   871,  4429,
    4427,  4431,  4432,   871,  4430,  4433,  3031,  4435,  4448,   871,
    4466,   871,   871,  4459,  4463,  4475,  4465,  4464,  3399,  4476,
    4486,  4487,  4480,   871,   871,   871,  4494,   871,   871,   871,
     871,   871,  4518,   871,   871,   871,   871,   871,   871,   871,
     871,  4523,  4525,  4527,   871,  4528, -2391,   871,  1352,  4531,
    4549,  4551,  4552,  1690,  4294,  4557,  4560,  4572,  4562,  4570,
    4579,  4436,  4575,  4581,  4585,  4580,  4586,  4591,  4596,  4437,
    4600,  1691,  4602,  4594,  4607,  4590,  4605,  4606,  4613,  4609,
    4614,  4616,  4623,  4639,  1353,  4638,  4643,  4653,  4326,  4663,
    3993,  3156,  3991,  1354,  2994,  1854,  1855,  1856,  1857,  1858,
    2988,  2991,  2985,  3995,  4403,  2982,  3998,  3278,  1355,  1152,
    4000,  4489,  4235,  4343,  3260,  4488,  4007,  4002,  1654,  4479,
    4131,  4655,  4618,   638,  1024,  2635,  1695,  2717,  4554,  3562,
    4205,  4206,  4627,  1356,  4479,  1696,   670,  4208,  4209,  4473,
    4211,  4555,  4212,  4213,  4536,  4485,  4214,  2304,  4215,  4216,
    4490,     1,  4484,  4219,     2,  2381,  4272,  4220,  4221,  3317,
    3584,  4056,  3589,  1798,  3858,  4458,  2075,  4447,  4059,     3,
    4156,  4493,  4241,     4,  4593,  4547,  4577,  1357,  2442,  2882,
    4384,   731,  4011,  3424,  2378,  3670,  3657,     5,     6,  3439,
    3662,  2387,   871,  2945,  2724,     7,  3692,  4550,  3693,  3735,
       8,     9,  1859,  1860,  1861,  1862,  4104,  3969,  1358,  4311,
    3517,  4492,  3833,  3264,  1701,   550,    10,  3835,  3831,  4292,
    4546,   551,   871,  4299,  2472,  4296,   871,  4361,  4300,  4359,
    3041,  4182,   871,  2799,  4479,  4109,    11,  3017,  3423,   871,
    2795,  4094,  2931,  2929,  4569,  2932,   670,  1039,  2189,  4571,
    3927,  1035,  3193,  2187,  4452,  2440,  2697,  3658,    12,  2400,
    1450,  1371,  3576,  3855,  3176,  1053,  1472,    13,    14,    15,
    3131,  1702,  1703,  1704,  2612,  3071,  1955,  3148,  1705,  2100,
      16,    17,  1477,  3149,  2783,  3130,  3904,   670,  3642,  4171,
    3751,  4172,  4043,    18,  4479,  1706,  4479,  2192,  1707,  3147,
    3837,  3664,  1893,  3901,  1844,  4507,  4362,    19,  4559,  4479,
    4165,  2726,  4166,  1164,  1863,  4567,  1864,  1865,  1866,  2004,
    4266,  1635,  3873,  1636,  3852,  1867,  1404,    20,  1637,  3637,
     648,   739,  4501,  4502,  1709,  1638,  2754,  4479,  4479,  3173,
    2176,  1020,  4642,  3174,  2755,    21,  1372,    22,  2161,  2186,
    2629,  3669,    23,  2093,  4592,    24,  3882,  3857,  4068,  4608,
    4662,  4665,  3961,  3869,  1820,  4598,  4656,  1500,  2744,   634,
    4603,   635,  2143,  1499,  2723,  2134,  2675,  1373,    25,  2135,
    1453,    26,  2096,  2790,  2650,  1618,   930,  3844,  4368,  4548,
     725,  1374,  3032,  1952,  1456,   726,  4335,  3532,  1155,  4635,
    4337,    27,  1156,  1157,     0,     0,  1868,     0,     0,     0,
       0,     0,     0,     0,  1375,     0,     0,  1376,    28,     0,
       0,     0,    29,  1938,     0,  4635,     0,     0,     0,     0,
    1377,     0,     0,   670,     0,     0,     0,  1938,     0,     0,
       0,     0,  1938,     0,     0,     0,     0,  1938,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1378,     0,     0,
       0,     0,     0,     0,     0,     1,     0,     0,     2,  1869,
    1870,   850,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1379,     0,     0,     0,     0,     4,  1380,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     5,     6,     0,   898,     0,     0,     0,     0,     7,
       0,   905,     0,     0,     8,     9,     0,     0,     0,    30,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      10,     0,  1381,     0,     0,     0,    31,     0,    32,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      11,     0,    33,   871,     0,     0,     0,   871,     0,     0,
       0,     0,     0,    34,     0,     0,     0,   871,     0,   871,
       0,     0,    12,     0,     0,     0,     0,     0,     0,     0,
       0,    13,    14,    15,     0,    35,     0,     0,    36,     0,
      37,     0,     0,    38,    16,    17,  1371,     0,     0,     0,
       0,     0,     0,    39,    40,     0,     0,     0,     0,     0,
     871,  1871,     0,    41,     0,    42,     0,     0,     0,     0,
       0,    19,     0,     0,    43,     0,     0,     0,  1872,  1873,
      44,     0,     0,     0,     0,     0,     0,     0,    45,     0,
       0,    20,     0,    46,    47,    48,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   871,   871,   871,     0,    21,
       0,    22,  1178,     0,     0,     0,    23,     0,  1382,    24,
     871,     0,  1451,     0,     0,     0,    49,     0,   871,     0,
       0,  1372,     0,    50,     0,     0,     0,     0,  1384,     0,
       0,     0,    25,  1209,     0,    26,  1385,   871,     0,     0,
       0,     0,     0,   871,  1386,     0,   871,     0,   871,  1226,
       0,     0,  1373,     0,   871,    27,   871,   871,     0,     0,
       0,     0,     0,     0,     0,     0,  1374,    51,     0,     0,
       0,     0,    28,     0,     0,     0,    29,     0,     0,    52,
    1387,     0,     0,    53,     0,     0,    54,     0,     0,  1375,
       0,    55,  1376,  1388,  1389,     0,  1270,     0,     0,     0,
       0,     0,     0,     0,     0,  1377,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    56,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1378,     0,     0,     0,     0,   871,    57,     0,
       0,     0,     0,     0,     0,  1390,     0,   871,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1379,     0,     0,
       0,     0,     0,  1380,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    30,  1391,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   871,     0,     0,     0,     0,
      31,     0,    32,     0,     0,     0,  1392,     0,  1393,     0,
       0,     0,     0,     0,   850,     0,    33,  1381,     0,     0,
       0,     0,     0,     0,     0,     0,  1481,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    35,
    1510,     0,    36,  1748,    37,     0,     0,    38,     0,   871,
       0,     0,     0,     0,     0,     0,   871,    39,    40,     0,
       0,     0,     0,     0,     0,     0,     0,    41,     0,    42,
       0,     0,     0,     0,     0,     0,     0,     0,    43,     0,
       0,     0,     0,     0,    44,     0,     0,     0,     0,     0,
       0,     0,    45,     0,     0,     0,     0,    46,    47,    48,
       0,     0,     0,     0,     0,     0,  1749,  1750,  1751,  1752,
    1753,  1066,  1067,  1754,  1755,  1756,     0,  1757,  1758,  1759,
    1760,  1761,  1762,  1763,  1764,  1765,  1766,     0,  1767,  1768,
      49,     0,     0,     0,     0,     0,     0,    50,     0,     0,
       0,     0,     0,  1382,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1384,     0,     0,     0,     0,     0,  1747,
       0,  1385,     0,     0,     0,     0,     0,     0,     0,  1386,
       0,    51,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,     0,     0,     0,    53,     0,     0,
      54,     0,     0,     0,     0,    55,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1387,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1823,  1824,     0,  1388,  1389,
       0,     0,     0,     0,  1834,  1835,    56,     0,  1839,  1840,
    1841,     0,     0,     0,     0,     0,     0,  1848,  1849,     0,
    1850,  1851,    57,     0,     0,  1876,  1068,  1069,     0,  1886,
    1887,  1888,  1889,     0,  1891,     0,     0,     0,     0,     0,
       0,   871,  1899,  1900,  2927,  1903,  1904,     0,     0,  1662,
    1390,  1663,  1908,  1909,     0,     0,  1912,  1913,  1914,  1915,
    1916,  1917,     0,  1919,  1665,  1666,  1922,  1923,     0,     0,
       0,  1926,     0,     0,     0,  1929,  1933,  1934,     0,  1391,
       0,     0,     0,     0,     0,     0,     0,     0,  1941,  1942,
    1943,     0,     0,     0,     0,  1667,     0,  1951,     0,     0,
    1668,  1392,   850,  1393,     0,     0,     0,     0,  1958,     0,
    1959,  1960,     0,     0,  1671,     0,     0,     0,   871,     0,
    1672,  1673,     0,     0,  1674,     0,     0,   871,   871,     0,
       0,     0,     0,  1675,   871,     0,     0,   871,     0,     0,
       0,     0,     0,     0,     0,     0,  1996,     0,  1676,     0,
     871,   871,     0,   871,     0,     0,   871,   871,   871,   871,
     871,     0,  1643,   871,     0,     0,  1677,     0,     0,     0,
       0,     0,   871,     0,  1678,     0,     0,     0,   871,     0,
     871,  2928,   871,   871,     0,   871,   871,     0,     0,  1681,
     871,   871,   871,     0,     0,  1682,   871,   871,   871,     0,
     871,     0,   871,     0,   871,     0,   871,     0,   871,     0,
       0,     0,     0,   871,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1684,
       0,     0,     0,     0,     0,   871,     0,     0,   871,     0,
       0,     0,     0,     0,   871,     0,     0,     0,     0,   871,
     871,     0,     0,     0,  1661,     0,     0,     0,     0,  1662,
       0,  1663,     0,     0,  1664,     0,     0,     0,     0,     0,
       0,     0,  1686,     0,  1665,  1666,     0,     0,     0,  1687,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2106,     0,     0,     0,     0,     0,     0,     0,  1688,
       0,     0,     0,     0,     0,  1667,     0,     0,  -849,  -849,
    1668,  1669,     0,     0,     0,     0,  1670,     0,  -849,     0,
       0,  2140,  1689,     0,  1671,  1510,     0,     0,     0,     0,
    1672,  1673,     0,     0,  1674,     0,     0,     0,  2147,     0,
       0,     0,     0,  1675,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1676,  1690,
       0,     0,     0,     0,     0,   871,     0,     0,     0,     0,
       0,     0,  1643,     0,     0,     0,  1677,  1691,   871,     0,
       0,  1692,     0,     0,  1678,  1679,     0,     0,     0,     0,
       0,  1680,     0,     0,     0,     0,     0,     0,     0,  1681,
       0,     0,     0,     0,     0,  1682,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1683,     0,     0,     0,
       0,     0,     0,     0,     0,  1694,     0,     0,     0,     0,
       0,     0,  1695,     0,     0,     0,     0,     0,     0,  1684,
       0,  1696,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3276,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3276,  3276,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1685,     0,  1686,     0,     0,     0,     0,     0,  1698,  1687,
       0,     0,  4225,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1688,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1701,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1689,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1690,
       0,     0,     0,     0,     0,  4225,  4225,  1702,  1703,  1704,
       0,     0,     0,     0,  1705,     0,     0,  1691,     0,     0,
       0,  1692,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1706,     0,     0,  1707,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1661,     0,     0,     0,
       0,  1662,     0,  1663,     0,     0,  1664,     0,     0,  1693,
       0,     0,  3276,  3276,     0,  1694,  1665,  1666,     0,     0,
    1709,     0,  1695,     0,     0,     0,     0,  1710,     0,     0,
       0,  1696,  2487,     0,     0,     0,  2491,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1667,  2487,     0,
       0,     0,  1668,  1669,  1711,     0,     0,  1712,  1670,     0,
       0,     0,     0,  1697,   871,     0,  1671,   871,     0,     0,
       0,     0,  1672,  1673,     0,     0,  1674,     0,  1698,  1699,
    1700,     0,  4225,  4225,     0,  1675,     0,     0,     0,   871,
     871,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1676,     0,     0,     0,  4225,     0,     0,     0,     0,     0,
    1701,   871,     0,     0,  1643,     0,     0,     0,  1677,     0,
     871,     0,   871,     0,   871,     0,  1678,  1679,     0,     0,
       0,     0,     0,  1680,  2566,  2568,  2570,     0,     0,     0,
       0,  1681,   871,     0,     0,     0,     0,  1682,     0,     0,
       0,     0,     0,     0,   871,     0,     0,  2593,  1683,   871,
       0,     0,  4225,     0,     0,     0,     0,  1702,  1703,  1704,
       0,     0,     0,     0,  1705,     0,  2601,  4225,     0,     0,
       0,  1684,     0,     0,     0,  2606,     0,  2607,     0,     0,
       0,  1706,     0,  4225,  1707,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   871,
       0,     0,     0,     0,     0,     0,     0,  1708,     0,   871,
       0,     0,  1685,     0,  1686,     0,     0,  4225,     0,     0,
    1709,  1687,     0,     0,   871,   871,     0,  1710,     0,  4225,
    4225,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1688,     0,     0,     0,     0,     0,     0,   871,   871,
       0,     0,     0,   871,  1711,     0,     0,  1712,     0,     0,
       0,     0,     0,     0,  1689,     0,     0,  4225,     0,     0,
       0,     0,     0,     0,     0,     0,  2693,  4225,     0,     0,
       0,     0,  4225,     0,     0,     0,     0,     0,     0,     0,
     871,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1690,     0,     0,     0,  4225,     0,  4225,     0,     0,
       0,     0,     0,     0,  2733,     0,     0,     0,     0,  1691,
       0,     0,     0,  1692,     0,  4225,     0,  4225,     0,  4225,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4225,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4225,  4225,     0,     0,     0,     0,
       0,  1693,     0,     0,     0,     0,     0,  1694,     0,     0,
    4225,  4225,     0,     0,  1695,  4225,     0,     0,  2762,     0,
       0,     0,     0,  1696,     0,   850,   871,   871,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1697,     0,     0,     0,     0,
       0,     0,     0,     0,  3276,  3276,     0,     0,     0,     0,
    1698,  1699,  1700,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   909,   987,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   871,     0,
       0,     0,  1701,     0,     0,     0,     0,     0,     0,     0,
     988,   622,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   989,   871,     0,   871,     0,     0,   871,   871,     0,
     871,     0,     0,     0,     0,     0,     0,     0,     0,   871,
       0,     0,     0,     0,   871,     0,   990,   871,   991,   871,
     871,     0,     0,     0,     0,     0,     0,     0,   992,  1702,
    1703,  1704,     0,     0,     0,     0,  1705,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1706,   871,     0,  1707,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1831,   993,     0,  1708,
       0,     0,   994,     0,     0,   995,   871,     0,     0,     0,
       0,     0,  1709,     0,     0,     0,     0,     0,     0,  1710,
       0,     0,  1665,  1666,     0,     0,     0,     0,     0,     0,
    2960,     0,     0,     0,     0,  1665,  1666,   996,     0,   997,
       0,     0,     0,     0,     0,     0,  1711,     0,   998,  1712,
     999,     0,     0,     0,     0,     0,  -849,  -849,  1668,     0,
       0,     0,     0,     0,     0,     0,  -849,     0,     0,     0,
       0,  1668,  1671,  1000,  1001,     0,     0,     0,  1672,  1673,
       0,     0,  1674,     0,     0,  1671,     0,     0,     0,     0,
       0,  1672,  1673,     0,     0,  1674,     0,     0,     0,     0,
    1002,     0,     0,     0,     0,     0,  1676,  3050,     0,     0,
       0,     0,     0,     0,     0,     0,  3053,  3054,     0,  1676,
    1643,  1003,     0,  3068,  1677,     0,  3069,     0,     0,     0,
       0,     0,     0,  1643,     0,     0,     0,  1677,     0,  3076,
    3077,     0,  3078,     0,     0,  3081,  3082,  3083,  3084,  3085,
       0,     0,     0,  1682,     0,  1004,     0,     0,     0,     0,
       0,  3089,     0,     0,     0,     0,  1682,  3090,     0,  3091,
       0,  3092,  3093,     0,  3094,     0,     0,     0,     0,  3097,
    3098,  3099,     0,     0,     0,  3101,  3102,  3103,     0,  3104,
       0,  3106,     0,  3108,     0,  3110,     0,  3111,  3322,  3323,
       0,     0,  3112,     0,  3324,     0,  3325,     0,  3326,  3327,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1005,     0,     0,     0,     0,     0,  3328,     0,     0,     0,
    1686,     0,     0,  3145,     0,     0,     0,  1687,  1996,     0,
       0,     0,     0,  1686,     0,     0,     0,  1006,     0,     0,
    1687,     0,     0,     0,     0,     0,     0,  1688,  1007,  1008,
       0,     0,  1009,  1010,     0,     0,     0,     0,     0,     0,
    1688,     0,     0,     0,     0,     0,  3329,     0,     0,  3330,
       0,     0,     0,  1011,     0,     0,     0,  3331,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3332,   871,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1690,     0,     0,
       0,     0,     0,  3333,   871,     0,     0,     0,     0,   871,
    1690,     0,     0,   871,     0,  1691,     0,  1012,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1691,     0,
    1013,  3334,     0,  3335,  2106,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1510,     0,  3336,
    3337,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -2427,     0,     0,     0,  1014,     0,     0,     0,
    1695,     0,     0,     0,     0,     0,     0,     0,     0,  1696,
       0,     0,     0,  1695,     0,  1015,     0,     0,     0,     0,
       0,  3338,  1696,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3340,     0,     0,     0,     0,     0,     0,
       0,     0,  3341,  3342,     0,  3343,     0,     0,     0,     0,
       0,     0,   871, -2427,   871,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,  1701,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   871,
       0,  1701,  3344,  3345,  3346,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3347,  3348,  3349,     0,     0,     0,     0,  3350,     0,
       0,  3351,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1702,  1703,  1704,     0,  3352,
    3353,     0,  1705,     0,     0,     0,     0,     0,  1702,  1703,
    1704,     0,  4223,     0,     0,  1705,     0,     0,     0,  1706,
       0,     0,  1707,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1706,  3354,  3355,  1707,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1709,  3356,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1709,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   871,   871,
       0,     0,     0,     0,     0,  4223,  4223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3357,     0,     0,     0,  3358,     0,     0,     0,     0,
       0,     0,     0,  3450,     0,     0,  3452,  3359,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3473,  3474,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3497,     0,     0,     0,     0,     0,     0,     0,     0,  3507,
       0,  3509,     0,  3511,     0,     0,     0,  3360,     0,     0,
    3361,     0,     0,  3362,  3363,  3364,  3365,     0,   871,     0,
     871,   850,     0,     0,     0,     0,     0,     0,     0,     0,
     871,     0,  4223,  4223,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4223,     0,  3366,  3367,     0,     0,
       0,     0,  4441,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3368,     0,     0,     0,   850,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3600,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     871,     0,  4223,  2106,  3621,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4223,   871,     0,
       0,     0,     0,     0,     0,     0,     0,  3634,  3635,     0,
       0,     0,  3600,  4223,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   871,  4223,     0,  3649,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4223,
    4223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   871,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4223,     0,     0,
       0,     0,     0,     0,   871,     0,     0,  4223,     0,     0,
       0,     0,  4223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   871,     0,
       0,     0,     0,     0,     0,  4223,     0,  4223,     0,     0,
       0,     0,     0,     0,     0,  3739,  3740,     0,     0,     0,
     871,     0,     0,     0,     0,  4223,     0,  4223,     0,  4223,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4223,  4223,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4223,  4223,     0,     0,     0,  4223,     0,     0,     0,     0,
       0,   871,     0,     0,     0,     0,     0,  3797,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   871,
       0,  3807,     0,  2106,     0,     0,  3812,  3813,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3820,     0,
       0,     0,     0,  3822,     0,     0,  3823,     0,  3824,  3825,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   146,     0,   147,   148,
     149,   150,   151,     0,     0,     0,   153,     0,     0,     0,
     154,     0,     0,     0,     0,   156,   157,   158,   159,   160,
       0,     0,  -403,     0,     0,     0,   163,     0,     0,     0,
     164,     0,     0,   165,   166,   167,     0,   168,     0,     0,
       0,     0,     0,   171,  4196,  3600,   172,   173,     0,   174,
     175,     0,     0,     0,     0,   178,   179,   180,  4197,   182,
     183,     0,   184,   185,     0,   186,   187,     0,   189,     0,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,     0,   203,     0,     0,     0,   204,     0,
       0,   205,     0,   206,     0,     0,   207,     0,     0,     0,
     208,   209,   210,     0,     0,   211,     0,     0,     0,     0,
     212,     0,     0,     0,     0,     0,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,     0,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,     0,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
       0,     0,     0,   241,   242,   243,   244,   245,     0,     0,
     246,   247,  4198,   248,   249,   250,   251,   252,     0,     0,
       0,     0,     0,     0,     0,     0,   256,     0,   257,     0,
     258,     0,   259,     0,     0,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,     0,   267,     0,     0,     0,
       0,     0,   270,     0,     0,     0,   271,   272,   273,   274,
    4199,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,     0,   279,   280,     0,     0,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,  4200,     0,     0,
     287,     0,   288,     0,     0,     0,   290,     0,     0,   291,
    4201,     0,   292,   293,     0,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,  -358,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,  3600,   347,   348,     0,
       0,   349,   350,   351,   352,   353,     0,     0,     0,     0,
     355,     0,     0,  2106,   356,     0,   357,   358,  4072,   359,
     360,  4202,  4074,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   364,   365,     0,     0,     0,
     368,     0,   369,   370,   371,   372,   373,   374,   375,   376,
     377,     0,     0,     0,     0,     0,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
       0,     0,   405,     0,   407,  -358,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,     0,     0,   417,     0,
       0,   419,   420,   421,  4203,   422,     0,     0,     0,   424,
     425,   426,   427,   428,   429,   430,   431,     0,   433,   434,
       0,   435,     0,     0,     0,     0,   437,   438,   439,     0,
       0,     0,     0,   441,     0,     0,     0,     0,     0,     0,
     444,  2106,   446,  4143,   447,     0,     0,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,     0,
     462,   463,   464,   465,     0,     0,     0,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,     0,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
       0,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,     0,     0,     0,     0,   502,     0,     0,   503,     0,
       0,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,  -358,     0,     0,     0,
     515,   516,     0,     0,   518,     0,   520,   521,     0,     0,
     522,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4641,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   905,  4312,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4397,     0,  4398,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4406,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4477,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4482,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4521,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4561,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   145,   146,     0,   740,   148,
     149,   150,   151,     0,     0,   152,   153,  4578,     0,     0,
     154,     0,     0,   741,     0,   156,   157,   158,   159,   742,
     161,     0,   162,     0,     0,   743,   163,   744,   745,   746,
     164,   747,     0,   165,   166,   167,  1930,   168,     0,   169,
     170,     0,     0,   171,   748,   749,   172,   173,     0,   174,
     175,   750,   751,   177,     0,   178,   179,   180,   181,   752,
     183,     0,   753,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   754,   203,     0,   755,   756,   204,     0,
    4644,   205,   757,   206,   758,     0,   207,   759,   760,     0,
     208,   209,   210,   761,   762,   763,     0,     0,     0,     0,
     764,   213,   765,     0,     0,   766,   214,   215,  3600,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,   767,     0,   241,   242,   243,   244,   245,   768,   769,
     246,   247,     0,   248,   249,   250,   251,   252,   770,     0,
     253,   254,     0,     0,     0,   771,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   772,   262,   773,     0,   264,
       0,   265,     0,   774,     0,   266,   267,     0,   268,   775,
       0,   269,   270,     0,     0,     0,   776,   272,   273,   274,
     777,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,   778,   279,   280,   281,   779,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,  1931,   291,
       0,   780,   292,   293,     0,     0,     0,     0,     0,   781,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
     782,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   783,
     322,   323,   324,   325,   784,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   785,   333,     0,     0,   786,
     335,   787,   336,     0,   337,   788,   789,   790,   791,   792,
     342,   343,   344,   345,   346,     0,   793,   347,   348,     0,
       0,   349,   350,   351,   352,   353,   794,   795,   796,   354,
     355,     0,   797,   798,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,   799,   366,   367,
     368,     0,   369,   370,   800,   372,   373,   374,   375,   801,
     802,   378,   803,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   804,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,   805,   806,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   807,     0,   808,   423,   424,
     425,   426,   427,   428,   809,   810,   431,   432,   433,   434,
       0,   811,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,   812,   813,   466,   467,     0,     0,
     468,   469,   814,   471,   472,   473,   815,   816,   474,   475,
     476,   477,   817,   478,   479,     0,     0,   480,   481,   482,
     483,     0,   818,   484,   485,     0,   819,   820,   821,   822,
       0,     0,     0,     0,  1932,   490,   491,     0,   823,   824,
     825,   493,   494,   495,   826,   496,   497,   827,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   828,   506,     0,     0,   829,   830,   831,   507,
     832,   508,     0,     0,   509,   833,     0,   834,   510,     0,
     511,   512,   835,   836,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     837,     0,     0,     0,   838,   839,     0,     0,     0,     0,
     841,   842,     0,     0,   843,   844,     0,     0,   845,   846,
     145,   146,     0,   740,   148,   149,   150,   151,  1506,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   741,     0,
     156,   157,   158,   159,   742,   161,     0,   162,     0,     0,
    1507,   163,   744,   745,   746,   164,   747,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,   748,
     749,   172,   173,     0,   174,   175,   750,   751,   177,     0,
     178,   179,   180,   181,   752,   183,     0,   753,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   754,   203,
       0,   755,   756,   204,     0,     0,   205,   757,   206,   758,
       0,   207,   759,   760,     0,   208,   209,   210,   761,   762,
     763,     0,     0,     0,     0,   764,   213,   765,     0,     0,
    1508,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,   767,     0,   241,   242,
     243,   244,   245,   768,   769,   246,   247,     0,   248,   249,
     250,   251,   252,   770,     0,   253,   254,     0,     0,     0,
     771,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     772,   262,   773,     0,   264,     0,   265,     0,   774,     0,
     266,   267,     0,   268,   775,     0,   269,   270,     0,     0,
       0,   776,   272,   273,   274,   777,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,   778,   279,   280,   281,
     779,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,   780,   292,   293,     0,
       0,     0,     0,     0,   781,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,   782,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   783,   322,   323,   324,   325,   784,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     785,   333,     0,     0,   786,   335,   787,   336,     0,   337,
     788,   789,   790,   791,   792,   342,   343,   344,   345,   346,
       0,   793,   347,   348,     0,     0,   349,   350,   351,   352,
     353,   794,   795,   796,   354,   355,     0,   797,   798,   356,
       0,   357,   358,  1509,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,   799,   366,   367,   368,     0,   369,   370,   800,
     372,   373,   374,   375,   801,   802,   378,   803,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   804,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
     805,   806,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     807,     0,   808,   423,   424,   425,   426,   427,   428,   809,
     810,   431,   432,   433,   434,     0,   811,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,   812,
     813,   466,   467,     0,     0,   468,   469,   814,   471,   472,
     473,   815,   816,   474,   475,   476,   477,   817,   478,   479,
       0,     0,   480,   481,   482,   483,     0,   818,   484,   485,
       0,   819,   820,   821,   822,     0,     0,     0,     0,     0,
     490,   491,     0,   823,   824,   825,   493,   494,   495,   826,
     496,   497,   827,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   828,   506,     0,
       0,   829,   830,   831,   507,   832,   508,     0,     0,   509,
     833,     0,   834,   510,     0,   511,   512,   835,   836,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,     0,     0,   837,     0,     0,     0,   838,
     839,     0,     0,     0,     0,   841,   842,     0,     0,   843,
     844,     0,     0,   845,   846,   145,   146,     0,   740,   148,
     149,   150,   151,     0,     0,   152,   153,     0,     0,     0,
     154,     0,     0,   741,     0,   156,   157,   158,   159,   742,
     161,     0,   162,     0,     0,   743,   163,   744,   745,   746,
     164,   747,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,   748,   749,   172,   173,     0,   174,
     175,   750,   751,   177,     0,   178,   179,   180,   181,   752,
     183,     0,   753,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   754,   203,     0,   755,   756,   204,     0,
       0,   205,   757,   206,   758,     0,   207,   759,   760,     0,
     208,   209,   210,   761,   762,   763,     0,     0,     0,     0,
     764,   213,   765,     0,     0,   766,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,   767,     0,   241,   242,   243,   244,   245,   768,   769,
     246,   247,     0,   248,   249,   250,   251,   252,   770,     0,
     253,   254,     0,     0,     0,   771,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   772,   262,   773,     0,   264,
       0,   265,     0,   774,     0,   266,   267,     0,   268,   775,
       0,   269,   270,     0,     0,     0,   776,   272,   273,   274,
     777,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,   778,   279,   280,   281,   779,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,   780,   292,   293,     0,     0,     0,     0,     0,   781,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
     782,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   783,
     322,   323,   324,   325,   784,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   785,   333,     0,     0,   786,
     335,   787,   336,     0,   337,   788,   789,   790,   791,   792,
     342,   343,   344,   345,   346,     0,   793,   347,   348,     0,
       0,   349,   350,   351,   352,   353,   794,   795,   796,   354,
     355,     0,   797,   798,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,   799,   366,   367,
     368,     0,   369,   370,   800,   372,   373,   374,   375,   801,
     802,   378,   803,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   804,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,   805,   806,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   807,     0,   808,   423,   424,
     425,   426,   427,   428,   809,   810,   431,   432,   433,   434,
       0,   811,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,   812,   813,   466,   467,     0,     0,
     468,   469,   814,   471,   472,   473,   815,   816,   474,   475,
     476,   477,   817,   478,   479,     0,     0,   480,   481,   482,
     483,     0,   818,   484,   485,     0,   819,   820,   821,   822,
       0,     0,     0,     0,     0,   490,   491,     0,   823,   824,
     825,   493,   494,   495,   826,   496,   497,   827,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   828,   506,     0,     0,   829,   830,   831,   507,
     832,   508,     0,     0,   509,   833,     0,   834,   510,     0,
     511,   512,   835,   836,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     837,     0,     0,     0,   838,   839,   840,     0,     0,     0,
     841,   842,     0,     0,   843,   844,     0,     0,   845,   846,
     145,   146,     0,   740,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   741,     0,
     156,   157,   158,   159,   742,   161,     0,   162,     0,     0,
     743,   163,   744,   745,   746,   164,   747,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,   748,
     749,   172,   173,     0,   174,   175,   750,   751,   177,     0,
     178,   179,   180,   181,   752,   183,     0,   753,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   754,   203,
       0,   755,   756,   204,     0,     0,   205,   757,   206,   758,
       0,   207,   759,   760,     0,   208,   209,   210,   761,   762,
     763,     0,     0,     0,     0,   764,   213,   765,     0,     0,
     766,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,   767,     0,   241,   242,
     243,   244,   245,   768,   769,   246,   247,     0,   248,   249,
     250,   251,   252,   770,     0,   253,   254,     0,     0,     0,
     771,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     772,   262,   773,     0,   264,     0,   265,     0,   774,     0,
     266,   267,     0,   268,   775,     0,   269,   270,     0,     0,
       0,   776,   272,   273,   274,   777,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,   778,   279,   280,   281,
     779,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,   780,   292,   293,     0,
       0,     0,     0,     0,   781,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,   782,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   783,   322,   323,   324,   325,   784,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     785,   333,     0,     0,   786,   335,   787,   336,     0,   337,
     788,   789,   790,   791,   792,   342,   343,   344,   345,   346,
       0,   793,   347,   348,     0,     0,   349,   350,   351,   352,
     353,   794,   795,   796,   354,   355,     0,   797,   798,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,   799,   366,   367,   368,     0,   369,   370,   800,
     372,   373,   374,   375,   801,   802,   378,   803,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   804,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
     805,   806,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     807,     0,   808,   423,   424,   425,   426,   427,   428,   809,
     810,   431,   432,   433,   434,     0,   811,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,   812,
     813,   466,   467,     0,     0,   468,   469,   814,   471,   472,
     473,   815,   816,   474,   475,   476,   477,   817,   478,   479,
       0,     0,   480,   481,   482,   483,     0,   818,   484,   485,
       0,   819,   820,   821,   822,     0,     0,     0,     0,     0,
     490,   491,     0,   823,   824,   825,   493,   494,   495,   826,
     496,   497,   827,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   828,   506,     0,
       0,   829,   830,   831,   507,   832,   508,     0,     0,   509,
     833,     0,   834,   510,     0,   511,   512,   835,   836,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,     0,     0,   837,     0,     0,     0,   838,
     839,  2507,     0,     0,     0,   841,   842,     0,     0,   843,
     844,     0,     0,   845,   846,   145,   146,     0,   740,   148,
     149,   150,   151,     0,     0,   152,   153,     0,     0,     0,
     154,     0,     0,   741,     0,   156,   157,   158,   159,   742,
     161,     0,   162,     0,     0,   743,   163,   744,   745,   746,
     164,   747,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,   748,   749,   172,   173,     0,   174,
     175,   750,   751,   177,     0,   178,   179,   180,   181,   752,
     183,     0,   753,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   754,   203,     0,   755,   756,   204,     0,
       0,   205,   757,   206,   758,     0,   207,   759,   760,     0,
     208,   209,   210,   761,   762,   763,     0,     0,     0,     0,
     764,   213,   765,     0,     0,   766,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,   767,     0,   241,   242,   243,   244,   245,   768,   769,
     246,   247,     0,   248,   249,   250,   251,   252,   770,     0,
     253,   254,     0,     0,     0,   771,   256,  2565,   257,     0,
     258,     0,   259,     0,   260,   772,   262,   773,     0,   264,
       0,   265,     0,   774,     0,   266,   267,     0,   268,   775,
       0,   269,   270,     0,     0,     0,   776,   272,   273,   274,
     777,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,   778,   279,   280,   281,   779,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,   780,   292,   293,     0,     0,     0,     0,     0,   781,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
     782,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   783,
     322,   323,   324,   325,   784,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   785,   333,     0,     0,   786,
     335,   787,   336,     0,   337,   788,   789,   790,   791,   792,
     342,   343,   344,   345,   346,     0,   793,   347,   348,     0,
       0,   349,   350,   351,   352,   353,   794,   795,   796,   354,
     355,     0,   797,   798,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,   799,   366,   367,
     368,     0,   369,   370,   800,   372,   373,   374,   375,   801,
     802,   378,   803,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   804,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,   805,   806,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   807,     0,   808,   423,   424,
     425,   426,   427,   428,   809,   810,   431,   432,   433,   434,
       0,   811,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,   812,   813,   466,   467,     0,     0,
     468,   469,   814,   471,   472,   473,   815,   816,   474,   475,
     476,   477,   817,   478,   479,     0,     0,   480,   481,   482,
     483,     0,   818,   484,   485,     0,   819,   820,   821,   822,
       0,     0,     0,     0,     0,   490,   491,     0,   823,   824,
     825,   493,   494,   495,   826,   496,   497,   827,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   828,   506,     0,     0,   829,   830,   831,   507,
     832,   508,     0,     0,   509,   833,     0,   834,   510,     0,
     511,   512,   835,   836,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     837,     0,     0,     0,   838,   839,     0,     0,     0,     0,
     841,   842,     0,     0,   843,   844,     0,     0,   845,   846,
     145,   146,     0,   740,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   741,     0,
     156,   157,   158,   159,   742,   161,     0,   162,     0,     0,
     743,   163,   744,   745,   746,   164,   747,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,   748,
     749,   172,   173,     0,   174,   175,   750,   751,   177,     0,
     178,   179,   180,   181,   752,   183,     0,   753,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   754,   203,
       0,   755,   756,   204,     0,     0,   205,   757,   206,   758,
       0,   207,   759,   760,     0,   208,   209,   210,   761,   762,
     763,     0,     0,     0,     0,   764,   213,   765,     0,     0,
     766,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,   767,     0,   241,   242,
     243,   244,   245,   768,   769,   246,   247,     0,   248,   249,
     250,   251,   252,   770,     0,   253,   254,     0,     0,     0,
     771,   256,  2567,   257,     0,   258,     0,   259,     0,   260,
     772,   262,   773,     0,   264,     0,   265,     0,   774,     0,
     266,   267,     0,   268,   775,     0,   269,   270,     0,     0,
       0,   776,   272,   273,   274,   777,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,   778,   279,   280,   281,
     779,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,   780,   292,   293,     0,
       0,     0,     0,     0,   781,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,   782,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   783,   322,   323,   324,   325,   784,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     785,   333,     0,     0,   786,   335,   787,   336,     0,   337,
     788,   789,   790,   791,   792,   342,   343,   344,   345,   346,
       0,   793,   347,   348,     0,     0,   349,   350,   351,   352,
     353,   794,   795,   796,   354,   355,     0,   797,   798,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,   799,   366,   367,   368,     0,   369,   370,   800,
     372,   373,   374,   375,   801,   802,   378,   803,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   804,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
     805,   806,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     807,     0,   808,   423,   424,   425,   426,   427,   428,   809,
     810,   431,   432,   433,   434,     0,   811,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,   812,
     813,   466,   467,     0,     0,   468,   469,   814,   471,   472,
     473,   815,   816,   474,   475,   476,   477,   817,   478,   479,
       0,     0,   480,   481,   482,   483,     0,   818,   484,   485,
       0,   819,   820,   821,   822,     0,     0,     0,     0,     0,
     490,   491,     0,   823,   824,   825,   493,   494,   495,   826,
     496,   497,   827,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   828,   506,     0,
       0,   829,   830,   831,   507,   832,   508,     0,     0,   509,
     833,     0,   834,   510,     0,   511,   512,   835,   836,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,     0,     0,   837,     0,     0,     0,   838,
     839,     0,     0,     0,     0,   841,   842,     0,     0,   843,
     844,     0,     0,   845,   846,   145,   146,     0,   740,   148,
     149,   150,   151,     0,     0,   152,   153,     0,     0,     0,
     154,     0,     0,   741,     0,   156,   157,   158,   159,   742,
     161,     0,   162,     0,     0,   743,   163,   744,   745,   746,
     164,   747,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,   748,   749,   172,   173,     0,   174,
     175,   750,   751,   177,     0,   178,   179,   180,   181,   752,
     183,     0,   753,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   754,   203,     0,   755,   756,   204,     0,
       0,   205,   757,   206,   758,     0,   207,   759,   760,     0,
     208,   209,   210,   761,   762,   763,     0,     0,     0,     0,
     764,   213,   765,     0,     0,   766,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,   767,     0,   241,   242,   243,   244,   245,   768,   769,
     246,   247,     0,   248,   249,   250,   251,   252,   770,     0,
     253,   254,     0,     0,     0,   771,   256,  2569,   257,     0,
     258,     0,   259,     0,   260,   772,   262,   773,     0,   264,
       0,   265,     0,   774,     0,   266,   267,     0,   268,   775,
       0,   269,   270,     0,     0,     0,   776,   272,   273,   274,
     777,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,   778,   279,   280,   281,   779,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,   780,   292,   293,     0,     0,     0,     0,     0,   781,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
     782,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   783,
     322,   323,   324,   325,   784,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   785,   333,     0,     0,   786,
     335,   787,   336,     0,   337,   788,   789,   790,   791,   792,
     342,   343,   344,   345,   346,     0,   793,   347,   348,     0,
       0,   349,   350,   351,   352,   353,   794,   795,   796,   354,
     355,     0,   797,   798,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,   799,   366,   367,
     368,     0,   369,   370,   800,   372,   373,   374,   375,   801,
     802,   378,   803,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   804,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,   805,   806,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   807,     0,   808,   423,   424,
     425,   426,   427,   428,   809,   810,   431,   432,   433,   434,
       0,   811,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,   812,   813,   466,   467,     0,     0,
     468,   469,   814,   471,   472,   473,   815,   816,   474,   475,
     476,   477,   817,   478,   479,     0,     0,   480,   481,   482,
     483,     0,   818,   484,   485,     0,   819,   820,   821,   822,
       0,     0,     0,     0,     0,   490,   491,     0,   823,   824,
     825,   493,   494,   495,   826,   496,   497,   827,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   828,   506,     0,     0,   829,   830,   831,   507,
     832,   508,     0,     0,   509,   833,     0,   834,   510,     0,
     511,   512,   835,   836,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     837,     0,     0,     0,   838,   839,     0,     0,     0,     0,
     841,   842,     0,     0,   843,   844,     0,     0,   845,   846,
     145,   146,     0,   740,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   741,     0,
     156,   157,   158,   159,   742,   161,     0,   162,     0,     0,
     743,   163,   744,   745,   746,   164,   747,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,   748,
     749,   172,   173,     0,   174,   175,   750,   751,   177,     0,
     178,   179,   180,   181,   752,   183,     0,   753,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   754,   203,
       0,   755,   756,   204,     0,     0,   205,   757,   206,   758,
       0,   207,   759,   760,     0,   208,   209,   210,   761,   762,
     763,     0,     0,     0,     0,   764,   213,   765,     0,     0,
     766,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,   767,     0,   241,   242,
     243,   244,   245,   768,   769,   246,   247,     0,   248,   249,
     250,   251,   252,   770,     0,   253,   254,     0,     0,     0,
     771,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     772,   262,   773,     0,   264,     0,   265,     0,   774,     0,
     266,   267,     0,   268,   775,     0,   269,   270,     0,     0,
       0,   776,   272,   273,   274,   777,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,   778,   279,   280,   281,
     779,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,   780,   292,   293,     0,
       0,     0,     0,     0,   781,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,   782,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   783,   322,   323,   324,   325,   784,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     785,   333,     0,     0,   786,   335,   787,   336,     0,   337,
     788,   789,   790,   791,   792,   342,   343,   344,   345,   346,
       0,   793,   347,   348,     0,     0,   349,   350,   351,   352,
     353,   794,   795,   796,   354,   355,     0,   797,   798,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,   799,   366,   367,   368,     0,   369,   370,   800,
     372,   373,   374,   375,   801,   802,   378,   803,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   804,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
     805,   806,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     807,     0,   808,   423,   424,   425,   426,   427,   428,   809,
     810,   431,   432,   433,   434,     0,   811,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,   812,
     813,   466,   467,     0,     0,   468,   469,   814,   471,   472,
     473,   815,   816,   474,   475,   476,   477,   817,   478,   479,
       0,     0,   480,   481,   482,   483,     0,   818,   484,   485,
       0,   819,   820,   821,   822,     0,     0,     0,     0,     0,
     490,   491,     0,   823,   824,   825,   493,   494,   495,   826,
     496,   497,   827,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   828,   506,     0,
       0,   829,   830,   831,   507,   832,   508,     0,     0,   509,
     833,     0,   834,   510,     0,   511,   512,   835,   836,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,     0,     0,   837,     0,     0,     0,   838,
     839,     0,     0,     0,     0,   841,   842,     0,     0,   843,
     844,     0,     0,   845,   846,   145,   146,     0,   740,   148,
     149,   150,   151,     0,     0,   152,   153,     0,     0,     0,
     154,     0,     0,   741,     0,   156,   157,   158,   159,   742,
     161,     0,   162,     0,     0,   743,   163,   744,   745,   746,
     164,   747,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,   748,   749,   172,   173,     0,   174,
     175,   750,   751,   177,     0,   178,   179,   180,   181,   752,
     183,     0,   753,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   754,   203,     0,   755,   756,   204,     0,
       0,   205,   757,   206,   758,     0,   207,   759,   760,     0,
     208,   209,   210,   761,   762,   763,     0,     0,     0,     0,
     764,   213,   765,     0,     0,   766,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,   767,     0,   241,   242,   243,   244,   245,   768,   769,
     246,   247,     0,   248,   249,   250,   251,   252,   770,     0,
     253,   254,     0,     0,     0,   771,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   772,   262,   773,     0,   264,
       0,   265,     0,   774,     0,   266,   267,     0,   268,   775,
       0,   269,   270,     0,     0,     0,   776,   272,   273,   274,
     777,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,   778,   279,   280,   281,   779,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,   780,   292,   293,     0,     0,     0,     0,     0,   781,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
     782,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   783,
     322,   323,   324,   325,   784,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   785,   333,     0,     0,   786,
     335,   787,   336,     0,   337,   788,   789,   790,   791,   792,
     342,   343,   344,   345,   346,     0,   793,   347,   348,     0,
       0,   349,   350,   351,   352,   353,   794,   795,   796,   354,
     355,     0,   797,   798,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,   799,   366,   367,
     368,     0,   369,   370,   800,   372,   373,   374,   375,   801,
     802,   378,   803,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   804,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,   805,   806,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   807,     0,   808,   423,   424,
     425,   426,   427,   428,   809,   810,   431,   432,   433,   434,
       0,   811,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,   812,   813,   466,   467,     0,     0,
     468,   469,   814,   471,   472,   473,   815,   816,   474,   475,
     476,   477,   817,   478,   479,     0,     0,   480,   481,   482,
     483,     0,   818,   484,   485,     0,   819,   820,   821,   822,
       0,     0,     0,     0,     0,   490,   491,     0,   823,   824,
     825,   493,   494,   495,   826,   496,   497,   827,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   828,   506,     0,     0,   829,   830,   831,   507,
     832,   508,     0,     0,   509,   833,     0,   834,   510,     0,
     511,   512,   835,   836,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     837,     0,     0,     0,   838,   839,     0,     0,     0,     0,
     841,  1208,     0,     0,   843,   844,     0,     0,   845,   846,
     145,   146,     0,   740,   148,   149,   150,   151,  1966,     0,
     152,   153,     0,     0,     0,  1967,     0,     0,   741,     0,
     156,   157,   158,   159,   742,   161,     0,   162,     0,     0,
     743,   163,   744,   745,   746,   164,   747,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,   748,
     749,   172,   173,     0,   174,   175,   750,   751,   177,     0,
     178,   179,   180,   181,   752,   183,     0,   753,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   754,   203,
       0,   755,   756,   204,     0,     0,   205,   757,   206,   758,
       0,   207,   759,   760,     0,   208,   209,   210,   761,   762,
     763,     0,     0,     0,     0,   764,   213,   765,     0,     0,
     766,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,   767,     0,   241,   242,
     243,   244,   245,   768,   769,   246,   247,     0,   248,   249,
     250,   251,   252,   770,     0,   253,   254,     0,     0,     0,
     771,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     772,   262,   773,     0,   264,     0,   265,     0,   774,     0,
     266,   267,     0,   268,   775,     0,   269,   270,     0,     0,
       0,   776,   272,   273,   274,   777,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,   778,   279,   280,   281,
     779,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,   780,   292,   293,     0,
       0,     0,     0,     0,   781,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,   782,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   783,   322,   323,   324,   325,   784,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     785,   333,     0,     0,   786,   335,   787,   336,     0,   337,
     788,   789,   790,   791,   792,   342,   343,   344,   345,   346,
       0,   793,   347,   348,     0,     0,   349,   350,   351,   352,
     353,   794,     0,   796,   354,   355,     0,   797,   798,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,   799,   366,   367,   368,     0,   369,   370,   800,
     372,   373,   374,   375,   801,   802,   378,   803,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   804,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
     805,   806,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     807,     0,   808,   423,   424,   425,   426,   427,   428,   809,
     810,   431,   432,   433,   434,     0,   811,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,   812,
     813,   466,   467,     0,     0,   468,   469,   814,   471,   472,
     473,   815,   816,   474,   475,   476,   477,   817,   478,   479,
       0,     0,   480,   481,   482,   483,     0,   818,   484,   485,
       0,   819,   820,   821,   822,     0,     0,     0,     0,     0,
     490,   491,     0,   823,   824,   825,   493,   494,   495,   826,
     496,   497,   827,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   828,   506,     0,
       0,   829,   830,   831,   507,   832,   508,     0,     0,   509,
     833,     0,   834,   510,     0,   511,   512,   835,   836,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,     0,     0,   837,     0,     0,     0,   838,
     839,     0,     0,     0,     0,   841,   842,     0,     0,   843,
     844,     0,     0,   845,   846,   145,   146,     0,   740,   148,
     149,   150,   151,     0,     0,   152,   153,     0,     0,     0,
     154,     0,     0,   741,     0,   156,   157,   158,   159,   742,
     161,     0,   162,     0,     0,   743,   163,   744,   745,   746,
     164,   747,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,   748,   749,   172,   173,     0,   174,
     175,   750,   751,   177,     0,   178,   179,   180,   181,   752,
     183,     0,   753,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   754,   203,     0,   755,   756,   204,     0,
       0,   205,   757,   206,   758,     0,   207,   759,   760,     0,
     208,   209,   210,   761,   762,   763,     0,     0,     0,     0,
     764,   213,   765,     0,     0,   766,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,   767,     0,   241,   242,   243,   244,   245,   768,   769,
     246,   247,     0,   248,   249,   250,   251,   252,   770,     0,
     253,   254,     0,     0,     0,   771,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   772,   262,   773,     0,   264,
       0,   265,     0,   774,     0,   266,   267,     0,   268,   775,
       0,   269,   270,     0,     0,     0,   776,   272,   273,   274,
     777,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,   778,   279,   280,   281,  3049,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,   780,   292,   293,     0,     0,     0,     0,     0,   781,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
     782,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   783,
     322,   323,   324,   325,   784,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   785,   333,     0,     0,   786,
     335,   787,   336,     0,   337,   788,   789,   790,   791,   792,
     342,   343,   344,   345,   346,     0,   793,   347,   348,     0,
       0,   349,   350,   351,   352,   353,   794,   795,   796,   354,
     355,     0,   797,   798,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,   799,   366,   367,
     368,     0,   369,   370,   800,   372,   373,   374,   375,   801,
     802,   378,   803,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   804,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,   805,   806,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   807,     0,   808,   423,   424,
     425,   426,   427,   428,   809,   810,   431,   432,   433,   434,
       0,   811,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,   812,   813,   466,   467,     0,     0,
     468,   469,   814,   471,   472,   473,   815,   816,   474,   475,
     476,   477,   817,   478,   479,     0,     0,   480,   481,   482,
     483,     0,   818,   484,   485,     0,   819,   820,   821,   822,
       0,     0,     0,     0,     0,   490,   491,     0,   823,   824,
     825,   493,   494,   495,   826,   496,   497,   827,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   828,   506,     0,     0,   829,   830,   831,   507,
     832,   508,     0,     0,   509,   833,     0,   834,   510,     0,
     511,   512,   835,   836,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     837,     0,     0,     0,   838,   839,     0,     0,     0,     0,
     841,   842,     0,     0,   843,   844,     0,     0,   845,   846,
     145,   146,     0,   740,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   741,     0,
     156,   157,   158,   159,   742,   161,     0,   162,     0,     0,
     743,   163,   744,   745,   746,   164,   747,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,   748,
     749,   172,   173,     0,   174,   175,   750,   751,   177,     0,
     178,   179,   180,   181,   752,   183,     0,   753,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   754,   203,
       0,   755,   756,   204,     0,     0,   205,   757,   206,   758,
       0,   207,   759,   760,     0,   208,   209,   210,   761,   762,
     763,     0,     0,     0,     0,   764,   213,   765,     0,     0,
     766,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,   767,     0,   241,   242,
     243,   244,   245,   768,   769,   246,   247,     0,   248,   249,
     250,   251,   252,   770,     0,   253,   254,     0,     0,     0,
     771,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     772,   262,   773,     0,   264,     0,   265,     0,   774,     0,
     266,   267,     0,   268,   775,     0,   269,   270,     0,     0,
       0,   776,   272,   273,   274,   777,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,   778,   279,   280,   281,
    3096,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,   780,   292,   293,     0,
       0,     0,     0,     0,   781,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,   782,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   783,   322,   323,   324,   325,   784,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     785,   333,     0,     0,   786,   335,   787,   336,     0,   337,
     788,   789,   790,   791,   792,   342,   343,   344,   345,   346,
       0,   793,   347,   348,     0,     0,   349,   350,   351,   352,
     353,   794,   795,   796,   354,   355,     0,   797,   798,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,   799,   366,   367,   368,     0,   369,   370,   800,
     372,   373,   374,   375,   801,   802,   378,   803,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   804,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
     805,   806,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     807,     0,   808,   423,   424,   425,   426,   427,   428,   809,
     810,   431,   432,   433,   434,     0,   811,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,   812,
     813,   466,   467,     0,     0,   468,   469,   814,   471,   472,
     473,   815,   816,   474,   475,   476,   477,   817,   478,   479,
       0,     0,   480,   481,   482,   483,     0,   818,   484,   485,
       0,   819,   820,   821,   822,     0,     0,     0,     0,     0,
     490,   491,     0,   823,   824,   825,   493,   494,   495,   826,
     496,   497,   827,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   828,   506,     0,
       0,   829,   830,   831,   507,   832,   508,     0,     0,   509,
     833,     0,   834,   510,     0,   511,   512,   835,   836,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,     0,     0,   837,     0,     0,     0,   838,
     839,     0,     0,     0,     0,   841,   842,     0,     0,   843,
     844,     0,     0,   845,   846,   145,   146,     0,   740,   148,
     149,   150,   151,     0,     0,   152,   153,     0,     0,     0,
     154,     0,     0,   741,     0,   156,   157,   158,   159,   742,
     161,     0,   162,     0,     0,   743,   163,   744,   745,   746,
     164,   747,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,   748,   749,   172,   173,     0,   174,
     175,   750,   751,   177,     0,   178,   179,   180,   181,   752,
     183,     0,   753,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   754,   203,     0,   755,   756,   204,     0,
       0,   205,   757,   206,   758,     0,   207,   759,   760,     0,
     208,   209,   210,   761,   762,   763,     0,     0,     0,     0,
     764,   213,   765,     0,     0,  3599,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,   767,     0,   241,   242,   243,   244,   245,   768,   769,
     246,   247,     0,   248,   249,   250,   251,   252,   770,     0,
     253,   254,     0,     0,     0,   771,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   772,   262,   773,     0,   264,
       0,   265,     0,   774,     0,   266,   267,     0,   268,   775,
       0,   269,   270,     0,     0,     0,   776,   272,   273,   274,
     777,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,   778,   279,   280,   281,   779,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,   780,   292,   293,     0,     0,     0,     0,     0,   781,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
     782,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   783,
     322,   323,   324,   325,   784,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   785,   333,     0,     0,   786,
     335,   787,   336,     0,   337,   788,   789,   790,   791,   792,
     342,   343,   344,   345,   346,     0,   793,   347,   348,     0,
       0,   349,   350,   351,   352,   353,   794,   795,   796,   354,
     355,     0,   797,   798,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,   799,   366,   367,
     368,     0,   369,   370,   800,   372,   373,   374,   375,   801,
     802,   378,   803,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   804,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,   805,   806,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   807,     0,   808,   423,   424,
     425,   426,   427,   428,   809,   810,   431,   432,   433,   434,
       0,   811,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,   812,   813,   466,   467,     0,     0,
     468,   469,   814,   471,   472,   473,   815,   816,   474,   475,
     476,   477,   817,   478,   479,     0,     0,   480,   481,   482,
     483,     0,   818,   484,   485,     0,   819,   820,   821,   822,
       0,     0,     0,     0,     0,   490,   491,     0,   823,   824,
     825,   493,   494,   495,   826,   496,   497,   827,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   828,   506,     0,     0,   829,   830,   831,   507,
     832,   508,     0,     0,   509,   833,     0,   834,   510,     0,
     511,   512,   835,   836,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     837,     0,     0,     0,   838,   839,     0,     0,     0,     0,
     841,   842,     0,     0,   843,   844,     0,     0,   845,   846,
     145,   146,     0,   740,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   741,     0,
     156,   157,   158,   159,   742,   161,     0,   162,     0,     0,
     743,   163,   744,   745,   746,   164,   747,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,   748,
     749,   172,   173,     0,   174,   175,   750,   751,   177,     0,
     178,   179,   180,   181,   752,   183,     0,   753,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   754,   203,
       0,   755,   756,   204,     0,     0,   205,   757,   206,   758,
       0,   207,   759,   760,     0,   208,   209,   210,   761,   762,
     763,     0,     0,     0,     0,   764,   213,   765,     0,     0,
     766,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,   767,     0,   241,   242,
     243,   244,   245,   768,   769,   246,   247,     0,   248,   249,
     250,   251,   252,   770,     0,   253,   254,     0,     0,     0,
     771,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     772,   262,   773,     0,   264,     0,   265,     0,   774,     0,
     266,   267,     0,   268,   775,     0,   269,   270,     0,     0,
       0,   776,   272,   273,   274,   777,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,   778,   279,   280,   281,
     779,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,   780,   292,   293,     0,
       0,     0,     0,     0,   781,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,   782,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   783,   322,   323,   324,   325,   784,
     326,   327,  4541,     0,     0,     0,   328,   329,   330,   331,
     785,   333,     0,     0,   786,   335,   787,   336,     0,   337,
     788,   789,   790,   791,   792,   342,   343,   344,   345,   346,
       0,   793,   347,   348,     0,     0,   349,   350,   351,   352,
     353,   794,     0,   796,   354,   355,     0,   797,   798,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,   799,   366,   367,   368,     0,   369,   370,   800,
     372,   373,   374,   375,   801,   802,   378,   803,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   804,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
     805,   806,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     807,     0,   808,   423,   424,   425,   426,   427,   428,   809,
     810,   431,   432,   433,   434,     0,   811,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,   812,
     813,   466,   467,     0,     0,   468,   469,   814,   471,   472,
     473,   815,   816,   474,   475,   476,   477,   817,   478,   479,
       0,     0,   480,   481,   482,   483,     0,   818,   484,   485,
       0,   819,   820,   821,   822,     0,     0,     0,     0,     0,
     490,   491,     0,   823,   824,   825,   493,   494,   495,   826,
     496,   497,   827,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   828,   506,     0,
       0,   829,   830,   831,   507,   832,   508,     0,     0,   509,
     833,     0,   834,   510,     0,   511,   512,   835,   836,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,     0,     0,   837,     0,     0,     0,   838,
     839,     0,     0,     0,     0,   841,   842,     0,     0,   843,
     844,     0,     0,   845,   846,   145,   146,     0,   740,   148,
     149,   150,   151,     0,     0,   152,   153,     0,     0,     0,
     154,     0,     0,   741,     0,   156,   157,   158,   159,   742,
     161,     0,   162,     0,     0,   743,   163,   744,   745,   746,
     164,   747,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,   748,   749,   172,   173,     0,   174,
     175,   750,   751,   177,     0,   178,   179,   180,   181,   752,
     183,     0,   753,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   754,   203,     0,   755,   756,   204,     0,
       0,   205,   757,   206,   758,     0,   207,   759,   760,     0,
     208,   209,   210,   761,   762,   763,     0,     0,     0,     0,
     764,   213,   765,     0,     0,   766,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,   767,     0,   241,   242,   243,   244,   245,   768,   769,
     246,   247,     0,   248,   249,   250,   251,   252,   770,     0,
     253,   254,     0,     0,     0,   771,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   772,   262,   773,     0,   264,
       0,   265,     0,   774,     0,   266,   267,     0,   268,   775,
       0,   269,   270,     0,     0,     0,   776,   272,   273,   274,
     777,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,   778,   279,   280,   281,   779,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,   780,   292,   293,     0,     0,     0,     0,     0,   781,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
     782,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   783,
     322,   323,   324,   325,   784,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   785,   333,     0,     0,   786,
     335,   787,   336,     0,   337,   788,   789,   790,   791,   792,
     342,   343,   344,   345,   346,     0,   793,   347,   348,     0,
       0,   349,   350,   351,   352,   353,   794,     0,   796,   354,
     355,     0,   797,   798,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,   799,   366,   367,
     368,     0,   369,   370,   800,   372,   373,   374,   375,   801,
     802,   378,   803,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   804,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,   805,   806,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   807,     0,   808,   423,   424,
     425,   426,   427,   428,   809,   810,   431,   432,   433,   434,
       0,   811,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,   812,   813,   466,   467,     0,     0,
     468,   469,   814,   471,   472,   473,   815,   816,   474,   475,
     476,   477,   817,   478,   479,     0,     0,   480,   481,   482,
     483,     0,   818,   484,   485,     0,   819,   820,   821,   822,
       0,     0,     0,     0,     0,   490,   491,     0,   823,   824,
     825,   493,   494,   495,   826,   496,   497,   827,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   828,   506,     0,     0,   829,   830,   831,   507,
     832,   508,     0,     0,   509,   833,     0,   834,   510,     0,
     511,   512,   835,   836,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     837,     0,     0,     0,   838,   839,     0,     0,     0,     0,
     841,   842,     0,     0,   843,   844,     0,     0,   845,   846,
     145,   146,     0,   740,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   741,     0,
     156,   157,   158,   159,   742,   161,     0,   162,     0,     0,
     743,   163,   744,   745,   746,   164,   747,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,   748,
     749,   172,   173,     0,   174,   175,   750,   751,   177,     0,
     178,   179,   180,   181,   752,   183,     0,   753,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   754,   203,
       0,   755,   756,   204,     0,     0,   205,   757,   206,   758,
       0,   207,   759,   760,     0,   208,   209,   210,   761,   762,
     763,     0,     0,     0,     0,   764,   213,   765,     0,     0,
     766,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,   767,     0,   241,   242,
     243,   244,   245,   768,   769,   246,   247,     0,   248,   249,
     250,   251,   252,   770,     0,   253,   254,     0,     0,     0,
     771,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     772,   262,   773,     0,   264,     0,   265,     0,   774,     0,
     266,   267,     0,   268,   775,     0,   269,   270,     0,     0,
       0,   776,   272,   273,   274,   777,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,   778,   279,   280,   281,
    1981,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,   780,   292,   293,     0,
       0,     0,     0,     0,   781,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,   782,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   783,   322,   323,   324,   325,   784,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     785,   333,     0,     0,   786,   335,   787,   336,     0,   337,
     788,   789,   790,   791,   792,   342,   343,   344,   345,   346,
       0,   793,   347,   348,     0,     0,   349,   350,   351,   352,
     353,   794,     0,   796,   354,   355,     0,   797,   798,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,   799,   366,   367,   368,     0,   369,   370,   800,
     372,   373,   374,   375,   801,   802,   378,   803,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   804,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
     805,   806,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     807,     0,   808,   423,   424,   425,   426,   427,   428,   809,
     810,   431,   432,   433,   434,     0,   811,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,   812,
     813,   466,   467,     0,     0,   468,   469,   814,   471,   472,
     473,   815,   816,   474,   475,   476,   477,   817,   478,   479,
       0,     0,   480,   481,   482,   483,     0,   818,   484,   485,
       0,   819,   820,   821,   822,     0,     0,     0,     0,     0,
     490,   491,     0,   823,   824,   825,   493,   494,   495,   826,
     496,   497,   827,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   828,   506,     0,
       0,   829,   830,   831,   507,   832,   508,     0,     0,   509,
     833,     0,   834,   510,     0,   511,   512,   835,   836,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,     0,     0,   837,     0,     0,     0,   838,
     839,     0,     0,     0,     0,   841,   842,     0,     0,   843,
     844,     0,     0,   845,   846,   145,   146,     0,   740,   148,
     149,   150,   151,     0,     0,   152,   153,     0,     0,     0,
     154,     0,     0,   741,     0,   156,   157,   158,   159,   742,
     161,     0,   162,     0,     0,   743,   163,   744,   745,   746,
     164,   747,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,   748,   749,   172,   173,     0,   174,
     175,   750,   751,   177,     0,   178,   179,   180,   181,   752,
     183,     0,   753,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   754,   203,     0,   755,   756,   204,     0,
       0,   205,   757,   206,   758,     0,   207,   759,   760,     0,
     208,   209,   210,   761,   762,   763,     0,     0,     0,     0,
     764,   213,   765,     0,     0,   766,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,   767,     0,   241,   242,   243,   244,   245,   768,   769,
     246,   247,     0,   248,   249,   250,   251,   252,   770,     0,
     253,   254,     0,     0,     0,   771,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   772,   262,   773,     0,   264,
       0,   265,     0,   774,     0,   266,   267,     0,   268,   775,
       0,   269,   270,     0,     0,     0,   776,   272,   273,   274,
     777,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,   778,   279,   280,   281,  1983,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,   780,   292,   293,     0,     0,     0,     0,     0,   781,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
     782,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   783,
     322,   323,   324,   325,   784,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   785,   333,     0,     0,   786,
     335,   787,   336,     0,   337,   788,   789,   790,   791,   792,
     342,   343,   344,   345,   346,     0,   793,   347,   348,     0,
       0,   349,   350,   351,   352,   353,   794,     0,   796,   354,
     355,     0,   797,   798,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,   799,   366,   367,
     368,     0,   369,   370,   800,   372,   373,   374,   375,   801,
     802,   378,   803,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   804,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,   805,   806,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   807,     0,   808,   423,   424,
     425,   426,   427,   428,   809,   810,   431,   432,   433,   434,
       0,   811,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,   812,   813,   466,   467,     0,     0,
     468,   469,   814,   471,   472,   473,   815,   816,   474,   475,
     476,   477,   817,   478,   479,     0,     0,   480,   481,   482,
     483,     0,   818,   484,   485,     0,   819,   820,   821,   822,
       0,     0,     0,     0,     0,   490,   491,     0,   823,   824,
     825,   493,   494,   495,   826,   496,   497,   827,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   828,   506,     0,     0,   829,   830,   831,   507,
     832,   508,     0,     0,   509,   833,     0,   834,   510,     0,
     511,   512,   835,   836,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     837,     0,     0,     0,   838,   839,     0,     0,     0,     0,
     841,   842,     0,     0,   843,   844,     0,     0,   845,   846,
     145,   146,     0,   147,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,     0,     0,
       0,   163,   744,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,     0,
       0,   172,   173,     0,   174,   175,   176,     0,   177,     0,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
    2024,     0,     0,     0,     0,   212,   213,   765,     0,     0,
       0,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,     0,     0,   241,   242,
     243,   244,   245,     0,   769,   246,   247,     0,   248,   249,
     250,   251,   252,   770,     0,   253,   254,     0,     0,     0,
     255,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     266,   267,     0,   268,   775,     0,   269,   270,     0,     0,
       0,   271,   272,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,   281,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,     0,   292,   293,     0,
       0,     0,     0,     0,   294,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,   782,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,     0,   322,   323,   324,   325,     0,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,   337,
       0,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   793,   347,   348,     0,     0,   349,   350,   351,   352,
     353,     0,     0,     0,   354,   355,     0,   797,   798,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,     0,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,     0,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     422,     0,     0,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,     0,
       0,   466,   467,     0,     0,   468,   469,   470,   471,   472,
     473,     0,     0,   474,   475,   476,   477,     0,   478,   479,
       0,     0,   480,   481,   482,   483,     0,   818,   484,   485,
       0,  2025,   487,   488,  2026,     0,     0,     0,     0,     0,
     490,   491,     0,     0,   824,   492,   493,   494,   495,   826,
     496,   497,   827,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,     0,
       0,     0,     0,     0,   507,     0,   508,     0,     0,   509,
       0,     0,     0,   510,     0,   511,   512,   513,   514,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,     0,     0,   522,     0,   145,   146,     0,
     147,   148,   149,   150,   151,     0,     0,   152,   153,     0,
       0,     0,   154,   845,   846,   155,     0,   156,   157,   158,
     159,   160,   161,     0,   162,     0,     0,     0,   163,     0,
       0,     0,   164,     0,     0,   165,   166,   167,     0,   168,
       0,   169,   170,     0,     0,   171,     0,     0,   172,   173,
       0,   174,   175,   176,     0,   177,     0,   178,   179,   180,
     181,   182,   183,     0,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,   197,
     198,  2306,   199,   200,   201,   202,   203,     0,     0,     0,
     204,     0,     0,   205,     0,   206,     0,     0,   207,     0,
       0,     0,   208,   209,   210,     0,     0,   211,     0,     0,
       0,     0,   212,   213,     0,     0,     0,     0,   214,   215,
       0,   216,     0,     0,     0,   217,     0,   218,   219,   220,
     221,   222,     0,     0,     0,   223,     0,     0,   224,   225,
     226,     0,     0,     0,   227,     0,   228,   229,     0,   230,
     231,   232,     0,     0,   233,   234,     0,   235,   236,   237,
     238,   239,   240,     0,     0,   241,   242,   243,   244,   245,
       0,     0,   246,   247,     0,   248,   249,   250,   251,   252,
       0,     0,   253,   254,     0,     0,     0,   255,   256,     0,
     257,   537,   258,     0,   259,     0,   260,   261,   262,   263,
       0,   264,     0,   265,     0,     0,     0,   266,   267,     0,
     268,     0,     0,   269,   270,     0,     0,     0,   271,   272,
     273,   274,     0,     0,   275,   276,   277,  1738,     0,   278,
       0,     0,     0,     0,   279,   280,   281,     0,     0,     0,
     282,     0,     0,     0,   283,   284,     0,   285,   286,     0,
       0,     0,   287,     0,   288,  1739,     0,   289,   290,     0,
       0,   291,     0,     0,   292,   293,     0,  3434,     0,     0,
       0,   294,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,     0,     0,     0,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,     0,   322,   323,   324,   325,     0,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,     0,   347,
     348,     0,     0,   349,   350,   351,   352,   353,     0,     0,
       0,   354,   355,     0,     0,     0,   356,     0,   357,   358,
       0,   359,   360,   361,     0,     0,   362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,   364,   365,     0,
     366,   367,   368,  2379,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,     0,   380,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,   404,     0,   405,   406,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,     0,
     417,   418,     0,   419,   420,   421,     0,   422,     0,     0,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,  -517,     0,     0,   437,   438,
     439,   440,     0,     0,     0,   441,     0,     0,     0,   442,
       0,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,   540,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,   461,   462,   463,   464,   465,     0,     0,   466,   467,
       0,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,     0,   480,
     481,   482,   483,     0,     0,   484,   485,     0,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,     0,
       0,     0,   492,   493,   494,   495,     0,   496,   497,     0,
     498,   499,     0,   500,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,     0,     0,     0,     0,
       0,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   511,   512,   513,   514,     0,     0,     0,     0,
       0,     0,   515,   516,   517,     0,   518,   519,   520,   521,
       0,     0,   522,     0,   145,   146,     0,   147,   148,   149,
     150,   151,     0,     0,   152,   153,     0,     0,     0,   154,
       0,  2386,   155,     0,   156,   157,   158,   159,   160,   161,
       0,   162,     0,     0,     0,   163,     0,     0,     0,   164,
       0,     0,   165,   166,   167,     0,   168,     0,   169,   170,
       0,     0,   171,     0,     0,   172,   173,     0,   174,   175,
     176,     0,   177,     0,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,  2306,   199,
     200,   201,   202,   203,     0,     0,     0,   204,     0,     0,
     205,     0,   206,     0,     0,   207,     0,     0,     0,   208,
     209,   210,     0,     0,   211,     0,     0,     0,     0,   212,
     213,     0,     0,     0,     0,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,   223,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,   228,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,   240,
       0,     0,   241,   242,   243,   244,   245,     0,     0,   246,
     247,     0,   248,   249,   250,   251,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,     0,   257,   537,   258,
       0,   259,     0,   260,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,   266,   267,     0,   268,     0,     0,
     269,   270,     0,     0,     0,   271,   272,   273,   274,     0,
       0,   275,   276,   277,  1738,     0,   278,     0,     0,     0,
       0,   279,   280,   281,     0,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,     0,     0,     0,   287,
       0,   288,  1739,     0,   289,   290,     0,     0,   291,     0,
       0,   292,   293,     0,     0,     0,     0,     0,   294,   295,
       0,   296,     0,   297,     0,   298,   299,     0,     0,     0,
       0,     0,     0,     0,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,     0,   322,
     323,   324,   325,     0,   326,   327,     0,     0,     0,     0,
     328,   329,   330,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,   337,     0,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,     0,   347,   348,     0,     0,
     349,   350,   351,   352,   353,     0,     0,     0,   354,   355,
       0,     0,     0,   356,     0,   357,   358,     0,   359,   360,
     361,     0,     0,   362,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   363,   364,   365,     0,   366,   367,   368,
       0,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   379,     0,   380,   381,   382,     0,   383,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,     0,
       0,   392,     0,     0,     0,   393,   394,   395,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,   403,   404,
       0,   405,   406,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,     0,   417,   418,     0,
     419,   420,   421,     0,   422,     0,     0,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,     0,     0,     0,   437,   438,   439,   440,     0,
       0,     0,   441,     0,     0,     0,   442,     0,   443,   444,
     445,   446,     0,   447,   448,   449,   450,   451,   540,     0,
       0,     0,     0,   452,   453,   454,     0,   455,   456,     0,
     457,     0,     0,   458,     0,   459,     0,   460,   461,   462,
     463,   464,   465,     0,     0,   466,   467,     0,     0,   468,
     469,   470,   471,   472,   473,     0,     0,   474,   475,   476,
     477,     0,   478,   479,     0,     0,   480,   481,   482,   483,
       0,     0,   484,   485,     0,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,     0,     0,     0,   492,
     493,   494,   495,     0,   496,   497,     0,   498,   499,     0,
     500,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,     0,     0,     0,     0,     0,   507,     0,
     508,     0,     0,   509,     0,     0,     0,   510,     0,   511,
     512,   513,   514,     0,     0,     0,     0,     0,     0,   515,
     516,   517,     0,   518,   519,   520,   521,     0,     0,   522,
       0,   145,   146,     0,   147,   148,   149,   150,   151,     0,
       0,   152,   153,     0,     0,     0,   154,     0,  2386,   155,
       0,   156,   157,   158,   159,   160,   161,     0,   162,     0,
       0,     0,   163,     0,     0,     0,   164,     0,     0,   165,
     166,   167,     0,   168,     0,   169,   170,     0,     0,   171,
       0,     0,   172,   173,     0,   174,   175,   176,     0,   177,
       0,   178,   179,   180,   181,   182,   183,     0,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,   197,   198,     0,   199,   200,   201,   202,
     203,     0,     0,     0,   204,     0,     0,   205,     0,   206,
       0,     0,   207,     0,     0,     0,   208,   209,   210,     0,
       0,   211,     0,     0,     0,     0,   212,   213,     0,     0,
       0,     0,   214,   215,     0,   216,     0,     0,     0,   217,
       0,   218,   219,   220,   221,   222,     0,     0,     0,   223,
       0,  2117,   224,   225,   226,     0,     0,     0,   227,     0,
     228,   229,     0,   230,   231,   232,     0,     0,   233,   234,
       0,   235,   236,   237,   238,   239,   240,     0,     0,   241,
     242,   243,   244,   245,     0,     0,   246,   247,     0,   248,
     249,   250,   251,   252,     0,     0,   253,   254,     0,     0,
       0,   255,   256,     0,   257,     0,   258,     0,   259,     0,
     260,   261,   262,   263,     0,   264,     0,   265,     0,     0,
       0,   266,   267,     0,   268,     0,     0,   269,   270,     0,
       0,     0,   271,   272,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,     0,     0,     0,     0,   279,   280,
     281,     0,     0,     0,   282,     0,     0,     0,   283,   284,
       0,   285,   286,     0,     0,     0,   287,     0,   288,     0,
       0,   289,   290,     0,     0,   291,     0,     0,   292,   293,
       0,     0,     0,     0,     0,   294,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,     0,     0,     0,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,     0,   322,   323,   324,   325,
       0,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,     0,   347,   348,     0,     0,   349,   350,   351,
     352,   353,     0,     0,     0,   354,   355,     0,     0,     0,
     356,     0,   357,   358,     0,   359,   360,   361,     0,     0,
     362,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     363,   364,   365,     0,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
       0,   380,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,   404,     0,   405,   406,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,     0,   417,   418,     0,   419,   420,   421,
       0,   422,     0,     0,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,  1576,
       0,     0,   437,   438,   439,   440,     0,     0,     0,   441,
       0,     0,     0,   442,     0,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,   461,   462,   463,   464,   465,
       0,     0,   466,   467,     0,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,     0,   480,   481,   482,   483,     0,     0,   484,
     485,     0,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,     0,     0,     0,   492,   493,   494,   495,
       0,   496,   497,     0,   498,   499,     0,   500,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
       0,     0,     0,     0,     0,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,     0,   511,   512,   513,   514,
       0,     0,     0,     0,     0,     0,   515,   516,   517,     0,
     518,   519,   520,   521,     0,     0,   522,     0,   145,   146,
       0,   147,   148,   149,   150,   151,     0,  1577,   152,   153,
       0,  1578,     0,   154,     0,   578,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,     0,     0,     0,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,     0,     0,   172,
     173,     0,   174,   175,   176,     0,   177,     0,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,     0,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,   213,     0,     0,     0,     0,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,     0,   248,   249,   250,   251,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
       0,   257,     0,   258,     0,   259,     0,   260,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,   266,   267,
       0,   268,     0,     0,   269,   270,     0,     0,     0,   271,
     272,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,   281,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,   287,     0,   288,     0,     0,   289,   290,
       0,     0,   291,     0,     0,   292,   293,     0,     0,     0,
       0,     0,   294,   295,     0,   296,     0,   297,     0,   298,
     299,     0,     0,     0,     0,     0,     0,     0,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,     0,   322,   323,   324,   325,     0,   326,   327,
       0,     0,     0,     0,   328,   329,   330,   331,   332,   333,
       0,     0,   334,   335,     0,   336,     0,   337,     0,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,     0,
     347,   348,     0,     0,   349,   350,   351,   352,   353,     0,
       0,     0,   354,   355,     0,     0,     0,   356,     0,   357,
     358,     0,   359,   360,   361,     0,     0,   362,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   363,   364,   365,
       0,   366,   367,   368,     0,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,     0,   379,     0,   380,   381,
     382,     0,   383,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,     0,     0,   392,     0,     0,     0,   393,
     394,   395,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,   403,   404,     0,   405,   406,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   414,   415,     0,   416,
       0,   417,   418,     0,   419,   420,   421,     0,   422,     0,
       0,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,     0,   435,   436,  1576,     0,     0,   437,
     438,   439,   440,     0,     0,     0,   441,     0,     0,     0,
     442,     0,   443,   444,   445,   446,     0,   447,   448,   449,
     450,   451,     0,     0,     0,     0,     0,   452,   453,   454,
       0,   455,   456,     0,   457,     0,     0,   458,     0,   459,
       0,   460,   461,   462,   463,   464,   465,     0,     0,   466,
     467,     0,     0,   468,   469,   470,   471,   472,   473,     0,
       0,   474,   475,   476,   477,     0,   478,   479,     0,     0,
     480,   481,   482,   483,     0,     0,   484,   485,     0,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
       0,     0,     0,   492,   493,   494,   495,     0,   496,   497,
       0,   498,   499,     0,   500,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,     0,     0,     0,
       0,     0,   507,     0,   508,     0,     0,   509,     0,     0,
       0,   510,     0,   511,   512,   513,   514,     0,     0,     0,
       0,     0,     0,   515,   516,   517,     0,   518,   519,   520,
     521,     0,     0,   522,     0,   145,   146,     0,   147,   148,
     149,   150,   151,     0,  1577,   152,   153,     0,  1578,     0,
     154,     0,   578,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,     0,     0,     0,   163,     0,     0,     0,
     164,     0,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,     0,     0,   172,   173,     0,   174,
     175,   176,     0,   177,     0,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   202,   203,     0,     0,     0,   204,     0,
       0,   205,     0,   206,     0,     0,   207,     0,     0,     0,
     208,   209,   210,     0,     0,   211,     0,     0,     0,     0,
     212,   213,     0,     0,     0,     0,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,     0,     0,   241,   242,   243,   244,   245,     0,     0,
     246,   247,     0,   248,   249,   250,   251,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,   266,   267,     0,   268,     0,
       0,   269,   270,     0,     0,     0,   271,   272,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,     0,   279,   280,   281,     0,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,     0,   292,   293,     0,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,     0,   347,   348,     0,
       0,   349,   350,   351,   352,   353,     0,     0,     0,   354,
     355,     0,     0,     0,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,     0,   366,   367,
     368,     0,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   422,     0,     0,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,  1576,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,     0,     0,   466,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,     0,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
     492,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     522,     0,   145,   146,     0,   147,   148,   149,   150,   151,
       0,  1577,   152,   153,     0,     0,     0,   154,     0,   578,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   176,     0,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,     0,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,   266,   267,     0,   268,     0,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,   287,     0,   288,
       0,     0,   289,   290,     0,     0,   291,     0,     0,   292,
     293,     0,     0,     0,     0,     0,   294,   295,     0,   296,
       0,   297,     0,   298,   299,     0,     0,     0,     0,     0,
       0,     0,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,     0,   322,   323,   324,
     325,     0,   326,   327,     0,     0,     0,     0,   328,   329,
     330,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,   337,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,     0,   347,   348,     0,     0,   349,   350,
     351,   352,   353,     0,     0,     0,   354,   355,     0,     0,
       0,   356,     0,   357,   358,     0,   359,   360,   361,     0,
       0,   362,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   363,   364,   365,     0,   366,   367,   368,     0,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,     0,   380,   381,   382,     0,   383,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,     0,     0,   392,
       0,     0,     0,   393,   394,   395,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,   403,   404,     0,   405,
     406,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,     0,   416,     0,   417,   418,     0,   419,   420,
     421,     0,   422,     0,     0,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
    2705,     0,     0,   437,   438,   439,   440,     0,     0,     0,
     441,     0,     0,     0,   442,     0,   443,   444,   445,   446,
       0,   447,   448,   449,   450,   451,     0,     0,     0,     0,
       0,   452,   453,   454,     0,   455,   456,     0,   457,     0,
       0,   458,     0,   459,     0,   460,   461,   462,   463,   464,
     465,     0,     0,   466,   467,     0,     0,   468,   469,   470,
     471,   472,   473,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,     0,   480,   481,   482,   483,     0,     0,
     484,   485,     0,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,     0,     0,     0,   492,   493,   494,
     495,     0,   496,   497,     0,   498,   499,     0,   500,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,     0,     0,     0,     0,     0,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   511,   512,   513,
     514,     0,     0,     0,     0,     0,     0,   515,   516,   517,
       0,   518,   519,   520,   521,     0,     0,   522,     0,     0,
     145,   146,     0,   147,   148,   149,   150,   151,     0,  3196,
     152,   153,     0,     0,     0,   154,   846,     0,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,     0,     0,
       0,   163,     0,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,     0,
       0,   172,   173,     0,   174,   175,   176,     0,   177,     0,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
     211,     0,     0,     0,     0,   212,   213,     0,     0,     0,
       0,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,     0,     0,   241,   242,
     243,   244,   245,     0,     0,   246,   247,     0,   248,   249,
     250,   251,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     266,   267,     0,   268,     0,     0,   269,   270,     0,     0,
       0,   271,   272,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,   281,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,     0,   292,   293,     0,
       0,     0,     0,     0,   294,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,     0,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,     0,   322,   323,   324,   325,     0,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,   337,
       0,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,     0,   347,   348,     0,     0,   349,   350,   351,   352,
     353,     0,     0,     0,   354,   355,     0,     0,     0,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,     0,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,     0,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     422,     0,     0,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,     0,
       0,   466,   467,     0,     0,   468,   469,   470,   471,   472,
     473,     0,     0,   474,   475,   476,   477,     0,   478,   479,
       0,     0,   480,   481,   482,   483,     0,     0,   484,   485,
       0,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,     0,     0,     0,   492,   493,   494,   495,     0,
     496,   497,     0,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,     0,
       0,     0,     0,     0,   507,     0,   508,     0,     0,   509,
       0,     0,     0,   510,     0,   511,   512,   513,   514,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,     0,     0,   522,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   145,   146,  4648,   147,   148,
     149,   150,   151,  4649,   846,   152,   153,     0,     0,     0,
     154,     0,     0,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,     0,     0,     0,   163,     0,     0,     0,
     164,     0,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,     0,     0,   172,   173,     0,   174,
     175,   176,     0,   177,     0,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   202,   203,     0,     0,     0,   204,     0,
       0,   205,     0,   206,     0,     0,   207,     0,     0,     0,
     208,   209,   210,     0,     0,   211,     0,     0,     0,     0,
     212,   213,     0,     0,     0,     0,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,     0,     0,   241,   242,   243,   244,   245,     0,     0,
     246,   247,     0,   248,   249,   250,   251,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,   266,   267,     0,   268,     0,
       0,   269,   270,     0,     0,     0,   271,   272,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,     0,   279,   280,   281,     0,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,     0,   292,   293,     0,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,     0,   347,   348,     0,
       0,   349,   350,   351,   352,   353,     0,     0,     0,   354,
     355,     0,     0,     0,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,     0,   366,   367,
     368,     0,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   422,     0,     0,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,     0,     0,   466,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,     0,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
     492,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     522,     0,   145,   146,     0,   147,   148,   149,   150,   151,
       0,  1212,   152,   153,     0,     0,     0,   154,     0,   846,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   176,     0,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,     0,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,   266,   267,     0,   268,     0,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,   287,     0,   288,
       0,     0,   289,   290,     0,     0,   291,     0,     0,   292,
     293,     0,     0,     0,     0,     0,   294,   295,     0,   296,
       0,   297,     0,   298,   299,     0,     0,     0,     0,     0,
       0,     0,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,     0,   322,   323,   324,
     325,     0,   326,   327,     0,     0,     0,     0,   328,   329,
     330,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,   337,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,     0,   347,   348,     0,     0,   349,   350,
     351,   352,   353,     0,     0,     0,   354,   355,     0,     0,
       0,   356,     0,   357,   358,     0,   359,   360,   361,     0,
       0,   362,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   363,   364,   365,     0,   366,   367,   368,     0,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,     0,   380,   381,   382,     0,   383,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,     0,     0,   392,
       0,     0,     0,   393,   394,   395,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,   403,   404,     0,   405,
     406,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,     0,   416,     0,   417,   418,     0,   419,   420,
     421,     0,   422,     0,     0,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
       0,     0,     0,   437,   438,   439,   440,     0,     0,     0,
     441,     0,     0,     0,   442,     0,   443,   444,   445,   446,
       0,   447,   448,   449,   450,   451,     0,     0,     0,     0,
       0,   452,   453,   454,     0,   455,   456,     0,   457,     0,
       0,   458,     0,   459,     0,   460,   461,   462,   463,   464,
     465,     0,     0,   466,   467,     0,     0,   468,   469,   470,
     471,   472,   473,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,     0,   480,   481,   482,   483,     0,     0,
     484,   485,     0,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,     0,     0,     0,   492,   493,   494,
     495,     0,   496,   497,     0,   498,   499,     0,   500,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,     0,     0,     0,     0,     0,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   511,   512,   513,
     514,     0,     0,     0,     0,     0,     0,   515,   516,   517,
       0,   518,   519,   520,   521,     0,     0,   522,     0,   145,
     146,     0,   147,   148,   149,   150,   151,     0,  2385,   152,
     153,     0,     0,     0,   154,     0,  2386,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,     0,     0,     0,
     163,     0,     0,     0,   164,     0,     0,   165,   166,   167,
       0,   168,     0,   169,   170,     0,     0,   171,     0,     0,
     172,   173,     0,   174,   175,   176,     0,   177,     0,   178,
     179,   180,   181,   182,   183,     0,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,   197,   198,     0,   199,   200,   201,   202,   203,     0,
       0,     0,   204,     0,     0,   205,     0,   206,     0,     0,
     207,     0,     0,     0,   208,   209,   210,     0,     0,   211,
       0,     0,     0,     0,   212,   213,     0,     0,     0,     0,
     214,   215,     0,   216,     0,     0,     0,   217,     0,   218,
     219,   220,   221,   222,     0,     0,     0,   223,     0,     0,
     224,   225,   226,     0,     0,     0,   227,     0,   228,   229,
       0,   230,   231,   232,     0,     0,   233,   234,     0,   235,
     236,   237,   238,   239,   240,     0,     0,   241,   242,   243,
     244,   245,     0,     0,   246,   247,     0,   248,   249,   250,
     251,   252,     0,     0,   253,   254,     0,     0,     0,   255,
     256,     0,   257,     0,   258,     0,   259,     0,   260,   261,
     262,   263,     0,   264,     0,   265,     0,     0,     0,   266,
     267,     0,   268,     0,     0,   269,   270,     0,     0,     0,
     271,   272,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,     0,     0,     0,     0,   279,   280,   281,     0,
       0,     0,   282,     0,     0,     0,   283,   284,     0,   285,
     286,     0,     0,     0,   287,     0,   288,     0,     0,   289,
     290,     0,     0,   291,     0,     0,   292,   293,     0,     0,
       0,     0,     0,   294,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,     0,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,     0,   322,   323,   324,   325,     0,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
       0,   347,   348,     0,     0,   349,   350,   351,   352,   353,
       0,     0,     0,   354,   355,     0,     0,     0,   356,     0,
     357,   358,     0,   359,   360,   361,     0,     0,   362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   363,   364,
     365,     0,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,     0,   380,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,   404,     0,   405,   406,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,     0,   417,   418,     0,   419,   420,   421,     0,   422,
       0,     0,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,     0,     0,     0,
     437,   438,   439,   440,     0,     0,     0,   441,     0,     0,
       0,   442,     0,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,   461,   462,   463,   464,   465,     0,     0,
     466,   467,     0,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
       0,   480,   481,   482,   483,     0,     0,   484,   485,     0,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,     0,     0,     0,   492,   493,   494,   495,     0,   496,
     497,     0,   498,   499,     0,   500,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,     0,     0,
       0,     0,     0,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,     0,   511,   512,   513,   514,     0,     0,
       0,     0,     0,     0,   515,   516,   517,     0,   518,   519,
     520,   521,     0,     0,   522,     0,     0,     0,     0,     0,
    3164,   145,   146,     0,   147,   148,   149,   150,   151,     0,
       0,   152,   153,   578,     0,     0,   154,     0,     0,   155,
       0,   156,   157,   158,   159,   160,   161,     0,   162,     0,
       0,     0,   163,     0,     0,     0,   164,     0,     0,   165,
     166,   167,     0,   168,     0,   169,   170,     0,     0,   171,
       0,     0,   172,   173,     0,   174,   175,   176,     0,   177,
       0,   178,   179,   180,   181,   182,   183,     0,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,   197,   198,     0,   199,   200,   201,   202,
     203,     0,     0,     0,   204,     0,     0,   205,     0,   206,
       0,     0,   207,     0,     0,     0,   208,   209,   210,     0,
       0,   211,     0,     0,     0,     0,   212,   213,     0,     0,
       0,     0,   214,   215,     0,   216,     0,     0,     0,   217,
       0,   218,   219,   220,   221,   222,     0,     0,     0,   223,
       0,     0,   224,   225,   226,     0,     0,     0,   227,     0,
     228,   229,     0,   230,   231,   232,     0,     0,   233,   234,
       0,   235,   236,   237,   238,   239,   240,     0,     0,   241,
     242,   243,   244,   245,     0,     0,   246,   247,     0,   248,
     249,   250,   251,   252,     0,     0,   253,   254,     0,     0,
       0,   255,   256,     0,   257,     0,   258,     0,   259,     0,
     260,   261,   262,   263,     0,   264,     0,   265,     0,     0,
       0,   266,   267,     0,   268,     0,     0,   269,   270,     0,
       0,     0,   271,   272,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,     0,     0,     0,     0,   279,   280,
     281,     0,     0,     0,   282,     0,     0,     0,   283,   284,
       0,   285,   286,     0,     0,     0,   287,     0,   288,     0,
       0,   289,   290,     0,     0,   291,     0,     0,   292,   293,
       0,     0,     0,     0,     0,   294,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,     0,     0,     0,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,     0,   322,   323,   324,   325,
       0,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,     0,   347,   348,     0,     0,   349,   350,   351,
     352,   353,     0,     0,     0,   354,   355,     0,     0,     0,
     356,     0,   357,   358,     0,   359,   360,   361,     0,     0,
     362,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     363,   364,   365,     0,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
       0,   380,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,   404,     0,   405,   406,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,     0,   417,   418,     0,   419,   420,   421,
       0,   422,     0,     0,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,     0,
       0,     0,   437,   438,   439,   440,     0,     0,     0,   441,
       0,     0,     0,   442,     0,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,   461,   462,   463,   464,   465,
       0,     0,   466,   467,     0,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,     0,   480,   481,   482,   483,     0,     0,   484,
     485,     0,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,     0,     0,     0,   492,   493,   494,   495,
       0,   496,   497,     0,   498,   499,     0,   500,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
       0,     0,     0,     0,     0,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,     0,   511,   512,   513,   514,
       0,     0,     0,     0,     0,     0,   515,   516,   517,     0,
     518,   519,   520,   521,     0,     0,   522,     0,   145,   146,
       0,   147,   148,   149,   150,   151,     0,     0,   152,   153,
       0,     0,     0,   154,  4649,   846,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,     0,     0,     0,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,     0,     0,   172,
     173,     0,   174,   175,   176,     0,   177,     0,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,     0,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,   213,     0,     0,     0,     0,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,     0,   248,   249,   250,   251,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
       0,   257,     0,   258,     0,   259,     0,   260,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,   266,   267,
       0,   268,     0,     0,   269,   270,     0,     0,     0,   271,
     272,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,   281,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,   287,     0,   288,     0,     0,   289,   290,
       0,     0,   291,     0,     0,   292,   293,     0,     0,     0,
       0,     0,   294,   295,     0,   296,     0,   297,     0,   298,
     299,     0,     0,     0,     0,     0,     0,     0,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,     0,   322,   323,   324,   325,     0,   326,   327,
       0,     0,     0,     0,   328,   329,   330,   331,   332,   333,
       0,     0,   334,   335,     0,   336,     0,   337,     0,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,     0,
     347,   348,     0,     0,   349,   350,   351,   352,   353,     0,
       0,     0,   354,   355,     0,     0,     0,   356,     0,   357,
     358,     0,   359,   360,   361,     0,     0,   362,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   363,   364,   365,
       0,   366,   367,   368,     0,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,     0,   379,     0,   380,   381,
     382,     0,   383,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,     0,     0,   392,     0,     0,     0,   393,
     394,   395,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,   403,   404,     0,   405,   406,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   414,   415,     0,   416,
       0,   417,   418,     0,   419,   420,   421,     0,   422,     0,
       0,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,     0,   435,   436,     0,     0,     0,   437,
     438,   439,   440,     0,     0,     0,   441,     0,     0,     0,
     442,     0,   443,   444,   445,   446,     0,   447,   448,   449,
     450,   451,     0,     0,     0,     0,     0,   452,   453,   454,
       0,   455,   456,     0,   457,     0,     0,   458,     0,   459,
       0,   460,   461,   462,   463,   464,   465,     0,     0,   466,
     467,     0,     0,   468,   469,   470,   471,   472,   473,     0,
       0,   474,   475,   476,   477,     0,   478,   479,     0,     0,
     480,   481,   482,   483,     0,     0,   484,   485,     0,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
       0,     0,     0,   492,   493,   494,   495,     0,   496,   497,
       0,   498,   499,     0,   500,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,     0,     0,     0,
       0,     0,   507,     0,   508,     0,     0,   509,     0,     0,
       0,   510,     0,   511,   512,   513,   514,     0,     0,     0,
       0,     0,     0,   515,   516,   517,     0,   518,   519,   520,
     521,     0,     0,   522,     0,   145,   146,     0,   147,   148,
     149,   150,   151,     0,     0,   152,   153,     0,     0,     0,
     154,     0,   578,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,     0,     0,     0,   163,     0,     0,     0,
     164,     0,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,     0,     0,   172,   173,     0,   174,
     175,   176,     0,   177,     0,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   202,   203,     0,     0,     0,   204,     0,
       0,   205,     0,   206,     0,     0,   207,     0,     0,     0,
     208,   209,   210,     0,     0,   211,     0,     0,     0,     0,
     212,   213,     0,     0,     0,     0,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,     0,     0,   241,   242,   243,   678,   245,     0,     0,
     246,   247,     0,   248,   249,   250,   251,   252,     0,     0,
     253,   254,     0,     0,     0,   679,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,   266,   267,     0,   268,     0,
       0,   269,   270,     0,     0,     0,   271,   272,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,     0,   279,   280,   281,     0,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,     0,   292,   293,     0,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,     0,   347,   348,     0,
       0,   349,   350,   351,   352,   353,     0,     0,     0,   354,
     355,     0,     0,     0,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,     0,   366,   367,
     368,     0,   680,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   422,     0,     0,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,     0,     0,   466,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,     0,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
     492,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     522,     0,   145,   146,     0,   147,   148,   149,   150,   151,
       0,     0,   152,   153,     0,     0,     0,   154,     0,   578,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   176,     0,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,     0,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,   266,   267,     0,   268,     0,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,   287,     0,   288,
       0,     0,   289,   290,     0,     0,   291,     0,     0,   292,
     293,     0,     0,     0,     0,     0,   294,   295,     0,   296,
       0,   297,     0,   298,   299,     0,     0,     0,     0,     0,
       0,     0,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,     0,   322,   323,   324,
     325,     0,   326,   327,     0,     0,     0,     0,   328,   329,
     330,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,   337,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,     0,   347,   348,     0,     0,   349,   350,
     351,   352,   353,     0,     0,     0,   354,   355,     0,     0,
       0,   356,     0,   357,   358,     0,   359,   360,   361,     0,
       0,   362,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   363,   364,   365,     0,   366,   367,   368,     0,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,     0,   380,   381,   382,     0,   383,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,     0,     0,   392,
       0,     0,     0,   393,   394,   395,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,   403,   404,     0,   405,
     406,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,     0,   416,     0,   417,   418,     0,   419,   420,
     421,     0,   422,     0,     0,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
       0,     0,     0,   437,   438,   439,   440,     0,     0,     0,
     441,     0,     0,     0,   442,     0,   443,   444,   445,   446,
       0,   447,   448,   449,   450,   451,     0,     0,     0,     0,
       0,   452,   453,   454,     0,   455,   456,     0,   457,     0,
       0,   458,     0,   459,     0,   460,   461,   462,   463,   464,
     465,     0,     0,   466,   467,     0,     0,   468,   469,   470,
     471,   472,   473,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,     0,   480,   481,   482,   483,     0,     0,
     484,   485,     0,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,     0,     0,     0,   492,   493,   494,
     495,     0,   496,   497,     0,   498,   499,     0,   500,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,     0,     0,     0,     0,     0,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   511,   512,   513,
     514,     0,     0,     0,     0,     0,     0,   515,   516,   517,
       0,   518,   519,   520,   521,     0,     0,   522,     0,   145,
     146,     0,   147,   148,   149,   150,   151,     0,     0,   152,
     153,     0,     0,     0,   154,     0,   846,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,     0,     0,     0,
     163,     0,     0,     0,   164,     0,     0,   165,   166,   167,
       0,   168,     0,   169,   170,     0,     0,   171,     0,     0,
     172,   173,     0,   174,   175,   176,     0,   177,     0,   178,
     179,   180,   181,   182,   183,     0,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,   197,   198,     0,   199,   200,   201,   202,   203,     0,
       0,     0,   204,     0,     0,   205,     0,   206,     0,     0,
     207,     0,     0,     0,   208,   209,   210,     0,     0,   211,
       0,     0,     0,     0,   212,   213,     0,     0,     0,     0,
     214,   215,     0,   216,     0,     0,     0,   217,     0,   218,
     219,   220,   221,   222,     0,     0,     0,   223,     0,     0,
     224,   225,   226,     0,     0,     0,   227,     0,   228,   229,
       0,   230,   231,   232,     0,     0,   233,   234,     0,   235,
     236,   237,   238,   239,   240,     0,     0,   241,   242,   243,
     244,   245,     0,     0,   246,   247,     0,   248,   249,   250,
     251,   252,     0,     0,   253,   254,     0,     0,     0,   255,
     256,     0,   257,     0,   258,     0,   259,     0,   260,   261,
     262,   263,     0,   264,     0,   265,     0,     0,     0,   266,
     267,     0,   268,     0,     0,   269,   270,     0,     0,     0,
     271,   272,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,     0,     0,     0,     0,   279,   280,   281,     0,
       0,     0,   282,     0,     0,     0,   283,   284,     0,   285,
     286,     0,     0,     0,   287,     0,   288,     0,     0,   289,
     290,     0,     0,   291,     0,     0,   292,   293,     0,     0,
       0,     0,     0,   294,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,     0,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,     0,   322,   323,   324,   325,     0,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
       0,   347,   348,     0,     0,   349,   350,   351,   352,   353,
       0,     0,     0,   354,   355,     0,     0,     0,   356,     0,
     357,   358,     0,   359,   360,   361,     0,     0,   362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   363,   364,
     365,     0,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,     0,   380,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,   404,     0,   405,   406,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,     0,   417,   418,     0,   419,   420,   421,     0,   422,
       0,     0,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,     0,     0,     0,
     437,   438,   439,   440,     0,     0,     0,   441,     0,     0,
       0,   442,     0,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,   461,   462,   463,   464,   465,     0,     0,
     466,   467,     0,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
       0,   480,   481,   482,   483,     0,     0,   484,   485,     0,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,     0,     0,     0,   492,   493,   494,   495,     0,   496,
     497,     0,   498,   499,     0,   500,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,     0,     0,
       0,     0,     0,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,     0,   511,   512,   513,   514,     0,     0,
       0,     0,     0,     0,   515,   516,   517,     0,   518,   519,
     520,   521,     0,     0,   522,     0,   145,   146,     0,   147,
     148,   149,   150,   151,     0,     0,   152,   153,     0,     0,
       0,   154,     0,  2386,   155,     0,   156,   157,   158,   159,
     160,   161,     0,   162,     0,     0,     0,   163,     0,     0,
       0,   164,     0,     0,   165,   166,   167,     0,   168,     0,
     169,   170,     0,     0,   171,     0,     0,   172,   173,     0,
     174,   175,   176,     0,   177,     0,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,     0,   204,
       0,     0,   205,     0,   206,     0,     0,   207,     0,     0,
       0,   208,   209,   210,     0,     0,   211,     0,     0,     0,
       0,   212,   213,     0,     0,     0,     0,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,   223,     0,     0,  1460,   225,   226,
       0,     0,     0,   227,     0,   228,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,   240,     0,     0,   241,   242,   243,   244,   245,     0,
       0,   246,   247,     0,   248,   249,   250,   251,   252,     0,
       0,   253,   254,     0,     0,     0,   255,   256,     0,   257,
       0,   258,     0,   259,     0,   260,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,   266,   267,     0,   268,
       0,     0,   269,   270,     0,     0,     0,   271,   272,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,     0,   279,   280,   281,     0,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,     0,     0,
       0,   287,     0,   288,     0,     0,   289,   290,     0,     0,
     291,     0,     0,   292,   293,   666,     0,     0,     0,     0,
     294,   295,     0,   296,     0,   297,     0,   298,   299,     0,
       0,     0,     0,     0,     0,     0,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
       0,   322,   323,   324,   325,     0,   326,   327,     0,     0,
       0,     0,   328,   329,   330,   331,   332,   333,     0,     0,
     334,   335,     0,   336,     0,   337,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,     0,   347,   348,
       0,     0,   349,   350,   351,   352,   353,     0,     0,     0,
     354,   355,     0,     0,     0,   356,     0,   357,   358,     0,
     359,   360,   361,     0,     0,   362,     0,     0,     0,     0,
       0,     0,     0,  1461,     0,   363,   364,   365,     0,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,     0,   380,   381,   382,     0,
     383,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,     0,     0,   392,     0,     0,     0,   393,   394,   395,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
     403,   404,     0,   405,   406,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,     0,   416,     0,   417,
     418,     0,   419,   420,   421,     0,   422,     0,     0,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,     0,     0,     0,   437,   438,   439,
     440,     0,     0,     0,   441,     0,     0,     0,   442,     0,
     443,   444,   445,   446,     0,   447,   448,   449,   450,   451,
       0,     0,     0,     0,     0,   452,   453,   454,     0,   455,
     456,     0,   457,     0,     0,   458,     0,   459,     0,   460,
     461,   462,   463,   464,   465,     0,     0,   466,   467,     0,
       0,   468,   469,   470,   471,   472,   473,     0,     0,   474,
     475,   476,   477,     0,   478,   479,     0,     0,   480,   481,
     482,   483,     0,   142,   484,   485,     0,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,     0,     0,
       0,   492,   493,   494,   495,     0,   496,   497,     0,   498,
     499,     0,   500,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,     0,     0,     0,     0,     0,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
       0,   511,   512,   513,   514,     0,     0,     0,     0,     0,
       0,   515,   516,   517,     0,   518,   519,   520,   521,     0,
       0,   522,   145,   146,     0,   147,   148,   149,   150,   151,
       0,     0,   152,   153,     0,     0,     0,   154,     0,  1462,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   621,   622,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,   623,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   624,     0,   265,     0,
       0,     0,   266,   267,     0,   268,     0,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,   287,     0,   288,
       0,     0,   289,   290,     0,     0,   291,     0,     0,   292,
     293,     0,     0,     0,     0,     0,   294,   295,     0,   625,
       0,   297,     0,   298,   299,     0,     0,     0,     0,     0,
       0,     0,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,     0,   322,   323,   324,
     325,     0,   326,   327,     0,     0,     0,     0,   328,   329,
     330,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,   337,     0,   338,   339,   340,   341,   342,   343,   626,
     345,   346,     0,     0,   347,   348,     0,     0,   349,   350,
     351,   352,   353,     0,     0,     0,   354,   355,     0,     0,
       0,   356,     0,   357,   358,     0,   359,   360,   361,     0,
       0,   362,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   363,   364,   365,     0,   366,   367,   368,     0,   369,
     370,   627,   372,   373,   374,   375,   376,   377,   378,     0,
     379,     0,   380,   381,   382,     0,   383,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,     0,     0,   392,
       0,     0,     0,   393,   394,   395,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,   403,   404,     0,   405,
     406,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,     0,   416,     0,   417,   418,     0,   419,   420,
     421,     0,   422,     0,     0,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
       0,     0,     0,   437,   438,   628,   440,     0,     0,     0,
     441,     0,     0,     0,   442,     0,   443,   444,   445,   446,
       0,   447,   448,   449,   450,   451,     0,     0,     0,     0,
       0,   452,   453,   454,     0,   455,   456,     0,   457,     0,
       0,   458,     0,   459,     0,   460,   461,   462,   463,   464,
     465,     0,     0,   466,   467,     0,     0,   468,   469,   470,
     471,   472,   473,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,     0,   480,   481,   482,   483,     0,     0,
     484,   485,     0,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   629,   491,     0,     0,     0,   492,   493,   494,
     495,     0,   496,   497,     0,   498,   499,     0,   500,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,     0,     0,     0,     0,     0,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   511,   512,   513,
     514,     0,     0,     0,     0,     0,     0,   515,   516,   517,
       0,   518,   519,   520,   521,     0,     0,   522,   145,   146,
       0,   147,   148,   149,   150,   151,     0,     0,   152,   153,
       0,     0,     0,   154,     0,   630,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,     0,     0,     0,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,     0,     0,   172,
     173,     0,   174,   175,   176,     0,   177,     0,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,     0,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,   213,     0,     0,     0,     0,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,     0,   248,   249,   250,   251,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
       0,   257,     0,   258,     0,   259,     0,   260,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,   266,   267,
       0,   268,     0,     0,   269,   270,     0,     0,     0,   271,
     272,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,   281,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,   287,     0,   288,     0,     0,   289,   290,
       0,     0,   291,     0,     0,   292,   293,   666,     0,     0,
       0,     0,   294,   295,     0,   296,     0,   297,     0,   298,
     299,     0,     0,     0,     0,     0,     0,     0,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,     0,   322,   323,   324,   325,     0,   326,   327,
       0,     0,     0,     0,   328,   329,   330,   331,   332,   333,
       0,     0,   334,   335,     0,   336,     0,   337,     0,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,     0,
     347,   348,     0,     0,   349,   350,   351,   352,   353,     0,
       0,     0,   354,   355,     0,     0,     0,   356,     0,   357,
     358,     0,   359,   360,   361,     0,     0,   362,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   363,   364,   365,
       0,   366,   367,   368,     0,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,     0,   379,     0,   380,   381,
     382,     0,   383,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,     0,     0,   392,     0,     0,     0,   393,
     394,   395,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,   403,   404,     0,   405,   406,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   414,   415,     0,   416,
       0,   417,   418,     0,   419,   420,   421,     0,   422,     0,
       0,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,     0,   435,   436,     0,     0,     0,   437,
     438,   439,   440,     0,     0,     0,   441,     0,     0,     0,
     442,     0,   443,   444,   445,   446,     0,   447,   448,   449,
     450,   451,     0,     0,     0,     0,     0,   452,   453,   454,
       0,   455,   456,     0,   457,     0,     0,   458,     0,   459,
       0,   460,   461,   462,   463,   464,   465,     0,     0,   466,
     467,     0,     0,   468,   469,   470,   471,   472,   473,     0,
       0,   474,   475,   476,   477,     0,   478,   479,     0,     0,
     480,   481,   482,   483,     0,   142,   484,   485,     0,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
       0,     0,     0,   492,   493,   494,   495,     0,   496,   497,
       0,   498,   499,     0,   500,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,     0,     0,     0,
       0,     0,   507,     0,   508,     0,     0,   509,     0,     0,
       0,   510,     0,   511,   512,   513,   514,     0,     0,     0,
       0,     0,     0,   515,   516,   517,     0,   518,   519,   520,
     521,     0,     0,   522,   145,   146,     0,   147,   148,   149,
     150,   151,     0,     0,   152,   153,     0,     0,     0,   154,
       0,   972,   155,     0,   156,   157,   158,   159,   160,   161,
       0,   162,     0,     0,     0,   163,     0,     0,     0,   164,
       0,     0,   165,   166,   167,     0,   168,     0,   169,   170,
       0,     0,   171,     0,     0,   172,   173,     0,   174,   175,
     176,     0,   177,     0,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,   202,   203,     0,     0,     0,   204,     0,     0,
     205,     0,   206,     0,     0,   207,     0,     0,     0,   208,
     209,   210,     0,     0,   211,     0,     0,     0,     0,   212,
     213,     0,     0,     0,     0,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,   223,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,   228,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,   240,
       0,     0,   241,   242,   243,   244,   245,     0,     0,   246,
     247,     0,   248,   249,   250,   251,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,     0,   257,     0,   258,
       0,   259,     0,   260,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,   266,   267,     0,   268,     0,     0,
     269,   270,     0,     0,     0,   271,   272,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
       0,   279,   280,   281,     0,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,     0,     0,     0,   287,
       0,   288,     0,     0,   289,   290,     0,     0,   291,     0,
       0,   292,   293,   666,     0,     0,     0,     0,   294,   295,
       0,   296,     0,   297,     0,   298,   299,     0,     0,     0,
       0,     0,     0,     0,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,     0,   322,
     323,   324,   325,     0,   326,   327,     0,     0,     0,     0,
     328,   329,   330,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,   337,     0,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,     0,   347,   348,     0,     0,
     349,   350,   351,   352,   353,     0,     0,     0,   354,   355,
       0,     0,     0,   356,     0,   357,   358,     0,   359,   360,
     361,     0,     0,   362,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   363,   364,   365,     0,   366,   367,   368,
       0,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   379,     0,   380,   381,   382,     0,   383,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,     0,
       0,   392,     0,     0,     0,   393,   394,   395,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,   403,   404,
       0,   405,   406,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,     0,   417,   418,     0,
     419,   420,   421,     0,   422,     0,     0,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,     0,     0,     0,   437,   438,   439,   440,     0,
       0,     0,   441,     0,     0,     0,   442,     0,   443,   444,
     445,   446,     0,   447,   448,   449,   450,   451,     0,     0,
       0,     0,     0,   452,   453,   454,     0,   455,   456,     0,
     457,     0,     0,   458,     0,   459,     0,   460,   461,   462,
     463,   464,   465,     0,     0,   466,   467,     0,     0,   468,
     469,   470,   471,   472,   473,     0,     0,   474,   475,   476,
     477,     0,   478,   479,     0,     0,   480,   481,   482,   483,
       0,   142,   484,   485,     0,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,     0,     0,     0,   492,
     493,   494,   495,     0,   496,   497,     0,   498,   499,     0,
     500,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,     0,     0,     0,     0,     0,   507,     0,
     508,     0,     0,   509,     0,     0,     0,   510,     0,   511,
     512,   513,   514,     0,     0,     0,     0,     0,     0,   515,
     516,   517,     0,   518,   519,   520,   521,     0,     0,   522,
     145,   146,     0,   147,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,  1274,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,     0,     0,
       0,   163,     0,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,     0,
       0,   172,   173,     0,   174,   175,   621,   622,   177,     0,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
     211,     0,     0,     0,     0,   212,   213,     0,     0,     0,
     623,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,     0,     0,   241,   242,
     243,   244,   245,     0,     0,   246,   247,     0,   248,   249,
     250,   251,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     261,   262,   263,     0,   624,     0,   265,     0,     0,     0,
     266,   267,     0,   268,     0,     0,   269,   270,     0,     0,
       0,   271,   272,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,   281,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,     0,   292,   293,     0,
       0,     0,     0,     0,   294,   295,     0,   625,     0,   297,
       0,   298,   299,     0,     0,     0,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,     0,   322,   323,   324,   325,     0,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,   337,
       0,   338,   339,   340,   341,   342,   343,   626,   345,   346,
       0,     0,   347,   348,     0,     0,   349,   350,   351,   352,
     353,     0,     0,     0,   354,   355,     0,     0,     0,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,     0,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,     0,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     422,     0,     0,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,     0,   435,   436,     0,     0,
       0,   437,   438,   628,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,     0,
       0,   466,   467,     0,     0,   468,   469,   470,   471,   472,
     473,     0,     0,   474,   475,   476,   477,     0,   478,   479,
       0,     0,   480,   481,   482,   483,     0,     0,   484,   485,
       0,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,     0,     0,     0,   492,   493,   494,   495,     0,
     496,   497,     0,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,     0,
       0,     0,     0,     0,   507,     0,   508,     0,     0,   509,
       0,     0,     0,   510,     0,   511,   512,   513,   514,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,     0,     0,   522,   145,   146,     0,   147,
     148,   149,   150,   151,     0,     0,   152,   153,     0,     0,
       0,   154,     0,   630,   155,     0,   156,   157,   158,   159,
     160,   161,     0,   162,     0,     0,     0,   163,     0,     0,
       0,   164,     0,     0,   165,   166,   167,     0,   168,     0,
     169,   170,     0,     0,   171,     0,     0,   172,   173,     0,
     174,   175,   176,     0,   177,     0,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,     0,   204,
       0,     0,   205,     0,   206,     0,     0,   207,     0,     0,
       0,   208,   209,   210,     0,     0,   211,     0,     0,     0,
       0,   212,   213,     0,     0,     0,     0,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,   223,     0,     0,   224,   225,   226,
       0,     0,     0,   227,     0,   228,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,   240,     0,     0,   241,   242,   243,   244,   245,     0,
       0,   246,   247,     0,   248,   249,   250,   251,   252,     0,
       0,   253,   254,     0,     0,     0,   255,   256,     0,   257,
       0,   258,     0,   259,     0,   260,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,   266,   267,     0,   268,
       0,     0,   269,   270,     0,     0,     0,   271,   272,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,     0,   279,   280,   281,     0,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,     0,     0,
       0,   287,     0,   288,     0,     0,   289,   290,     0,     0,
     291,     0,     0,   292,   293,   666,     0,     0,     0,     0,
     294,   295,     0,   296,     0,   297,     0,   298,   299,     0,
       0,     0,     0,     0,     0,     0,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
       0,   322,   323,   324,   325,     0,   326,   327,     0,     0,
       0,     0,   328,   329,   330,   331,   332,   333,     0,     0,
     334,   335,     0,   336,     0,   337,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,     0,   347,   348,
       0,     0,   349,   350,   351,   352,   353,     0,     0,     0,
     354,   355,     0,     0,     0,   356,     0,   357,   358,     0,
     359,   360,   361,     0,     0,   362,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   363,   364,   365,     0,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,     0,   380,   381,   382,     0,
     383,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,     0,     0,   392,     0,     0,     0,   393,   394,   395,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
     403,   404,     0,   405,   406,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,     0,   416,     0,   417,
     418,     0,   419,   420,   421,     0,   422,     0,     0,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,     0,     0,     0,   437,   438,   439,
     440,     0,     0,     0,   441,     0,     0,     0,   442,     0,
     443,   444,   445,   446,     0,   447,   448,   449,   450,   451,
       0,     0,     0,     0,     0,   452,   453,   454,     0,   455,
     456,     0,   457,     0,     0,   458,     0,   459,     0,   460,
     461,   462,   463,   464,   465,     0,     0,   466,   467,     0,
       0,   468,   469,   470,   471,   472,   473,     0,     0,   474,
     475,   476,   477,     0,   478,   479,     0,     0,   480,   481,
     482,   483,     0,   142,   484,   485,     0,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,     0,     0,
       0,   492,   493,   494,   495,     0,   496,   497,     0,   498,
     499,     0,   500,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,     0,     0,     0,     0,     0,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
       0,   511,   512,   513,   514,     0,     0,     0,     0,     0,
       0,   515,   516,   517,     0,   518,   519,   520,   521,     0,
       0,   522,   145,   146,     0,   147,   148,   149,   150,   151,
       0,     0,   152,   153,     0,     0,     0,   154,     0,  1462,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   176,     0,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,  1363,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,     0,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,   266,   267,     0,   268,     0,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,   287,     0,   288,
       0,     0,   289,   290,     0,     0,   291,     0,     0,   292,
     293,     0,     0,     0,     0,     0,   294,   295,     0,   296,
       0,   297,     0,   298,   299,     0,     0,     0,     0,     0,
       0,     0,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,     0,   322,   323,   324,
     325,     0,   326,   327,     0,     0,     0,     0,   328,   329,
     330,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,   337,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,     0,   347,   348,     0,     0,   349,   350,
     351,   352,   353,     0,     0,     0,   354,   355,     0,     0,
       0,   356,     0,   357,   358,     0,   359,   360,   361,     0,
       0,   362,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   363,   364,   365,     0,   366,   367,   368,     0,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,     0,   380,   381,   382,     0,   383,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,     0,     0,   392,
       0,     0,     0,   393,   394,   395,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,   403,   404,     0,   405,
     406,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,     0,   416,     0,   417,   418,     0,   419,   420,
     421,     0,   422,     0,     0,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
       0,     0,     0,   437,   438,   439,   440,     0,     0,     0,
     441,     0,     0,     0,   442,     0,   443,   444,   445,   446,
       0,   447,   448,   449,   450,   451,     0,     0,     0,     0,
       0,   452,   453,   454,     0,   455,   456,     0,   457,     0,
       0,   458,     0,   459,     0,   460,   461,   462,   463,   464,
     465,     0,     0,   466,   467,     0,     0,   468,   469,   470,
     471,   472,   473,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,     0,   480,   481,   482,   483,     0,     0,
     484,   485,     0,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,     0,     0,     0,   492,   493,   494,
     495,     0,   496,   497,     0,   498,   499,     0,   500,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,     0,     0,     0,     0,     0,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   511,   512,   513,
     514,     0,     0,     0,     0,     0,     0,   515,   516,   517,
       0,   518,   519,   520,   521,     0,     0,   522,   145,   146,
       0,   147,   148,   149,   150,   151,     0,     0,   152,   153,
       0,     0,     0,   154,     0,  1364,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,     0,     0,     0,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,     0,     0,   172,
     173,     0,   174,   175,   176,     0,   177,     0,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,     0,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,   213,     0,     0,     0,     0,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,     0,   248,   249,   250,   251,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
       0,   257,     0,   258,     0,   259,     0,   260,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,   266,   267,
       0,   268,     0,     0,   269,   270,     0,     0,     0,   271,
     272,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,   281,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,   287,     0,   288,     0,     0,   289,   290,
       0,     0,   291,     0,     0,   292,   293,     0,     0,     0,
       0,     0,   294,   295,     0,   296,     0,   297,     0,   298,
     299,     0,     0,     0,     0,     0,     0,     0,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,     0,   322,   323,   324,   325,     0,   326,   327,
       0,     0,     0,     0,   328,   329,   330,   331,   332,   333,
       0,     0,   334,   335,     0,   336,     0,   337,     0,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,     0,
     347,   348,     0,     0,   349,   350,   351,   352,   353,     0,
       0,     0,   354,   355,     0,     0,     0,   356,     0,   357,
     358,     0,   359,   360,   361,     0,     0,   362,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   363,   364,   365,
       0,   366,   367,   368,     0,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,     0,   379,     0,   380,   381,
     382,     0,   383,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,     0,     0,   392,     0,     0,     0,   393,
     394,   395,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,   403,   404,     0,   405,   406,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   414,   415,     0,   416,
       0,   417,   418,     0,   419,   420,   421,     0,   422,     0,
       0,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,     0,   435,   436,     0,     0,     0,   437,
     438,   439,   440,     0,     0,     0,   441,     0,     0,     0,
     442,     0,   443,   444,   445,   446,     0,   447,   448,   449,
     450,   451,     0,     0,     0,     0,     0,   452,   453,   454,
       0,   455,   456,     0,   457,     0,     0,   458,     0,   459,
       0,   460,   461,   462,   463,   464,   465,     0,     0,   466,
     467,     0,     0,   468,   469,   470,   471,   472,   473,     0,
       0,   474,   475,   476,   477,     0,   478,   479,     0,     0,
     480,   481,   482,   483,     0,     0,   484,   485,     0,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
       0,     0,     0,   492,   493,   494,   495,     0,   496,   497,
       0,   498,   499,     0,   500,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,     0,     0,     0,
       0,     0,   507,     0,   508,     0,     0,   509,     0,     0,
       0,   510,     0,   511,   512,   513,   514,     0,     0,     0,
       0,     0,     0,   515,   516,   517,     0,   518,   519,   520,
     521,     0,     0,   522,   145,   146,     0,   147,   148,   149,
     150,   151,     0,     0,   152,   153,     0,     0,     0,   154,
       0,  1364,   155,     0,   156,   157,   158,   159,   160,   161,
       0,   162,     0,     0,     0,   163,     0,     0,     0,   164,
       0,     0,   165,   166,   167,     0,   168,     0,   169,   170,
       0,     0,   171,     0,     0,   172,   173,     0,   174,   175,
     176,     0,   177,     0,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,   202,   203,     0,     0,     0,   204,     0,     0,
     205,     0,   206,     0,     0,   207,     0,     0,     0,   208,
     209,   210,     0,     0,   211,     0,     0,     0,     0,   212,
     213,     0,     0,     0,     0,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,   223,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,   228,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,   240,
       0,     0,   241,   242,   243,   244,   245,     0,     0,   246,
     247,     0,   248,   249,   250,   251,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,     0,   257,     0,   258,
       0,   259,     0,   260,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,   266,   267,     0,   268,     0,     0,
     269,   270,     0,     0,     0,   271,   272,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
       0,   279,   280,   281,     0,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,     0,     0,     0,   287,
       0,   288,     0,     0,   289,   290,     0,     0,   291,     0,
       0,   292,   293,     0,     0,     0,     0,     0,   294,   295,
       0,   296,     0,   297,     0,   298,   299,     0,     0,     0,
       0,     0,     0,     0,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,     0,   322,
     323,   324,   325,     0,   326,   327,     0,     0,     0,     0,
     328,   329,   330,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,   337,     0,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,     0,   347,   348,     0,     0,
     349,   350,   351,   352,   353,     0,     0,     0,   354,   355,
       0,     0,     0,   356,     0,   357,   358,     0,   359,   360,
     361,     0,     0,   362,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   363,   364,   365,     0,   366,   367,   368,
       0,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   379,     0,   380,   381,   382,     0,   383,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,     0,
       0,   392,     0,     0,     0,   393,   394,   395,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,   403,   404,
       0,   405,   406,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,     0,   417,   418,     0,
     419,   420,   421,     0,   422,     0,     0,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,     0,     0,     0,   437,   438,   439,   440,     0,
       0,     0,   441,     0,     0,     0,   442,     0,   443,   444,
     445,   446,     0,   447,   448,   449,   450,   451,     0,     0,
       0,     0,     0,   452,   453,   454,     0,   455,   456,     0,
     457,     0,     0,   458,     0,   459,     0,   460,   461,   462,
     463,   464,   465,     0,     0,   466,   467,     0,     0,   468,
     469,   470,   471,   472,   473,     0,     0,   474,   475,   476,
     477,     0,   478,   479,     0,     0,   480,   481,   482,   483,
       0,     0,   484,   485,     0,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,     0,     0,     0,   492,
     493,   494,   495,     0,   496,   497,     0,   498,   499,     0,
     500,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,     0,     0,     0,     0,     0,   507,     0,
     508,     0,     0,   509,     0,     0,     0,   510,     0,   511,
     512,   513,   514,     0,     0,     0,     0,     0,     0,   515,
     516,   517,     0,   518,   519,   520,   521,   145,   146,   522,
     147,   148,   149,   150,   151,     0,     0,   152,   153,     0,
       0,  3396,   154,     0,     0,   155,     0,   156,   157,   158,
     159,   160,   161,     0,   162,     0,     0,     0,   163,     0,
       0,     0,   164,     0,     0,   165,   166,   167,     0,   168,
       0,   169,   170,     0,     0,   171,     0,     0,   172,   173,
       0,   174,   175,   176,     0,   177,     0,   178,   179,   180,
     181,   182,   183,     0,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,   197,
     198,     0,   199,   200,   201,   202,   203,     0,     0,     0,
     204,     0,     0,   205,     0,   206,     0,     0,   207,     0,
       0,     0,   208,   209,   210,     0,     0,   211,     0,     0,
       0,     0,   212,   213,     0,     0,     0,     0,   214,   215,
       0,   216,     0,     0,     0,   217,     0,   218,   219,   220,
     221,   222,     0,     0,     0,   223,     0,     0,   224,   225,
     226,     0,     0,     0,   227,     0,   228,   229,     0,   230,
     231,   232,     0,     0,   233,   234,     0,   235,   236,   237,
     238,   239,   240,     0,     0,   241,   242,   243,   244,   245,
       0,     0,   246,   247,     0,   248,   249,   250,   251,   252,
       0,     0,   253,   254,     0,     0,     0,   255,   256,     0,
     257,     0,   258,     0,   259,     0,   260,   261,   262,   263,
       0,   264,     0,   265,     0,     0,     0,   266,   267,     0,
     268,     0,     0,   269,   270,     0,     0,     0,   271,   272,
     273,   274,     0,     0,   275,   276,   277,     0,     0,   278,
       0,     0,     0,     0,   279,   280,   281,     0,     0,     0,
     282,     0,     0,     0,   283,   284,     0,   285,   286,     0,
       0,     0,   287,     0,   288,     0,     0,   289,   290,     0,
       0,   291,     0,     0,   292,   293,     0,     0,     0,     0,
       0,   294,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,     0,     0,     0,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,     0,   322,   323,   324,   325,     0,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,     0,   347,
     348,     0,     0,   349,   350,   351,   352,   353,     0,     0,
       0,   354,   355,     0,     0,     0,   356,     0,   357,   358,
       0,   359,   360,   361,     0,     0,   362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,   364,   365,     0,
     366,   367,   368,     0,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,     0,   380,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,   404,     0,   405,   406,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,     0,
     417,   418,     0,   419,   420,   421,     0,   422,     0,     0,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,     0,     0,     0,   437,   438,
     439,   440,     0,     0,     0,   441,     0,     0,     0,   442,
       0,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,     0,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,   461,   462,   463,   464,   465,     0,     0,   466,   467,
       0,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,     0,   480,
     481,   482,   483,     0,     0,   484,   485,     0,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,     0,
       0,     0,   492,   493,   494,   495,     0,   496,   497,     0,
     498,   499,     0,   500,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,     0,     0,     0,     0,
       0,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   511,   512,   513,   514,     0,     0,     0,     0,
       0,     0,   515,   516,   517,     0,   518,   519,   520,   521,
     145,   146,   522,   147,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,  3400,   154,     0,     0,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,     0,     0,
       0,   163,     0,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,     0,
       0,   172,   173,     0,   174,   175,   176,     0,   177,     0,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
     211,     0,     0,     0,     0,   212,   213,     0,     0,     0,
       0,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,     0,     0,   241,   242,
     243,   244,   245,     0,     0,   246,   247,     0,   248,   249,
     250,   251,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     266,   267,     0,   268,     0,     0,   269,   270,     0,     0,
       0,   271,   272,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,   281,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,     0,   292,   293,     0,
       0,     0,     0,     0,   294,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,     0,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,     0,   322,   323,   324,   325,     0,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,   337,
       0,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,     0,   347,   348,     0,     0,   349,   350,   351,   352,
     353,     0,     0,     0,   354,   355,     0,     0,     0,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,     0,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,     0,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     422,     0,     0,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,     0,
       0,   466,   467,     0,     0,   468,   469,   470,   471,   472,
     473,     0,     0,   474,   475,   476,   477,     0,   478,   479,
       0,     0,   480,   481,   482,   483,     0,     0,   484,   485,
       0,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,     0,     0,     0,   492,   493,   494,   495,     0,
     496,   497,     0,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,     0,
       0,     0,     0,     0,   507,     0,   508,     0,     0,   509,
       0,     0,     0,   510,     0,   511,   512,   513,   514,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,   145,   146,   522,   147,   148,   149,   150,
     151,  1821,     0,   152,   153,     0,     0,     0,   154,     0,
       0,   155,     0,   156,   157,   158,   159,   160,   161,     0,
     162,     0,     0,     0,   163,     0,     0,     0,   164,     0,
       0,   165,   166,   167,     0,   168,     0,   169,   170,     0,
       0,   171,     0,     0,   172,   173,     0,   174,   175,   176,
       0,   177,     0,   178,   179,   180,   181,   182,   183,     0,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,   197,   198,     0,   199,   200,
     201,   202,   203,     0,     0,     0,   204,     0,     0,   205,
       0,   206,     0,     0,   207,     0,     0,     0,   208,   209,
     210,     0,     0,   211,     0,     0,     0,     0,   212,   213,
       0,     0,     0,     0,   214,   215,     0,   216,     0,     0,
       0,   217,     0,   218,   219,   220,   221,   222,     0,     0,
       0,   223,     0,     0,   224,   225,   226,     0,     0,     0,
     227,     0,   228,   229,     0,   230,   231,   232,     0,     0,
     233,   234,     0,   235,   236,   237,   238,   239,   240,     0,
       0,   241,   242,   243,   244,   245,     0,     0,   246,   247,
       0,   248,   249,   250,   251,   252,     0,     0,   253,   254,
       0,     0,     0,   255,   256,     0,   257,     0,   258,     0,
     259,     0,   260,   261,   262,   263,     0,   264,     0,   265,
       0,     0,     0,   266,   267,     0,   268,     0,     0,   269,
     270,     0,     0,     0,   271,   272,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,     0,     0,     0,     0,
     279,   280,   281,     0,     0,     0,   282,     0,     0,     0,
     283,   284,     0,   285,   286,     0,     0,     0,   287,     0,
     288,     0,     0,   289,   290,     0,     0,   291,     0,     0,
     292,   293,     0,     0,     0,     0,     0,   294,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,     0,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,   354,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,   361,
       0,     0,   362,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   363,   364,   365,     0,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,     0,   380,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,   404,     0,
     405,   406,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,     0,   417,   418,     0,   419,
     420,   421,     0,   422,     0,     0,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,     0,     0,     0,   437,   438,   439,   440,     0,     0,
       0,   441,     0,     0,     0,   442,     0,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,   461,   462,   463,
     464,   465,     0,     0,   466,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
       0,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,     0,     0,     0,   492,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,   500,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,     0,     0,     0,     0,     0,     0,   515,   516,
     517,     0,   518,   519,   520,   521,   145,   146,   522,   147,
     148,   149,   150,   151,  2000,     0,   152,   153,     0,     0,
       0,   154,     0,     0,   155,     0,   156,   157,   158,   159,
     160,   161,     0,   162,     0,     0,     0,   163,     0,     0,
       0,   164,     0,     0,   165,   166,   167,     0,   168,     0,
     169,   170,     0,     0,   171,     0,     0,   172,   173,     0,
     174,   175,   176,     0,   177,     0,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,     0,   204,
       0,     0,   205,     0,   206,     0,     0,   207,     0,     0,
       0,   208,   209,   210,     0,     0,   211,     0,     0,     0,
       0,   212,   213,     0,     0,     0,     0,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,   223,     0,     0,   224,   225,   226,
       0,     0,     0,   227,     0,   228,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,   240,     0,     0,   241,   242,   243,   244,   245,     0,
       0,   246,   247,     0,   248,   249,   250,   251,   252,     0,
       0,   253,   254,     0,     0,     0,   255,   256,     0,   257,
       0,   258,     0,   259,     0,   260,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,   266,   267,     0,   268,
       0,     0,   269,   270,     0,     0,     0,   271,   272,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,     0,   279,   280,   281,     0,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,     0,     0,
       0,   287,     0,   288,     0,     0,   289,   290,     0,     0,
     291,     0,     0,   292,   293,     0,     0,     0,     0,     0,
     294,   295,     0,   296,     0,   297,     0,   298,   299,     0,
       0,     0,     0,     0,     0,     0,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
       0,   322,   323,   324,   325,     0,   326,   327,     0,     0,
       0,     0,   328,   329,   330,   331,   332,   333,     0,     0,
     334,   335,     0,   336,     0,   337,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,     0,   347,   348,
       0,     0,   349,   350,   351,   352,   353,     0,     0,     0,
     354,   355,     0,     0,     0,   356,     0,   357,   358,     0,
     359,   360,   361,     0,     0,   362,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   363,   364,   365,     0,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,     0,   380,   381,   382,     0,
     383,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,     0,     0,   392,     0,     0,     0,   393,   394,   395,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
     403,   404,     0,   405,   406,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,     0,   416,     0,   417,
     418,     0,   419,   420,   421,     0,   422,     0,     0,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,     0,     0,     0,   437,   438,   439,
     440,     0,     0,     0,   441,     0,     0,     0,   442,     0,
     443,   444,   445,   446,     0,   447,   448,   449,   450,   451,
       0,     0,     0,     0,     0,   452,   453,   454,     0,   455,
     456,     0,   457,     0,     0,   458,     0,   459,     0,   460,
     461,   462,   463,   464,   465,     0,     0,   466,   467,     0,
       0,   468,   469,   470,   471,   472,   473,     0,     0,   474,
     475,   476,   477,     0,   478,   479,     0,     0,   480,   481,
     482,   483,     0,     0,   484,   485,     0,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,     0,     0,
       0,   492,   493,   494,   495,     0,   496,   497,     0,   498,
     499,     0,   500,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,     0,     0,     0,     0,     0,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
       0,   511,   512,   513,   514,     0,     0,     0,     0,     0,
       0,   515,   516,   517,     0,   518,   519,   520,   521,   145,
     146,   522,   147,   148,   149,   150,   151,  3150,     0,   152,
     153,     0,     0,     0,   154,     0,     0,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,     0,     0,     0,
     163,     0,     0,     0,   164,     0,     0,   165,   166,   167,
       0,   168,     0,   169,   170,     0,     0,   171,     0,     0,
     172,   173,     0,   174,   175,   176,     0,   177,     0,   178,
     179,   180,   181,   182,   183,     0,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,   197,   198,     0,   199,   200,   201,   202,   203,     0,
       0,     0,   204,     0,     0,   205,     0,   206,     0,     0,
     207,     0,     0,     0,   208,   209,   210,     0,     0,   211,
       0,     0,     0,     0,   212,   213,     0,     0,     0,     0,
     214,   215,     0,   216,     0,     0,     0,   217,     0,   218,
     219,   220,   221,   222,     0,     0,     0,   223,     0,     0,
     224,   225,   226,     0,     0,     0,   227,     0,   228,   229,
       0,   230,   231,   232,     0,     0,   233,   234,     0,   235,
     236,   237,   238,   239,   240,     0,     0,   241,   242,   243,
     244,   245,     0,     0,   246,   247,     0,   248,   249,   250,
     251,   252,     0,     0,   253,   254,     0,     0,     0,   255,
     256,     0,   257,     0,   258,     0,   259,     0,   260,   261,
     262,   263,     0,   264,     0,   265,     0,     0,     0,   266,
     267,     0,   268,     0,     0,   269,   270,     0,     0,     0,
     271,   272,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,     0,     0,     0,     0,   279,   280,   281,     0,
       0,     0,   282,     0,     0,     0,   283,   284,     0,   285,
     286,     0,     0,     0,   287,     0,   288,     0,     0,   289,
     290,     0,     0,   291,     0,     0,   292,   293,     0,     0,
       0,     0,     0,   294,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,     0,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,     0,   322,   323,   324,   325,     0,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
       0,   347,   348,     0,     0,   349,   350,   351,   352,   353,
       0,     0,     0,   354,   355,     0,     0,     0,   356,     0,
     357,   358,     0,   359,   360,   361,     0,     0,   362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   363,   364,
     365,     0,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,     0,   380,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,   404,     0,   405,   406,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,     0,   417,   418,     0,   419,   420,   421,     0,   422,
       0,     0,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,     0,     0,     0,
     437,   438,   439,   440,     0,     0,     0,   441,     0,     0,
       0,   442,     0,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,   461,   462,   463,   464,   465,     0,     0,
     466,   467,     0,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
       0,   480,   481,   482,   483,     0,     0,   484,   485,     0,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,     0,     0,     0,   492,   493,   494,   495,     0,   496,
     497,     0,   498,   499,     0,   500,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,     0,     0,
       0,     0,     0,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,     0,   511,   512,   513,   514,     0,     0,
       0,     0,     0,     0,   515,   516,   517,     0,   518,   519,
     520,   521,   145,   146,   522,   147,   148,   149,   150,   151,
    3848,     0,   152,   153,     0,     0,     0,   154,     0,     0,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   176,     0,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,  2241,
       0,     0,     0,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,  2242,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,   266,   267,     0,   268,  2243,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,   287,     0,   288,
       0,     0,   289,   290,     0,     0,   291,     0,     0,   292,
     293,     0,     0,     0,     0,     0,   294,   295,     0,   296,
       0,   297,     0,   298,   299,     0,     0,  2244,     0,     0,
       0,     0,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,     0,   322,   323,   324,
     325,     0,   326,   327,     0,     0,     0,     0,   328,   329,
     330,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,   337,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,     0,   347,   348,     0,     0,   349,   350,
     351,   352,   353,  1129,  1130,     0,   354,   355,     0,     0,
    2245,   356,     0,   357,   358,     0,   359,   360,   361,     0,
       0,   362,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   363,   364,   365,     0,   366,   367,   368,     0,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,     0,   380,   381,   382,     0,   383,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,     0,     0,   392,
       0,     0,     0,   393,   394,   395,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,   403,   404,     0,   405,
     406,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,     0,   416,     0,   417,   418,     0,   419,   420,
     421,     0,   422,     0,     0,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
       0,     0,     0,   437,   438,   439,   440,     0,     0,     0,
     441,     0,     0,     0,   442,     0,   443,   444,   445,   446,
       0,   447,   448,   449,   450,   451,     0,     0,  4628,   610,
    4629,   452,   453,   454,     0,   455,   456,     0,   457,     0,
       0,   458,     0,   459,     0,   460,   461,   462,   463,   464,
     465,     0,     0,   466,   467,     0,     0,   468,   469,   470,
     471,   472,   473,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,     0,   480,   481,   482,   483,     0,     0,
     484,   485,     0,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,     0,     0,     0,   492,   493,   494,
     495,  2246,   496,   497,     0,   498,   499,     0,   500,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,     0,     0,     0,     0,     0,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   511,   512,   513,
     514,     0,     0,     0,     0,     0,     0,   515,   516,   517,
       0,   518,   519,   520,   521,   145,   146,   522,   147,   148,
     149,   150,   151,     0,     0,   152,   153,     0,  1279,  1280,
     154,  1281,     0,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,     0,     0,     0,   163,     0,     0,     0,
     164,     0,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,     0,     0,   172,   173,     0,   174,
     175,   176,     0,   177,     0,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   202,   203,     0,     0,     0,   204,     0,
       0,   205,     0,   206,     0,     0,   207,     0,     0,     0,
     208,   209,   210,     0,     0,   211,     0,     0,     0,     0,
     212,   213,     0,     0,     0,     0,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,     0,     0,   241,   242,   243,   244,   245,     0,     0,
     246,   247,     0,   248,   249,   250,   251,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,   266,   267,     0,   268,     0,
       0,   269,   270,     0,     0,     0,   271,   272,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,     0,   279,   280,   281,     0,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,     0,   292,   293,     0,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,     0,   347,   348,     0,
       0,   349,   350,   351,   352,   353,     0,     0,     0,   354,
     355,     0,     0,     0,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,  1282,     0,     0,
    1283,     0,     0,     0,   363,   364,   365,     0,   366,   367,
     368,     0,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   422,     0,     0,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,     0,     0,   466,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,   142,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
     492,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,  1284,     0,
     522,   145,   146,     0,   147,   148,   149,   150,   151,     0,
       0,   152,   153,     0,     0,     0,   154,     0,     0,   155,
       0,   156,   157,   158,   159,   160,   161,     0,   162,     0,
       0,   956,   163,     0,     0,     0,   164,     0,     0,   165,
     166,   167,     0,   168,     0,   169,   170,     0,     0,   171,
       0,     0,   172,   173,     0,   174,   175,   176,     0,   177,
       0,   178,   179,   180,   181,   182,   183,     0,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,   197,   198,     0,   199,   200,   201,   202,
     203,     0,     0,     0,   204,     0,     0,   205,     0,   206,
       0,     0,   207,     0,     0,     0,   208,   209,   210,     0,
       0,   211,     0,     0,     0,     0,   212,   213,     0,     0,
       0,   957,   214,   215,     0,   216,     0,     0,     0,   217,
       0,   218,   219,   220,   221,   222,     0,     0,     0,   223,
       0,     0,   224,   225,   226,     0,     0,     0,   227,     0,
     228,   229,     0,   230,   231,   232,   958,     0,   233,   234,
       0,   235,   236,   237,   238,   239,   240,     0,     0,   241,
     242,   243,   244,   245,     0,     0,   246,   247,     0,   248,
     249,   250,   251,   252,     0,     0,   253,   254,     0,     0,
       0,   255,   256,     0,   257,     0,   258,     0,   259,     0,
     260,   261,   262,   263,     0,   264,     0,   265,     0,     0,
       0,   266,   267,     0,   268,     0,     0,   269,   270,     0,
       0,     0,   271,   272,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,     0,     0,     0,     0,   279,   280,
     281,     0,     0,     0,   282,     0,     0,     0,   283,   284,
       0,   285,   286,     0,     0,     0,   287,     0,   288,     0,
       0,   289,   290,     0,     0,   291,     0,     0,   292,   293,
     666,     0,     0,     0,     0,   294,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,     0,     0,     0,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,     0,   322,   323,   324,   325,
       0,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,     0,   347,   348,     0,     0,   349,   350,   351,
     352,   353,     0,     0,     0,   354,   355,     0,     0,     0,
     356,     0,   357,   358,     0,   359,   360,   361,     0,     0,
     362,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     363,   364,   365,     0,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
       0,   380,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,   404,     0,   405,   406,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,     0,   417,   418,     0,   419,   420,   421,
       0,   422,     0,     0,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,     0,
       0,     0,   437,   438,   439,   440,     0,     0,   959,   441,
       0,     0,     0,   442,     0,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,   461,   462,   463,   464,   465,
       0,     0,   466,   467,     0,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,     0,   480,   481,   482,   483,     0,   142,   484,
     485,     0,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,     0,     0,     0,   492,   493,   494,   495,
       0,   496,   497,     0,   498,   499,     0,   500,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
       0,     0,     0,     0,     0,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,     0,   511,   512,   513,   514,
       0,     0,     0,     0,     0,     0,   515,   516,   517,     0,
     518,   519,   520,   521,   145,   146,   522,   147,   148,   149,
     150,   151,     0,     0,   152,   153,     0,     0,     0,   154,
       0,     0,   155,     0,   156,   157,   158,   159,   160,   161,
       0,   162,     0,     0,   974,   163,     0,     0,     0,   164,
       0,     0,   165,   166,   167,     0,   168,     0,   169,   170,
       0,     0,   171,     0,     0,   172,   173,     0,   174,   175,
     176,     0,   177,     0,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,   202,   203,     0,     0,     0,   204,     0,     0,
     205,     0,   206,     0,     0,   207,     0,     0,     0,   208,
     209,   210,     0,     0,   211,     0,     0,     0,     0,   212,
     213,     0,     0,     0,   975,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,   223,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,   228,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,   240,
       0,     0,   241,   242,   243,   244,   245,     0,     0,   246,
     247,     0,   248,   249,   250,   251,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,     0,   257,     0,   258,
       0,   259,     0,   260,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,   266,   267,     0,   268,     0,     0,
     269,   270,     0,     0,     0,   271,   272,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
       0,   279,   280,   281,     0,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,     0,     0,     0,   287,
       0,   288,     0,     0,   289,   290,     0,     0,   291,     0,
       0,   292,   293,   666,     0,     0,     0,     0,   294,   295,
       0,   296,     0,   297,     0,   298,   299,     0,     0,     0,
       0,     0,     0,     0,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,     0,   322,
     323,   324,   325,     0,   326,   327,     0,     0,     0,     0,
     328,   329,   330,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,   337,     0,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,     0,   347,   348,     0,     0,
     349,   350,   351,   352,   353,     0,     0,     0,   354,   355,
       0,     0,     0,   356,     0,   357,   358,     0,   359,   360,
     361,     0,     0,   362,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   363,   364,   365,     0,   366,   367,   368,
       0,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   379,     0,   380,   381,   382,     0,   383,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,     0,
       0,   392,     0,     0,     0,   393,   394,   395,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,   403,   404,
       0,   405,   406,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,     0,   417,   418,     0,
     419,   420,   421,     0,   422,     0,     0,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,     0,     0,     0,   437,   438,   439,   440,     0,
       0,     0,   441,     0,     0,     0,   442,     0,   443,   444,
     445,   446,     0,   447,   448,   449,   450,   451,     0,     0,
       0,     0,     0,   452,   453,   454,     0,   455,   456,     0,
     457,     0,     0,   458,     0,   459,     0,   460,   461,   462,
     463,   464,   465,     0,     0,   466,   467,     0,     0,   468,
     469,   470,   471,   472,   473,     0,     0,   474,   475,   476,
     477,     0,   478,   479,     0,     0,   480,   481,   482,   483,
       0,   142,   484,   485,     0,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,     0,     0,     0,   492,
     493,   494,   495,     0,   496,   497,     0,   498,   499,     0,
     500,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,     0,     0,     0,     0,     0,   507,     0,
     508,     0,     0,   509,     0,     0,     0,   510,     0,   511,
     512,   513,   514,     0,     0,     0,     0,     0,     0,   515,
     516,   517,     0,   518,   519,   520,   521,   145,   146,   522,
     147,   148,   149,   150,   151,     0,     0,   152,   153,     0,
       0,     0,   154,     0,     0,   155,     0,   156,   157,   158,
     159,   160,   161,     0,   162,     0,     0,     0,   163,     0,
       0,     0,   164,     0,     0,   165,   166,   167,     0,   168,
       0,   169,   170,     0,     0,   171,     0,     0,   172,   173,
       0,   174,   175,   176,     0,   177,     0,   178,   179,   180,
     181,   182,   183,     0,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,   197,
     198,     0,   199,   200,   201,   202,   203,     0,     0,     0,
     204,     0,     0,   205,     0,   206,     0,     0,   207,     0,
       0,     0,   208,   209,   210,     0,     0,   211,     0,     0,
       0,     0,   212,   213,     0,     0,     0,     0,   214,   215,
       0,   216,     0,     0,     0,   217,     0,   218,   219,   220,
     221,   222,     0,     0,     0,   223,     0,     0,   224,   225,
     226,     0,     0,     0,   227,     0,   228,   229,     0,   230,
     231,   232,     0,     0,   233,   234,     0,   235,   236,   237,
     238,   239,   240,     0,     0,   241,   242,   243,   244,   245,
       0,     0,   246,   247,     0,   248,   249,   250,   251,   252,
       0,     0,   253,   254,     0,     0,     0,   255,   256,     0,
     257,     0,   258,     0,   259,     0,   260,   261,   262,   263,
       0,   264,     0,   265,     0,     0,     0,   266,   267,     0,
     268,     0,     0,   269,   270,     0,     0,     0,   271,   272,
     273,   274,     0,     0,   275,   276,   277,     0,     0,   278,
       0,     0,     0,     0,   279,   280,   281,     0,     0,     0,
     282,     0,     0,     0,   283,   284,     0,   285,   286,     0,
       0,     0,   287,     0,   288,     0,     0,   289,   290,     0,
       0,   291,     0,     0,   292,   293,     0,     0,     0,     0,
       0,   294,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,  2109,     0,     0,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,     0,   322,   323,   324,   325,     0,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,     0,   347,
     348,     0,     0,   349,   350,   351,   352,   353,     0,     0,
       0,   354,   355,     0,     0,  2110,   356,     0,   357,   358,
       0,   359,   360,   361,     0,     0,   362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,   364,   365,   799,
     366,   367,   368,     0,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,     0,   380,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,   404,     0,   405,   406,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,     0,
     417,   418,     0,   419,   420,   421,     0,   422,     0,     0,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,     0,     0,     0,   437,   438,
     439,   440,     0,     0,     0,   441,     0,     0,     0,   442,
       0,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,     0,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,   461,   462,   463,   464,   465,     0,     0,   466,   467,
       0,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,     0,   480,
     481,   482,   483,     0,     0,   484,   485,     0,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,     0,
       0,     0,   492,   493,   494,   495,  2111,   496,   497,     0,
     498,   499,     0,   500,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,     0,     0,     0,     0,
       0,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   511,   512,   513,   514,     0,     0,     0,     0,
       0,     0,   515,   516,   517,     0,   518,   519,   520,   521,
     145,   146,   522,   147,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,     0,     0,
     956,   163,     0,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,     0,
       0,   172,   173,     0,   174,   175,   176,     0,   177,     0,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
     211,     0,     0,     0,     0,   212,   213,     0,     0,     0,
     957,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,     0,     0,   241,   242,
     243,   244,   245,     0,     0,   246,   247,     0,   248,   249,
     250,   251,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     266,   267,     0,   268,     0,     0,   269,   270,     0,     0,
       0,   271,   272,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,   281,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,     0,   292,   293,   666,
       0,     0,     0,     0,   294,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,     0,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,     0,   322,   323,   324,   325,     0,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,   337,
       0,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,     0,   347,   348,     0,     0,   349,   350,   351,   352,
     353,     0,     0,     0,   354,   355,     0,     0,     0,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,     0,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,     0,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     422,     0,     0,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,     0,
       0,   466,   467,     0,     0,   468,   469,   470,   471,   472,
     473,     0,     0,   474,   475,   476,   477,     0,   478,   479,
       0,     0,   480,   481,   482,   483,     0,   142,   484,   485,
       0,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,     0,     0,     0,   492,   493,   494,   495,     0,
     496,   497,     0,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,     0,
       0,     0,     0,     0,   507,     0,   508,     0,     0,   509,
       0,     0,     0,   510,     0,   511,   512,   513,   514,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,   145,   146,   522,   147,   148,   149,   150,
     151,     0,     0,   152,   153,     0,     0,     0,   154,     0,
       0,   155,     0,   156,   157,   158,   159,   160,   161,     0,
     162,     0,     0,     0,   163,     0,     0,     0,   164,     0,
       0,   165,   166,   167,     0,   168,     0,   169,   170,     0,
       0,   171,     0,     0,   172,   173,     0,   174,   175,   176,
       0,   177,     0,   178,   179,   180,   181,   182,   183,     0,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,   197,   198,     0,   199,   200,
     201,   202,   203,     0,     0,     0,   204,     0,     0,   205,
       0,   206,   665,     0,   207,     0,     0,     0,   208,   209,
     210,     0,     0,   211,     0,     0,     0,     0,   212,   213,
       0,     0,     0,     0,   214,   215,     0,   216,     0,     0,
       0,   217,     0,   218,   219,   220,   221,   222,     0,     0,
       0,   223,     0,     0,   224,   225,   226,     0,     0,     0,
     227,     0,   228,   229,     0,   230,   231,   232,     0,     0,
     233,   234,     0,   235,   236,   237,   238,   239,   240,     0,
       0,   241,   242,   243,   244,   245,     0,     0,   246,   247,
       0,   248,   249,   250,   251,   252,     0,     0,   253,   254,
       0,     0,     0,   255,   256,     0,   257,     0,   258,     0,
     259,     0,   260,   261,   262,   263,     0,   264,     0,   265,
       0,     0,     0,   266,   267,     0,   268,     0,     0,   269,
     270,     0,     0,     0,   271,   272,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,     0,     0,     0,     0,
     279,   280,   281,     0,     0,     0,   282,     0,     0,     0,
     283,   284,     0,   285,   286,     0,     0,     0,   287,     0,
     288,     0,     0,   289,   290,     0,     0,   291,     0,     0,
     292,   293,   666,     0,     0,     0,     0,   294,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,     0,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,   354,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,   361,
       0,     0,   362,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   363,   364,   365,     0,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,     0,   380,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,   404,     0,
     405,   406,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,     0,   417,   418,     0,   419,
     420,   421,     0,   422,     0,     0,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,     0,     0,     0,   437,   438,   439,   440,     0,     0,
       0,   441,     0,     0,     0,   442,     0,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,   461,   462,   463,
     464,   465,     0,     0,   466,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
     142,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,     0,     0,     0,   492,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,   500,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     667,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,     0,     0,     0,     0,     0,     0,   515,   516,
     517,     0,   518,   519,   520,   521,   145,   146,   522,   147,
     148,   149,   150,   151,     0,     0,   152,   153,     0,     0,
       0,   154,     0,     0,   155,     0,   156,   157,   158,   159,
     160,   161,     0,   162,     0,     0,     0,   163,     0,     0,
       0,   164,     0,     0,   165,   166,   167,     0,   168,     0,
     169,   170,     0,     0,   171,     0,     0,   172,   173,     0,
     174,   175,   176,     0,   177,     0,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,     0,   204,
       0,     0,   205,     0,   206,   665,     0,   207,     0,     0,
       0,   208,   209,   210,     0,     0,   211,     0,     0,     0,
       0,   212,   213,     0,     0,     0,     0,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,   223,     0,     0,   224,   225,   226,
       0,     0,     0,   227,     0,   228,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,   240,     0,     0,   241,   242,   243,   244,   245,     0,
       0,   246,   247,     0,   248,   249,   250,   251,   252,     0,
       0,   253,   254,     0,     0,     0,   255,   256,     0,   257,
       0,   258,     0,   259,     0,   260,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,   266,   267,     0,   268,
       0,     0,   269,   270,     0,     0,     0,   271,   272,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,     0,   279,   280,   281,     0,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,     0,     0,
       0,   287,     0,   288,     0,     0,   289,   290,     0,     0,
     291,     0,     0,   292,   293,   666,     0,     0,     0,     0,
     294,   295,     0,   296,     0,   297,     0,   298,   299,     0,
       0,     0,     0,     0,     0,     0,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
       0,   322,   323,   324,   325,     0,   326,   327,     0,     0,
       0,     0,   328,   329,   330,   331,   332,   333,     0,     0,
     334,   335,     0,   336,     0,   337,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,     0,   347,   348,
       0,     0,   349,   350,   351,   352,   353,     0,     0,     0,
     354,   355,     0,     0,     0,   356,     0,   357,   358,     0,
     359,   360,   361,     0,     0,   362,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   363,   364,   365,     0,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,     0,   380,   381,   382,     0,
     383,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,     0,     0,   392,     0,     0,     0,   393,   394,   395,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
     403,   404,     0,   405,   406,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,     0,   416,     0,   417,
     418,     0,   419,   420,   421,     0,   422,     0,     0,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,     0,     0,     0,   437,   438,   439,
     440,     0,     0,     0,   441,     0,     0,     0,   442,     0,
     443,   444,   445,   446,     0,   447,   448,   449,   450,   451,
       0,     0,     0,     0,     0,   452,   453,   454,     0,   455,
     456,     0,   457,     0,     0,   458,     0,   459,     0,   460,
     461,   462,   463,   464,   465,     0,     0,   466,   467,     0,
       0,   468,   469,   470,   471,   472,   473,     0,     0,   474,
     475,   476,   477,     0,   478,   479,     0,     0,   480,   481,
     482,   483,     0,   142,   484,   485,     0,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,     0,     0,
       0,   492,   493,   494,   495,     0,   496,   497,     0,   498,
     499,     0,   500,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,     0,     0,     0,     0,     0,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
       0,   511,   512,   513,   514,     0,     0,     0,     0,     0,
       0,   515,   516,   517,     0,   518,   519,   520,   521,   145,
     146,   522,   147,   148,   149,   150,   151,  1526,     0,   152,
     153,     0,     0,     0,   154,     0,     0,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,     0,     0,     0,
     163,     0,     0,     0,   164,     0,     0,   165,   166,   167,
       0,   168,     0,   169,   170,     0,     0,   171,     0,     0,
     172,   173,     0,   174,   175,   176,     0,   177,     0,   178,
     179,   180,   181,   182,   183,     0,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,   197,   198,     0,   199,   200,   201,   202,   203,     0,
       0,     0,   204,     0,     0,   205,     0,   206,     0,     0,
     207,     0,     0,     0,   208,   209,   210,     0,     0,   211,
       0,     0,     0,     0,   212,   213,     0,     0,     0,     0,
     214,   215,     0,   216,     0,     0,     0,   217,     0,   218,
     219,   220,   221,   222,     0,     0,     0,   223,     0,     0,
     224,   225,   226,     0,     0,     0,   227,     0,   228,   229,
       0,   230,   231,   232,     0,     0,   233,   234,     0,   235,
     236,   237,   238,   239,   240,     0,     0,   241,   242,   243,
     244,   245,     0,     0,   246,   247,     0,   248,   249,   250,
     251,   252,     0,     0,   253,   254,     0,     0,     0,   255,
     256,     0,   257,     0,   258,     0,   259,     0,   260,   261,
     262,   263,     0,   264,     0,   265,     0,     0,     0,   266,
     267,     0,   268,     0,     0,   269,   270,     0,     0,     0,
     271,   272,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,     0,     0,     0,     0,   279,   280,   281,     0,
       0,     0,   282,     0,     0,     0,   283,   284,     0,   285,
     286,     0,     0,     0,   287,     0,   288,     0,     0,   289,
     290,     0,     0,   291,     0,     0,   292,   293,   666,     0,
       0,     0,     0,   294,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,     0,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,     0,   322,   323,   324,   325,     0,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
       0,   347,   348,     0,     0,   349,   350,   351,   352,   353,
       0,     0,     0,   354,   355,     0,     0,     0,   356,     0,
     357,   358,     0,   359,   360,   361,     0,     0,   362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   363,   364,
     365,     0,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,     0,   380,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,   404,     0,   405,   406,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,     0,   417,   418,     0,   419,   420,   421,     0,   422,
       0,     0,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,     0,     0,     0,
     437,   438,   439,   440,     0,     0,     0,   441,     0,     0,
       0,   442,     0,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,   461,   462,   463,   464,   465,     0,     0,
     466,   467,     0,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
       0,   480,   481,   482,   483,     0,   142,   484,   485,     0,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,     0,     0,     0,   492,   493,   494,   495,     0,   496,
     497,     0,   498,   499,     0,   500,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,     0,     0,
       0,     0,     0,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,     0,   511,   512,   513,   514,     0,     0,
       0,     0,     0,     0,   515,   516,   517,     0,   518,   519,
     520,   521,   145,   146,   522,   147,   148,   149,   150,   151,
       0,     0,   152,   153,     0,     0,     0,   154,     0,     0,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,  1040,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   176,     0,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,     0,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,   266,   267,     0,   268,  1041,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,   287,     0,   288,
       0,     0,   289,   290,     0,     0,   291,     0,     0,   292,
     293,     0,     0,     0,     0,     0,   294,   295,     0,   296,
       0,   297,     0,   298,   299,     0,     0,     0,     0,     0,
       0,     0,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,     0,   322,   323,   324,
     325,     0,   326,   327,     0,     0,     0,     0,   328,   329,
     330,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,   337,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,     0,   347,   348,     0,     0,   349,   350,
     351,   352,   353,     0,     0,     0,   354,   355,     0,     0,
       0,   356,     0,   357,   358,     0,   359,   360,   361,     0,
       0,   362,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   363,   364,   365,     0,   366,   367,   368,     0,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,     0,   380,   381,   382,     0,   383,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,     0,     0,   392,
       0,     0,     0,   393,   394,   395,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,   403,   404,     0,   405,
     406,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,     0,   416,     0,   417,   418,     0,   419,   420,
     421,     0,   422,     0,     0,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
       0,     0,     0,   437,   438,   439,   440,     0,     0,     0,
     441,     0,     0,     0,   442,     0,   443,   444,   445,   446,
       0,   447,   448,   449,   450,   451,     0,     0,     0,     0,
       0,   452,   453,   454,     0,   455,   456,     0,   457,     0,
       0,   458,     0,   459,     0,   460,   461,   462,   463,   464,
     465,     0,     0,   466,   467,     0,     0,   468,   469,   470,
     471,   472,   473,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,     0,   480,   481,   482,   483,     0,  1042,
     484,   485,     0,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,     0,     0,     0,   492,   493,   494,
     495,     0,   496,   497,     0,   498,   499,     0,   500,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,     0,     0,     0,     0,     0,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   511,   512,   513,
     514,     0,     0,     0,     0,     0,     0,   515,   516,   517,
       0,   518,   519,   520,   521,   145,   146,   522,   147,   148,
     149,   150,   151,     0,     0,   152,   153,     0,     0,     0,
     154,     0,     0,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,     0,     0,     0,   163,     0,     0,     0,
     164,     0,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,     0,     0,   172,   173,     0,   174,
     175,   176,     0,   177,     0,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   202,   203,     0,     0,     0,   204,     0,
       0,   205,     0,   206,     0,     0,   207,     0,     0,     0,
     208,   209,   210,     0,     0,   211,     0,     0,     0,     0,
     212,   213,     0,     0,     0,  2124,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,     0,     0,   241,   242,   243,   244,   245,     0,     0,
     246,   247,     0,   248,   249,   250,   251,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,   266,   267,     0,   268,     0,
       0,   269,   270,     0,     0,     0,   271,   272,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,     0,   279,   280,   281,     0,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,     0,   292,   293,   666,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,     0,   347,   348,     0,
       0,   349,   350,   351,   352,   353,     0,     0,     0,   354,
     355,     0,     0,     0,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,     0,   366,   367,
     368,     0,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   422,     0,     0,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,     0,     0,   466,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,   142,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
     492,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,   145,   146,
     522,   147,   148,   149,   150,   151,     0,     0,   152,   153,
       0,     0,     0,   154,     0,     0,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,     0,     0,   956,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,     0,     0,   172,
     173,     0,   174,   175,   176,     0,   177,     0,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,     0,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,   213,     0,     0,     0,     0,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,     0,   248,   249,   250,   251,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
       0,   257,     0,   258,     0,   259,     0,   260,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,   266,   267,
       0,   268,     0,     0,   269,   270,     0,     0,     0,   271,
     272,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,   281,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,   287,     0,   288,     0,     0,   289,   290,
       0,     0,   291,     0,     0,   292,   293,   666,     0,     0,
       0,     0,   294,   295,     0,   296,     0,   297,     0,   298,
     299,     0,     0,     0,     0,     0,     0,     0,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,     0,   322,   323,   324,   325,     0,   326,   327,
       0,     0,     0,     0,   328,   329,   330,   331,   332,   333,
       0,     0,   334,   335,     0,   336,     0,   337,     0,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,     0,
     347,   348,     0,     0,   349,   350,   351,   352,   353,     0,
       0,     0,   354,   355,     0,     0,     0,   356,     0,   357,
     358,     0,   359,   360,   361,     0,     0,   362,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   363,   364,   365,
       0,   366,   367,   368,     0,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,     0,   379,     0,   380,   381,
     382,     0,   383,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,     0,     0,   392,     0,     0,     0,   393,
     394,   395,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,   403,   404,     0,   405,   406,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   414,   415,     0,   416,
       0,   417,   418,     0,   419,   420,   421,     0,   422,     0,
       0,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,     0,   435,   436,     0,     0,     0,   437,
     438,   439,   440,     0,     0,     0,   441,     0,     0,     0,
     442,     0,   443,   444,   445,   446,     0,   447,   448,   449,
     450,   451,     0,     0,     0,     0,     0,   452,   453,   454,
       0,   455,   456,     0,   457,     0,     0,   458,     0,   459,
       0,   460,   461,   462,   463,   464,   465,     0,     0,   466,
     467,     0,     0,   468,   469,   470,   471,   472,   473,     0,
       0,   474,   475,   476,   477,     0,   478,   479,     0,     0,
     480,   481,   482,   483,     0,   142,   484,   485,     0,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
       0,     0,     0,   492,   493,   494,   495,     0,   496,   497,
       0,   498,   499,     0,   500,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,     0,     0,     0,
       0,     0,   507,     0,   508,     0,     0,   509,     0,     0,
       0,   510,     0,   511,   512,   513,   514,     0,     0,     0,
       0,     0,     0,   515,   516,   517,     0,   518,   519,   520,
     521,   145,   146,   522,   147,   148,   149,   150,   151,     0,
       0,   152,   153,     0,     0,     0,   154,     0,     0,   155,
       0,   156,   157,   158,   159,   160,   161,     0,   162,     0,
       0,     0,   163,     0,     0,     0,   164,     0,     0,   165,
     166,   167,     0,   168,     0,   169,   170,     0,     0,   171,
       0,     0,   172,   173,     0,   174,   175,   176,     0,   177,
       0,   178,   179,   180,   181,   182,   183,     0,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,   197,   198,     0,   199,   200,   201,   202,
     203,     0,     0,     0,   204,     0,     0,   205,     0,   206,
       0,     0,   207,     0,     0,     0,   208,   209,   210,     0,
       0,   211,     0,     0,     0,     0,   212,   213,     0,     0,
       0,     0,   214,   215,     0,   216,     0,     0,     0,   217,
       0,   218,   219,   220,   221,   222,     0,     0,     0,   223,
       0,     0,   224,   225,   226,     0,     0,     0,   227,     0,
     228,   229,     0,   230,   231,   232,     0,     0,   233,   234,
       0,   235,   236,   237,   238,   239,   240,     0,     0,   241,
     242,   243,   244,   245,     0,     0,   246,   247,     0,   248,
     249,   250,   251,   252,     0,     0,   253,   254,     0,     0,
       0,   255,   256,     0,   257,     0,   258,     0,   259,     0,
     260,   261,   262,   263,     0,   264,     0,   265,     0,     0,
       0,   266,   267,     0,   268,     0,     0,   269,   270,     0,
       0,     0,   271,   272,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,     0,     0,     0,     0,   279,   280,
     281,     0,     0,     0,   282,     0,     0,     0,   283,   284,
       0,   285,   286,     0,     0,     0,   287,     0,   288,     0,
       0,   289,   290,     0,     0,   291,     0,     0,   292,   293,
     666,     0,     0,     0,     0,   294,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,     0,     0,     0,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,     0,   322,   323,   324,   325,
       0,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,     0,   347,   348,     0,     0,   349,   350,   351,
     352,   353,     0,     0,     0,   354,   355,     0,     0,     0,
     356,     0,   357,   358,     0,   359,   360,   361,     0,     0,
     362,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     363,   364,   365,     0,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
       0,   380,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,   404,     0,   405,   406,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,     0,   417,   418,     0,   419,   420,   421,
       0,   422,     0,     0,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,     0,
       0,     0,   437,   438,   439,   440,     0,     0,     0,   441,
       0,     0,     0,   442,     0,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,   461,   462,   463,   464,   465,
       0,     0,   466,   467,     0,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,     0,   480,   481,   482,   483,     0,   142,   484,
     485,     0,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,     0,     0,     0,   492,   493,   494,   495,
       0,   496,   497,     0,   498,   499,     0,   500,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
       0,     0,     0,     0,     0,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,     0,   511,   512,   513,   514,
       0,     0,     0,     0,     0,     0,   515,   516,   517,     0,
     518,   519,   520,   521,   145,   146,   522,   147,   148,   149,
     150,   151,     0,     0,   152,   153,     0,     0,     0,   154,
       0,     0,   155,     0,   156,   157,   158,   159,   160,   161,
       0,   162,     0,     0,     0,   163,     0,     0,     0,   164,
       0,     0,   165,   166,   167,     0,   168,     0,   169,   170,
       0,     0,   171,     0,     0,   172,   173,     0,   174,   175,
     176,     0,   177,     0,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,   202,   203,  4563,     0,     0,   204,     0,     0,
     205,     0,   206,     0,     0,   207,     0,     0,     0,   208,
     209,   210,     0,     0,   211,     0,     0,     0,     0,   212,
     213,     0,     0,     0,     0,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,   223,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,   228,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,   240,
       0,  4564,   241,   242,   243,   244,   245,     0,     0,   246,
     247,     0,   248,   249,   250,   251,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,     0,   257,     0,   258,
       0,   259,     0,   260,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,   266,   267,     0,   268,     0,     0,
     269,   270,     0,     0,     0,   271,   272,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
       0,   279,   280,   281,     0,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,     0,     0,     0,   287,
       0,   288,     0,     0,   289,   290,     0,     0,   291,     0,
       0,   292,   293,     0,     0,     0,     0,     0,   294,   295,
       0,   296,     0,   297,     0,   298,   299,     0,     0,     0,
       0,     0,     0,     0,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,     0,   322,
     323,   324,   325,     0,   326,   327,     0,     0,     0,     0,
     328,   329,   330,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,   337,     0,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,     0,   347,   348,     0,     0,
     349,   350,   351,   352,   353,     0,     0,     0,   354,   355,
       0,     0,     0,   356,     0,   357,   358,     0,   359,   360,
     361,     0,     0,   362,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   363,   364,   365,     0,   366,   367,   368,
       0,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   379,     0,   380,   381,   382,     0,   383,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,     0,
       0,   392,     0,     0,     0,   393,   394,   395,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,   403,   404,
       0,   405,   406,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,     0,   417,   418,     0,
     419,   420,   421,     0,   422,     0,     0,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,     0,     0,     0,   437,   438,   439,   440,     0,
       0,     0,   441,     0,     0,     0,   442,     0,   443,   444,
     445,   446,     0,   447,   448,   449,   450,   451,     0,     0,
       0,     0,     0,   452,   453,   454,     0,   455,   456,     0,
     457,     0,     0,   458,     0,   459,     0,   460,   461,   462,
     463,   464,   465,     0,     0,   466,   467,     0,     0,   468,
     469,   470,   471,   472,   473,     0,     0,   474,   475,   476,
     477,     0,   478,   479,     0,     0,   480,   481,   482,   483,
       0,     0,   484,   485,     0,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,     0,     0,     0,   492,
     493,   494,   495,     0,   496,   497,     0,   498,   499,     0,
     500,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,     0,     0,     0,     0,     0,   507,     0,
     508,     0,     0,   509,     0,     0,     0,   510,     0,   511,
     512,   513,   514,     0,     0,     0,     0,     0,     0,   515,
     516,   517,     0,   518,   519,   520,   521,   145,   146,   522,
     147,   148,   149,   150,   151,     0,     0,   152,   153,     0,
       0,     0,   154,     0,     0,   155,     0,   156,   157,   158,
     159,   160,   161,     0,   162,     0,     0,     0,   163,     0,
       0,     0,   164,     0,     0,   165,   166,   167,     0,   168,
       0,   169,   170,     0,     0,   171,     0,     0,   172,   173,
       0,   174,   175,   176,     0,   177,     0,   178,   179,   180,
     181,   182,   183,     0,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,   197,
     198,     0,   199,   200,   201,   202,   203,     0,     0,     0,
     204,     0,     0,   205,     0,   206,     0,     0,   207,     0,
       0,     0,   208,   209,   210,     0,     0,   211,     0,     0,
       0,     0,   212,   213,     0,     0,     0,     0,   214,   215,
       0,   216,     0,     0,     0,   217,     0,   218,   219,   220,
     221,   222,     0,     0,     0,   223,     0,     0,   224,   225,
     226,     0,     0,     0,   227,     0,   228,   229,     0,   230,
     231,   232,     0,     0,   233,   234,     0,   235,   236,   237,
     238,   239,   240,     0,     0,   241,   242,   243,   244,   245,
       0,     0,   246,   247,     0,   248,   249,   250,   251,   252,
       0,     0,   253,   254,     0,     0,     0,   255,   256,     0,
     257,     0,   258,     0,   259,     0,   260,   261,   262,   263,
       0,   264,     0,   265,     0,     0,     0,   266,   267,     0,
     268,     0,     0,   269,   270,     0,     0,     0,   271,   272,
     273,   274,     0,     0,   275,   276,   277,     0,     0,   278,
       0,     0,     0,     0,   279,   280,   281,     0,     0,     0,
     282,     0,     0,     0,   283,   284,     0,   285,   286,     0,
       0,     0,   287,     0,   288,     0,     0,   289,   290,     0,
       0,   291,     0,     0,   292,   293,     0,     0,     0,     0,
       0,   294,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,     0,     0,     0,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,     0,   322,   323,   324,   325,     0,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,     0,   347,
     348,     0,     0,   349,   350,   351,   352,   353,     0,     0,
       0,   354,   355,     0,     0,     0,   356,     0,   357,   358,
       0,   359,   360,   361,     0,     0,   362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,   364,   365,     0,
     366,   367,   368,     0,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,     0,   380,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,   404,     0,   405,   406,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,     0,
     417,   418,     0,   419,   420,   421,     0,   422,     0,     0,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,     0,     0,     0,   437,   438,
     439,   440,     0,     0,     0,   441,     0,     0,     0,   442,
       0,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,     0,     0,     0,   610,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,   461,   462,   463,   464,   465,     0,     0,   466,   467,
       0,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,     0,   480,
     481,   482,   483,     0,     0,   484,   485,     0,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,     0,
       0,     0,   492,   493,   494,   495,     0,   496,   497,     0,
     498,   499,     0,   500,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,     0,     0,     0,     0,
       0,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   511,   512,   513,   514,     0,     0,     0,     0,
       0,     0,   515,   516,   517,     0,   518,   519,   520,   521,
     145,   146,   522,   147,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,     0,     0,
       0,   163,     0,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,     0,
       0,   172,   173,     0,   174,   175,   176,     0,   177,     0,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
     211,     0,     0,     0,     0,   212,   213,     0,     0,     0,
       0,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,     0,     0,   241,   242,
     243,   244,   245,     0,     0,   246,   247,     0,   248,   249,
     250,   251,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,   735,   257,     0,   258,     0,   259,     0,   260,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     266,   267,     0,   268,     0,     0,   269,   270,     0,     0,
       0,   271,   272,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,   281,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,     0,   292,   293,     0,
       0,     0,     0,     0,   294,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,     0,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,     0,   322,   323,   324,   325,     0,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,   337,
       0,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,     0,   347,   348,     0,     0,   349,   350,   351,   352,
     353,     0,     0,     0,   354,   355,     0,     0,     0,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,     0,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,     0,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     422,     0,     0,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,     0,
       0,   466,   467,     0,     0,   468,   469,   470,   471,   472,
     473,     0,     0,   474,   475,   476,   477,     0,   478,   479,
       0,     0,   480,   481,   482,   483,     0,     0,   484,   485,
       0,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,     0,     0,     0,   492,   493,   494,   495,     0,
     496,   497,     0,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,     0,
       0,     0,     0,     0,   507,     0,   508,     0,     0,   509,
       0,     0,     0,   510,     0,   511,   512,   513,   514,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,   145,   146,   522,   147,   148,   149,   150,
     151,     0,     0,   152,   153,     0,     0,     0,   154,     0,
       0,   155,     0,   156,   157,   158,   159,   160,   161,     0,
     162,     0,     0,     0,   163,     0,     0,     0,   164,     0,
       0,   165,   166,   167,     0,   168,     0,   169,   170,     0,
       0,   171,     0,     0,   172,   173,     0,   174,   175,   176,
       0,   177,     0,   178,   179,   180,   181,   182,   183,     0,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,   197,   198,     0,   199,   200,
     201,   202,   203,     0,     0,     0,   204,     0,     0,   205,
       0,   206,     0,     0,   207,     0,     0,     0,   208,   209,
     210,     0,     0,   211,     0,     0,     0,     0,   212,   213,
       0,     0,     0,   623,   214,   215,     0,   216,     0,     0,
       0,   217,     0,   218,   219,   220,   221,   222,     0,     0,
       0,   223,     0,     0,   224,   225,   226,     0,     0,     0,
     227,     0,   228,   229,     0,   230,   231,   232,     0,     0,
     233,   234,     0,   235,   236,   237,   238,   239,   240,     0,
       0,   241,   242,   243,   244,   245,     0,     0,   246,   247,
       0,   248,   249,   250,   251,   252,     0,     0,   253,   254,
       0,     0,     0,   255,   256,     0,   257,     0,   258,     0,
     259,     0,   260,   261,   262,   263,     0,   264,     0,   265,
       0,     0,     0,   266,   267,     0,   268,     0,     0,   269,
     270,     0,     0,     0,   271,   272,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,     0,     0,     0,     0,
     279,   280,   281,     0,     0,     0,   282,     0,     0,     0,
     283,   284,     0,   285,   286,     0,     0,     0,   287,     0,
     288,     0,     0,   289,   290,     0,     0,   291,     0,     0,
     292,   293,     0,     0,     0,     0,     0,   294,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,     0,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,   354,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,   361,
       0,     0,   362,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   363,   364,   365,     0,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,     0,   380,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,   404,     0,
     405,   406,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,     0,   417,   418,     0,   419,
     420,   421,     0,   422,     0,     0,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,     0,     0,     0,   437,   438,   439,   440,     0,     0,
       0,   441,     0,     0,     0,   442,     0,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,   461,   462,   463,
     464,   465,     0,     0,   466,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
       0,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   980,   491,     0,     0,     0,   492,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,   500,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,     0,     0,     0,     0,     0,     0,   515,   516,
     517,     0,   518,   519,   520,   521,   145,   146,   522,   147,
     148,   149,   150,   151,     0,     0,   152,   153,     0,     0,
       0,   154,     0,     0,   155,     0,   156,   157,   158,   159,
     160,   161,     0,   162,     0,     0,     0,   163,     0,     0,
       0,   164,     0,     0,   165,   166,   167,     0,   168,     0,
     169,   170,     0,     0,   171,     0,     0,   172,   173,     0,
     174,   175,   176,     0,   177,     0,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,     0,   204,
       0,     0,   205,     0,   206,     0,     0,   207,     0,     0,
       0,   208,   209,   210,     0,     0,   211,     0,     0,     0,
       0,   212,   213,     0,     0,     0,     0,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,   223,     0,     0,   224,   225,   226,
       0,     0,     0,   227,     0,   228,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,   240,     0,     0,   241,   242,   243,   244,   245,     0,
       0,   246,   247,     0,   248,   249,   250,   251,   252,     0,
       0,   253,   254,     0,     0,     0,   255,   256,     0,   257,
       0,   258,     0,   259,     0,   260,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,   266,   267,     0,   268,
       0,     0,   269,   270,     0,     0,     0,   271,   272,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,     0,   279,   280,   281,     0,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,     0,     0,
       0,   287,     0,   288,     0,     0,   289,   290,     0,     0,
     291,     0,     0,   292,   293,     0,     0,     0,     0,     0,
     294,   295,     0,   296,     0,   297,     0,   298,   299,     0,
       0,     0,     0,     0,     0,     0,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
       0,   322,   323,   324,   325,     0,   326,   327,     0,     0,
       0,     0,   328,   329,   330,   331,   332,   333,     0,     0,
     334,   335,     0,   336,     0,   337,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,     0,   347,   348,
       0,     0,   349,   350,   351,   352,   353,     0,     0,     0,
     354,   355,     0,     0,     0,   356,     0,   357,   358,     0,
     359,   360,   361,     0,     0,   362,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   363,   364,   365,     0,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,     0,   380,   381,   382,     0,
     383,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,     0,     0,   392,     0,     0,     0,   393,   394,   395,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
     403,   404,     0,   405,   406,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,     0,   416,     0,   417,
     418,     0,   419,   420,   421,     0,   422,     0,     0,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,     0,     0,     0,   437,   438,   439,
     440,     0,     0,     0,   441,     0,     0,     0,   442,     0,
     443,   444,   445,   446,     0,   447,   448,   449,   450,   451,
       0,     0,     0,     0,     0,   452,   453,   454,     0,   455,
     456,     0,   457,     0,     0,   458,     0,   459,     0,   460,
     461,   462,   463,   464,   465,     0,     0,   466,   467,     0,
       0,   468,   469,   470,   471,   472,   473,     0,     0,   474,
     475,   476,   477,     0,   478,   479,     0,     0,   480,   481,
     482,   483,     0,   142,   484,   485,     0,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,     0,     0,
       0,   492,   493,   494,   495,     0,   496,   497,     0,   498,
     499,     0,   500,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,     0,     0,     0,     0,     0,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
       0,   511,   512,   513,   514,     0,     0,     0,     0,     0,
       0,   515,   516,   517,     0,   518,   519,   520,   521,   145,
     146,   522,   147,   148,   149,   150,   151,     0,     0,   152,
     153,     0,     0,     0,   154,     0,     0,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,     0,     0,     0,
     163,     0,     0,     0,   164,     0,     0,   165,   166,   167,
       0,   168,     0,   169,   170,     0,     0,   171,     0,     0,
     172,   173,     0,   174,   175,   176,     0,   177,     0,   178,
     179,   180,   181,   182,   183,     0,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,   197,   198,     0,   199,   200,   201,   202,   203,     0,
       0,     0,   204,     0,     0,   205,     0,   206,     0,     0,
     207,     0,     0,     0,   208,   209,   210,     0,     0,   211,
       0,     0,     0,     0,   212,   213,     0,     0,     0,   623,
     214,   215,     0,   216,     0,     0,     0,   217,     0,   218,
     219,   220,   221,   222,     0,     0,     0,   223,     0,     0,
     224,   225,   226,     0,     0,     0,   227,     0,   228,   229,
       0,   230,   231,   232,     0,     0,   233,   234,     0,   235,
     236,   237,   238,   239,   240,     0,     0,   241,   242,   243,
     244,   245,     0,     0,   246,   247,     0,   248,   249,   250,
     251,   252,     0,     0,   253,   254,     0,     0,     0,   255,
     256,     0,   257,     0,   258,     0,   259,     0,   260,   261,
     262,   263,     0,   264,     0,   265,     0,     0,     0,   266,
     267,     0,   268,     0,     0,   269,   270,     0,     0,     0,
     271,   272,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,     0,     0,     0,     0,   279,   280,   281,     0,
       0,     0,   282,     0,     0,     0,   283,   284,     0,   285,
     286,     0,     0,     0,   287,     0,   288,     0,     0,   289,
     290,     0,     0,   291,     0,     0,   292,   293,     0,     0,
       0,     0,     0,   294,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,     0,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,     0,   322,   323,   324,   325,     0,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
       0,   347,   348,     0,     0,   349,   350,   351,   352,   353,
       0,     0,     0,   354,   355,     0,     0,     0,   356,     0,
     357,   358,     0,   359,   360,   361,     0,     0,   362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   363,   364,
     365,     0,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,     0,   380,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,   404,     0,   405,   406,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,     0,   417,   418,     0,   419,   420,   421,     0,   422,
       0,     0,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,     0,     0,     0,
     437,   438,   439,   440,     0,     0,     0,   441,     0,     0,
       0,   442,     0,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,   461,   462,   463,   464,   465,     0,     0,
     466,   467,     0,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
       0,   480,   481,   482,   483,     0,     0,   484,   485,     0,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,     0,     0,     0,   492,   493,   494,   495,     0,   496,
     497,     0,   498,   499,     0,   500,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,     0,     0,
       0,     0,     0,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,     0,   511,   512,   513,   514,     0,     0,
       0,     0,     0,     0,   515,   516,   517,     0,   518,   519,
     520,   521,   145,   146,   522,   147,   148,   149,   150,   151,
       0,     0,   152,   153,     0,     0,     0,   154,     0,     0,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   176,     0,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,  2397,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,   266,   267,     0,   268,     0,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,   287,     0,   288,
       0,     0,   289,   290,     0,     0,   291,     0,     0,   292,
     293,     0,     0,     0,     0,     0,   294,   295,     0,   296,
       0,   297,     0,   298,   299,     0,     0,     0,     0,     0,
       0,     0,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,     0,   322,   323,   324,
     325,     0,   326,   327,     0,     0,     0,     0,   328,   329,
     330,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,   337,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,     0,   347,   348,     0,     0,   349,   350,
     351,   352,   353,     0,     0,     0,   354,   355,     0,     0,
       0,   356,     0,   357,   358,     0,   359,   360,   361,     0,
       0,   362,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   363,   364,   365,     0,   366,   367,   368,     0,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,     0,   380,   381,   382,     0,   383,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,     0,     0,   392,
       0,     0,     0,   393,   394,   395,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,   403,   404,     0,   405,
     406,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,     0,   416,     0,   417,   418,     0,   419,   420,
     421,     0,   422,     0,     0,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
       0,     0,     0,   437,   438,   439,   440,     0,     0,     0,
     441,     0,     0,     0,   442,     0,   443,   444,   445,   446,
       0,   447,   448,   449,   450,   451,     0,     0,     0,     0,
       0,   452,   453,   454,     0,   455,   456,     0,   457,     0,
       0,   458,     0,   459,     0,   460,   461,   462,   463,   464,
     465,     0,     0,   466,   467,     0,     0,   468,   469,   470,
     471,   472,   473,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,     0,   480,   481,   482,   483,     0,     0,
     484,   485,     0,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,     0,     0,     0,   492,   493,   494,
     495,     0,   496,   497,     0,   498,   499,     0,   500,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,     0,     0,     0,     0,     0,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   511,   512,   513,
     514,     0,     0,     0,     0,     0,     0,   515,   516,   517,
       0,   518,   519,   520,   521,   145,   146,   522,   147,   148,
     149,   150,   151,     0,     0,   152,   153,     0,     0,     0,
     154,     0,     0,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,     0,     0,     0,   163,     0,     0,     0,
     164,     0,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,     0,     0,   172,   173,     0,   174,
     175,   176,     0,   177,     0,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   202,   203,     0,     0,     0,   204,     0,
       0,   205,     0,   206,     0,     0,   207,     0,     0,     0,
     208,   209,   210,     0,     0,   211,     0,     0,     0,     0,
     212,   213,     0,     0,     0,  2854,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,     0,     0,   241,   242,   243,   244,   245,     0,     0,
     246,   247,     0,   248,   249,   250,   251,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,   266,   267,     0,   268,     0,
       0,   269,   270,     0,     0,     0,   271,   272,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,     0,   279,   280,   281,     0,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,     0,   292,   293,     0,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,     0,   347,   348,     0,
       0,   349,   350,   351,   352,   353,     0,     0,     0,   354,
     355,     0,     0,     0,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,     0,   366,   367,
     368,     0,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   422,     0,     0,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,     0,     0,   466,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,     0,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
     492,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,   145,   146,
     522,   147,   148,   149,   150,   151,  2862,     0,   152,   153,
       0,     0,     0,   154,     0,     0,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,     0,     0,     0,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,     0,     0,   172,
     173,     0,   174,   175,   176,     0,   177,     0,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,     0,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,   213,     0,     0,     0,     0,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,     0,   248,   249,   250,   251,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
       0,   257,     0,   258,     0,   259,     0,   260,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,   266,   267,
       0,   268,     0,     0,   269,   270,     0,     0,     0,   271,
     272,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,   281,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,   287,     0,   288,     0,     0,   289,   290,
       0,     0,   291,     0,     0,   292,   293,     0,     0,     0,
       0,     0,   294,   295,     0,   296,     0,   297,     0,   298,
     299,     0,     0,     0,     0,     0,     0,     0,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,     0,   322,   323,   324,   325,     0,   326,   327,
       0,     0,     0,     0,   328,   329,   330,   331,   332,   333,
       0,     0,   334,   335,     0,   336,     0,   337,     0,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,     0,
     347,   348,     0,     0,   349,   350,   351,   352,   353,     0,
       0,     0,   354,   355,     0,     0,     0,   356,     0,   357,
     358,     0,   359,   360,   361,     0,     0,   362,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   363,   364,   365,
       0,   366,   367,   368,     0,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,     0,   379,     0,   380,   381,
     382,     0,   383,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,     0,     0,   392,     0,     0,     0,   393,
     394,   395,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,   403,   404,     0,   405,   406,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   414,   415,     0,   416,
       0,   417,   418,     0,   419,   420,   421,     0,   422,     0,
       0,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,     0,   435,   436,     0,     0,     0,   437,
     438,   439,   440,     0,     0,     0,   441,     0,     0,     0,
     442,     0,   443,   444,   445,   446,     0,   447,   448,   449,
     450,   451,     0,     0,     0,     0,     0,   452,   453,   454,
       0,   455,   456,     0,   457,     0,     0,   458,     0,   459,
       0,   460,   461,   462,   463,   464,   465,     0,     0,   466,
     467,     0,     0,   468,   469,   470,   471,   472,   473,     0,
       0,   474,   475,   476,   477,     0,   478,   479,     0,     0,
     480,   481,   482,   483,     0,     0,   484,   485,     0,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
       0,     0,     0,   492,   493,   494,   495,     0,   496,   497,
       0,   498,   499,     0,   500,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,     0,     0,     0,
       0,     0,   507,     0,   508,     0,     0,   509,     0,     0,
       0,   510,     0,   511,   512,   513,   514,     0,     0,     0,
       0,     0,     0,   515,   516,   517,     0,   518,   519,   520,
     521,   145,   146,   522,   147,   148,   149,   150,   151,     0,
       0,   152,   153,     0,     0,     0,   154,     0,     0,   155,
       0,   156,   157,   158,   159,   160,   161,     0,   162,     0,
       0,     0,   163,     0,     0,     0,   164,     0,     0,   165,
     166,   167,     0,   168,     0,   169,   170,     0,     0,   171,
       0,     0,   172,   173,     0,   174,   175,   176,     0,   177,
       0,   178,   179,   180,   181,   182,   183,     0,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,   197,   198,     0,   199,   200,   201,   202,
     203,     0,     0,     0,   204,     0,     0,   205,     0,   206,
       0,     0,   207,     0,     0,     0,   208,   209,   210,     0,
       0,   211,     0,     0,     0,     0,   212,   213,     0,     0,
       0,  2891,   214,   215,     0,   216,     0,     0,     0,   217,
       0,   218,   219,   220,   221,   222,     0,     0,     0,   223,
       0,     0,   224,   225,   226,     0,     0,     0,   227,     0,
     228,   229,     0,   230,   231,   232,     0,     0,   233,   234,
       0,   235,   236,   237,   238,   239,   240,     0,     0,   241,
     242,   243,   244,   245,     0,     0,   246,   247,     0,   248,
     249,   250,   251,   252,     0,     0,   253,   254,     0,     0,
       0,   255,   256,     0,   257,     0,   258,     0,   259,     0,
     260,   261,   262,   263,     0,   264,     0,   265,     0,     0,
       0,   266,   267,     0,   268,     0,     0,   269,   270,     0,
       0,     0,   271,   272,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,     0,     0,     0,     0,   279,   280,
     281,     0,     0,     0,   282,     0,     0,     0,   283,   284,
       0,   285,   286,     0,     0,     0,   287,     0,   288,     0,
       0,   289,   290,     0,     0,   291,     0,     0,   292,   293,
       0,     0,     0,     0,     0,   294,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,     0,     0,     0,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,     0,   322,   323,   324,   325,
       0,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,     0,   347,   348,     0,     0,   349,   350,   351,
     352,   353,     0,     0,     0,   354,   355,     0,     0,     0,
     356,     0,   357,   358,     0,   359,   360,   361,     0,     0,
     362,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     363,   364,   365,     0,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
       0,   380,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,   404,     0,   405,   406,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,     0,   417,   418,     0,   419,   420,   421,
       0,   422,     0,     0,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,     0,
       0,     0,   437,   438,   439,   440,     0,     0,     0,   441,
       0,     0,     0,   442,     0,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,   461,   462,   463,   464,   465,
       0,     0,   466,   467,     0,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,     0,   480,   481,   482,   483,     0,     0,   484,
     485,     0,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,     0,     0,     0,   492,   493,   494,   495,
       0,   496,   497,     0,   498,   499,     0,   500,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
       0,     0,     0,     0,     0,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,     0,   511,   512,   513,   514,
       0,     0,     0,     0,     0,     0,   515,   516,   517,     0,
     518,   519,   520,   521,   145,   146,   522,   147,   148,   149,
     150,   151,     0,     0,   152,   153,     0,     0,     0,   154,
       0,     0,   155,     0,   156,   157,   158,   159,   160,   161,
       0,   162,     0,     0,     0,   163,     0,     0,     0,   164,
       0,     0,   165,   166,   167,     0,   168,     0,   169,   170,
       0,     0,   171,     0,     0,   172,   173,     0,   174,   175,
     176,     0,   177,     0,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,   202,   203,     0,     0,     0,   204,     0,     0,
     205,     0,   206,     0,     0,   207,     0,     0,     0,   208,
     209,   210,     0,     0,   211,     0,     0,     0,     0,   212,
     213,     0,     0,     0,     0,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,   223,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,   228,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,   240,
       0,     0,   241,   242,   243,   244,   245,     0,     0,   246,
     247,     0,   248,   249,   250,   251,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,     0,   257,     0,   258,
       0,   259,     0,   260,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,   266,   267,     0,   268,     0,     0,
     269,   270,     0,     0,     0,   271,   272,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
       0,   279,   280,   281,     0,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,     0,     0,     0,   287,
       0,   288,     0,     0,   289,   290,     0,     0,   291,     0,
       0,   292,   293,     0,     0,     0,     0,     0,   294,   295,
       0,   296,     0,   297,     0,   298,   299,     0,     0,     0,
       0,     0,     0,     0,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,     0,   322,
     323,   324,   325,     0,   326,   327,     0,     0,     0,     0,
     328,   329,   330,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,   337,     0,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,     0,   347,   348,     0,     0,
     349,   350,   351,   352,   353,     0,     0,     0,   354,   355,
       0,     0,     0,   356,     0,   357,   358,     0,   359,   360,
     361,     0,     0,   362,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   363,   364,   365,     0,   366,   367,   368,
       0,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   379,     0,   380,   381,   382,  2955,   383,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,     0,
       0,   392,     0,     0,     0,   393,   394,   395,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,   403,   404,
       0,   405,   406,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,     0,   417,   418,     0,
     419,   420,   421,     0,   422,     0,     0,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,     0,     0,     0,   437,   438,   439,   440,     0,
       0,     0,   441,     0,     0,     0,   442,     0,   443,   444,
     445,   446,     0,   447,   448,   449,   450,   451,     0,     0,
       0,     0,     0,   452,   453,   454,     0,   455,   456,     0,
     457,     0,     0,   458,     0,   459,     0,   460,   461,   462,
     463,   464,   465,     0,     0,   466,   467,     0,     0,   468,
     469,   470,   471,   472,   473,     0,     0,   474,   475,   476,
     477,     0,   478,   479,     0,     0,   480,   481,   482,   483,
       0,     0,   484,   485,     0,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,     0,     0,     0,   492,
     493,   494,   495,     0,   496,   497,     0,   498,   499,     0,
     500,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,     0,     0,     0,     0,     0,   507,     0,
     508,     0,     0,   509,     0,     0,     0,   510,     0,   511,
     512,   513,   514,     0,     0,     0,     0,     0,     0,   515,
     516,   517,     0,   518,   519,   520,   521,   145,   146,   522,
     147,   148,   149,   150,   151,     0,     0,   152,   153,     0,
       0,     0,   154,     0,     0,   155,     0,   156,   157,   158,
     159,   160,   161,     0,   162,     0,     0,     0,   163,     0,
       0,     0,   164,     0,     0,   165,   166,   167,     0,   168,
       0,   169,   170,     0,     0,   171,     0,     0,   172,   173,
       0,   174,   175,   176,     0,   177,     0,   178,   179,   180,
     181,   182,   183,     0,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,   197,
     198,     0,   199,   200,   201,   202,   203,     0,     0,     0,
     204,     0,     0,   205,     0,   206,     0,     0,   207,     0,
       0,     0,   208,   209,   210,     0,     0,   211,     0,     0,
       0,     0,   212,   213,     0,     0,     0,     0,   214,   215,
       0,   216,     0,     0,     0,   217,     0,   218,   219,   220,
     221,   222,     0,     0,     0,   223,     0,     0,   224,   225,
     226,     0,     0,     0,   227,     0,   228,   229,     0,   230,
     231,   232,     0,     0,   233,   234,     0,   235,   236,   237,
     238,   239,   240,     0,     0,   241,   242,   243,   244,   245,
       0,     0,   246,   247,     0,   248,   249,   250,   251,   252,
       0,     0,   253,   254,     0,     0,     0,   255,   256,     0,
     257,     0,   258,     0,   259,     0,   260,   261,   262,   263,
       0,   264,     0,   265,     0,     0,     0,   266,   267,     0,
     268,     0,     0,   269,   270,     0,     0,     0,   271,   272,
     273,   274,     0,     0,   275,   276,   277,     0,     0,   278,
       0,     0,     0,     0,   279,   280,   281,     0,     0,     0,
     282,     0,     0,     0,   283,   284,     0,   285,   286,     0,
       0,     0,   287,     0,   288,     0,     0,   289,   290,     0,
       0,   291,     0,     0,   292,   293,     0,     0,     0,     0,
       0,   294,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,     0,     0,     0,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,     0,   322,   323,   324,   325,     0,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,     0,   347,
     348,     0,     0,   349,   350,   351,   352,   353,     0,     0,
       0,   354,   355,     0,     0,     0,   356,     0,   357,   358,
       0,   359,   360,   361,     0,     0,   362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,   364,   365,     0,
     366,   367,   368,     0,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,     0,   380,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,   404,     0,   405,   406,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,     0,
     417,   418,     0,   419,   420,   421,     0,   422,     0,     0,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,     0,     0,     0,   437,   438,
     439,   440,     0,     0,     0,   441,     0,     0,     0,   442,
       0,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,     0,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,   461,   462,   463,   464,   465,     0,     0,   466,   467,
       0,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,     0,   480,
     481,   482,   483,     0,     0,   484,   485,     0,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,     0,
       0,     0,   492,   493,   494,   495,     0,   496,   497,     0,
     498,   499,     0,   500,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,     0,     0,     0,     0,
       0,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   511,   512,   513,   514,     0,     0,     0,     0,
       0,     0,   515,   516,   517,     0,   518,   519,   520,   521,
     145,   146,   522,   147,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,     0,     0,
       0,   163,     0,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,     0,
       0,   172,   173,     0,   174,   175,   176,     0,   177,     0,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
     211,     0,     0,     0,     0,   212,   213,     0,     0,     0,
       0,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,     0,     0,   241,   242,
     243,   244,   245,     0,     0,   246,   247,     0,   248,   249,
     250,  2057,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     266,   267,     0,   268,     0,     0,   269,   270,     0,     0,
       0,   271,   272,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,   281,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,     0,   292,   293,     0,
       0,     0,     0,     0,   294,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,     0,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,     0,   322,   323,   324,   325,     0,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,   337,
       0,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,     0,   347,   348,     0,     0,   349,   350,  2058,   352,
     353,     0,     0,     0,   354,   355,     0,     0,     0,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,     0,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,     0,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     422,     0,     0,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,     0,
       0,   466,   467,     0,     0,   468,   469,   470,   471,   472,
     473,     0,     0,   474,   475,   476,   477,     0,   478,   479,
       0,     0,   480,   481,   482,   483,     0,     0,   484,   485,
       0,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,     0,     0,     0,   492,   493,   494,   495,     0,
     496,   497,     0,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,     0,
       0,     0,     0,     0,   507,     0,   508,     0,     0,   509,
       0,     0,     0,   510,     0,   511,   512,   513,   514,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,     0,   146,   522,   147,   148,   149,   150,
     151,     0,     0,     0,   153,     0,     0,     0,   154,     0,
       0,     0,     0,   156,   157,   158,   159,   160,     0,     0,
    -403,     0,     0,     0,   163,     0,     0,     0,   164,     0,
       0,   165,   166,   167,     0,   168,     0,     0,     0,     0,
       0,   171,  4196,     0,   172,   173,     0,   174,   175,     0,
       0,     0,     0,   178,   179,   180,  4197,   182,   183,     0,
     184,   185,     0,   186,   187,     0,   189,     0,   191,   192,
     193,   194,   195,   196,     0,   197,   198,     0,   199,   200,
     201,     0,   203,     0,     0,     0,   204,     0,     0,   205,
       0,   206,     0,     0,   207,     0,     0,     0,   208,   209,
     210,     0,     0,   211,     0,     0,     0,     0,   212,     0,
       0,     0,     0,     0,   214,   215,     0,   216,     0,     0,
       0,   217,     0,   218,   219,   220,   221,   222,     0,     0,
       0,     0,     0,     0,   224,   225,   226,     0,  -373,  -373,
     227,     0,  -373,   229,     0,   230,   231,   232,     0,     0,
     233,   234,     0,   235,   236,   237,   238,   239,     0,     0,
       0,   241,   242,   243,   244,   245,     0,     0,   246,   247,
    4198,   248,   249,   250,   251,   252,     0,     0,     0,     0,
       0,     0,     0,     0,   256,     0,   257,     0,   258,     0,
     259,     0,     0,   261,   262,   263,     0,   264,     0,   265,
       0,     0,     0,     0,   267,     0,     0,     0,     0,     0,
     270,     0,     0,     0,   271,   272,   273,   274,  4199,     0,
     275,   276,   277,     0,     0,   278,     0,     0,     0,     0,
     279,   280,     0,     0,     0,     0,   282,     0,     0,     0,
     283,   284,     0,   285,   286,  4200,     0,     0,   287,     0,
     288,     0,     0,     0,   290,     0,     0,   291,  4201,     0,
     292,   293,     0,     0,     0,     0,     0,   294,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,     0,     0,
    -358,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,     0,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,  4202,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   364,   365,     0,     0,     0,   368,     0,
     369,   370,   371,   372,   373,   374,   375,   376,   377,     0,
       0,     0,     0,     0,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,     0,     0,
     405,     0,   407,  -358,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,     0,     0,   417,     0,     0,   419,
     420,   421,  4203,   422,     0,     0,     0,   424,   425,   426,
     427,   428,   429,   430,   431,     0,   433,   434,     0,   435,
       0,     0,     0,     0,   437,   438,   439,     0,     0,     0,
       0,   441,     0,     0,     0,     0,     0,     0,   444,     0,
     446,     0,   447,     0,     0,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,     0,   462,   463,
     464,   465,     0,     0,     0,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
       0,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,     0,     0,     0,     0,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,     0,
       0,     0,     0,   502,     0,     0,   503,     0,     0,     0,
     505,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,     0,     0,  -358,     0,     0,     0,   515,   516,
       0,     0,   518,     0,   520,   521,     0,   146,   522,   147,
     148,   149,   150,   151,     0,     0,     0,   153,     0,     0,
       0,   154,     0,     0,     0,     0,   156,   157,   158,   159,
     160,     0,     0,  -403,     0,     0,     0,   163,     0,     0,
       0,   164,     0,     0,   165,   166,   167,     0,   168,     0,
       0,     0,     0,     0,   171,  4196,     0,   172,   173,     0,
     174,   175,     0,     0,     0,     0,   178,   179,   180,  4197,
     182,   183,     0,   184,   185,     0,   186,   187,     0,   189,
       0,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,     0,   203,     0,     0,     0,   204,
       0,     0,   205,     0,   206,     0,     0,   207,     0,     0,
       0,   208,   209,   210,     0,     0,   211,     0,     0,     0,
       0,   212,     0,     0,     0,     0,     0,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,     0,     0,     0,   224,   225,   226,
       0,  -394,     0,   227,     0,  -394,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,     0,     0,     0,   241,   242,   243,   244,   245,     0,
       0,   246,   247,  4198,   248,   249,   250,   251,   252,     0,
       0,     0,     0,     0,     0,     0,     0,   256,     0,   257,
       0,   258,     0,   259,     0,     0,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,     0,   267,     0,     0,
       0,     0,     0,   270,     0,     0,     0,   271,   272,   273,
     274,  4199,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,     0,   279,   280,     0,     0,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,  4200,     0,
       0,   287,     0,   288,     0,     0,     0,   290,     0,     0,
     291,  4201,     0,   292,   293,     0,     0,     0,     0,     0,
     294,   295,     0,   296,     0,   297,     0,   298,   299,     0,
       0,     0,     0,  -358,     0,     0,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
       0,   322,   323,   324,   325,     0,   326,   327,     0,     0,
       0,     0,   328,   329,   330,   331,   332,   333,     0,     0,
     334,   335,     0,   336,     0,   337,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,     0,   347,   348,
       0,     0,   349,   350,   351,   352,   353,     0,     0,     0,
       0,   355,     0,     0,     0,   356,     0,   357,   358,     0,
     359,   360,  4202,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   364,   365,     0,     0,
       0,   368,     0,   369,   370,   371,   372,   373,   374,   375,
     376,   377,     0,     0,     0,     0,     0,   381,   382,     0,
     383,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,     0,     0,   392,     0,     0,     0,   393,   394,   395,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
     403,     0,     0,   405,     0,   407,  -358,     0,   408,   409,
     410,   411,   412,   413,   414,   415,     0,     0,     0,   417,
       0,     0,   419,   420,   421,  4203,   422,     0,     0,     0,
     424,   425,   426,   427,   428,   429,   430,   431,     0,   433,
     434,     0,   435,     0,     0,     0,     0,   437,   438,   439,
       0,     0,     0,     0,   441,     0,     0,     0,     0,     0,
       0,   444,     0,   446,     0,   447,     0,     0,   450,   451,
       0,     0,     0,     0,     0,   452,   453,   454,     0,   455,
     456,     0,   457,     0,     0,   458,     0,   459,     0,   460,
       0,   462,   463,   464,   465,     0,     0,     0,   467,     0,
       0,   468,   469,   470,   471,   472,   473,     0,     0,   474,
     475,   476,   477,     0,   478,   479,     0,     0,   480,   481,
     482,   483,     0,     0,   484,   485,     0,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,     0,     0,
       0,     0,   493,   494,   495,     0,   496,   497,     0,   498,
     499,     0,     0,     0,     0,     0,   502,     0,     0,   503,
       0,     0,     0,   505,   506,     0,     0,     0,     0,     0,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
       0,   511,   512,   513,   514,  -394,     0,  -358,     0,     0,
       0,   515,   516,     0,     0,   518,     0,   520,   521,     0,
     146,   522,   147,   148,   149,   150,   151,     0,     0,     0,
     153,     0,     0,     0,   154,     0,     0,     0,     0,   156,
     157,   158,   159,   160,     0,     0,  -403,     0,     0,     0,
     163,     0,     0,     0,   164,     0,     0,   165,   166,   167,
       0,   168,     0,     0,     0,     0,     0,   171,  4196,     0,
     172,   173,     0,   174,   175,     0,     0,     0,     0,   178,
     179,   180,  4197,   182,   183,     0,   184,   185,     0,   186,
     187,     0,   189,     0,   191,   192,   193,   194,   195,   196,
       0,   197,   198,     0,   199,   200,   201,     0,   203,     0,
       0,     0,   204,     0,     0,   205,     0,   206,     0,     0,
     207,     0,     0,     0,   208,   209,   210,     0,     0,   211,
       0,     0,     0,     0,   212,     0,     0,     0,     0,     0,
     214,   215,     0,   216,     0,     0,     0,   217,     0,   218,
     219,   220,   221,   222,     0,     0,     0,     0,     0,     0,
     224,   225,   226,     0,  -391,     0,   227,     0,  -391,   229,
       0,   230,   231,   232,     0,     0,   233,   234,     0,   235,
     236,   237,   238,   239,     0,     0,     0,   241,   242,   243,
     244,   245,     0,     0,   246,   247,  4198,   248,   249,   250,
     251,   252,     0,     0,     0,     0,     0,     0,     0,     0,
     256,     0,   257,     0,   258,     0,   259,     0,     0,   261,
     262,   263,     0,   264,     0,   265,     0,     0,     0,     0,
     267,     0,     0,     0,     0,     0,   270,     0,     0,     0,
     271,   272,   273,   274,  4199,     0,   275,   276,   277,     0,
       0,   278,     0,     0,     0,     0,   279,   280,     0,     0,
       0,     0,   282,     0,     0,     0,   283,   284,     0,   285,
     286,  4200,     0,     0,   287,     0,   288,     0,     0,     0,
     290,     0,     0,   291,  4201,     0,   292,   293,     0,     0,
       0,     0,     0,   294,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,     0,     0,  -358,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,     0,   322,   323,   324,   325,     0,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
       0,   347,   348,     0,     0,   349,   350,   351,   352,   353,
       0,     0,     0,     0,   355,     0,     0,     0,   356,     0,
     357,   358,     0,   359,   360,  4202,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   364,
     365,     0,     0,     0,   368,     0,   369,   370,   371,   372,
     373,   374,   375,   376,   377,     0,     0,     0,     0,     0,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,     0,     0,   405,     0,   407,  -358,
       0,   408,   409,   410,   411,   412,   413,   414,   415,     0,
       0,     0,   417,     0,     0,   419,   420,   421,  4203,   422,
       0,     0,     0,   424,   425,   426,   427,   428,   429,   430,
     431,     0,   433,   434,     0,   435,     0,     0,     0,     0,
     437,   438,   439,     0,     0,     0,     0,   441,     0,     0,
       0,     0,     0,     0,   444,     0,   446,     0,   447,     0,
       0,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,     0,   462,   463,   464,   465,     0,     0,
       0,   467,     0,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
       0,   480,   481,   482,   483,     0,     0,   484,   485,     0,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,     0,     0,     0,     0,   493,   494,   495,     0,   496,
     497,     0,   498,   499,     0,     0,     0,     0,     0,   502,
       0,     0,   503,     0,     0,     0,   505,   506,     0,     0,
       0,     0,     0,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,     0,   511,   512,   513,   514,  -391,     0,
    -358,     0,     0,     0,   515,   516,     0,     0,   518,     0,
     520,   521,     0,   146,   522,   147,   148,   149,   150,   151,
       0,     0,     0,   153,     0,     0,     0,   154,     0,     0,
       0,     0,   156,   157,   158,   159,   160,     0,     0,  -403,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,     0,     0,     0,     0,
     171,  4196,     0,   172,   173,     0,   174,   175,     0,     0,
       0,     0,   178,   179,   180,  4197,   182,   183,     0,   184,
     185,     0,   186,   187,     0,   189,     0,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
       0,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,     0,     0,
       0,     0,     0,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
       0,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,  4478,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,     0,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,  4198,
     248,   249,   250,   251,   252,     0,     0,     0,     0,     0,
       0,     0,     0,   256,     0,   257,     0,   258,     0,   259,
       0,     0,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,     0,   267,     0,     0,     0,     0,     0,   270,
       0,     0,     0,   271,   272,   273,   274,  4199,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,     0,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,  4200,     0,     0,   287,     0,   288,
       0,     0,     0,   290,     0,     0,   291,  4201,     0,   292,
     293,     0,     0,     0,     0,     0,   294,   295,     0,   296,
       0,   297,     0,   298,   299,     0,     0,     0,     0,  -358,
       0,     0,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,     0,   322,   323,   324,
     325,     0,   326,   327,     0,     0,     0,     0,   328,   329,
     330,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,   337,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,     0,   347,   348,     0,     0,   349,   350,
     351,   352,   353,     0,     0,     0,     0,   355,     0,     0,
       0,   356,     0,   357,   358,     0,   359,   360,  4202,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   364,   365,     0,     0,     0,   368,     0,   369,
     370,   371,   372,   373,   374,   375,   376,   377,     0,     0,
       0,     0,     0,   381,   382,     0,   383,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,     0,     0,   392,
       0,     0,     0,   393,   394,   395,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,   403,     0,     0,   405,
       0,   407,  -358,     0,   408,   409,   410,   411,   412,   413,
     414,   415,     0,     0,     0,   417,     0,     0,   419,   420,
     421,  4203,   422,     0,     0,     0,   424,   425,   426,   427,
     428,   429,   430,   431,     0,   433,   434,     0,   435,     0,
       0,     0,     0,   437,   438,   439,     0,     0,     0,     0,
     441,     0,     0,     0,     0,     0,     0,   444,     0,   446,
       0,   447,     0,     0,   450,   451,     0,     0,     0,     0,
       0,   452,   453,   454,     0,   455,   456,     0,   457,     0,
       0,   458,     0,   459,     0,   460,     0,   462,   463,   464,
     465,     0,     0,     0,   467,     0,     0,   468,   469,   470,
     471,   472,   473,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,     0,   480,   481,   482,   483,     0,     0,
     484,   485,     0,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,     0,     0,     0,     0,   493,   494,
     495,     0,   496,   497,     0,   498,   499,     0,     0,     0,
       0,     0,   502,     0,     0,   503,     0,     0,     0,   505,
     506,     0,     0,     0,     0,     0,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   511,   512,   513,
     514,     0,     0,  -358,     0,     0,     0,   515,   516,     0,
       0,   518,     0,   520,   521,     0,   146,   522,   147,   148,
     149,   150,   151,     0,     0,     0,   153,     0,     0,     0,
     154,     0,     0,     0,     0,   156,   157,   158,   159,   160,
       0,     0,  -403,     0,     0,     0,   163,     0,     0,     0,
     164,     0,     0,   165,   166,   167,     0,   168,     0,     0,
       0,     0,     0,   171,  4196,     0,   172,   173,     0,   174,
     175,     0,     0,     0,     0,   178,   179,   180,  4197,   182,
     183,     0,   184,   185,     0,   186,   187,     0,   189,     0,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,     0,   203,     0,     0,     0,   204,     0,
       0,   205,     0,   206,     0,     0,   207,     0,     0,     0,
     208,   209,   210,     0,     0,   211,     0,     0,     0,     0,
     212,     0,     0,     0,     0,     0,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,     0,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,  -396,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
       0,     0,     0,   241,   242,   243,   244,   245,     0,     0,
     246,   247,  4198,   248,   249,   250,   251,   252,     0,     0,
       0,     0,     0,     0,     0,     0,   256,     0,   257,     0,
     258,     0,   259,     0,     0,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,     0,   267,     0,     0,     0,
       0,     0,   270,     0,     0,     0,   271,   272,   273,   274,
    4199,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,     0,   279,   280,     0,     0,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,  4200,     0,     0,
     287,     0,   288,     0,     0,     0,   290,     0,     0,   291,
    4201,     0,   292,   293,     0,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,  -358,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,     0,   347,   348,     0,
       0,   349,   350,   351,   352,   353,     0,     0,     0,     0,
     355,     0,     0,     0,   356,     0,   357,   358,     0,   359,
     360,  4202,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   364,   365,     0,     0,     0,
     368,     0,   369,   370,   371,   372,   373,   374,   375,   376,
     377,     0,     0,     0,     0,     0,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
       0,     0,   405,     0,   407,  -358,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,     0,     0,   417,     0,
       0,   419,   420,   421,  4203,   422,     0,     0,     0,   424,
     425,   426,   427,   428,   429,   430,   431,     0,   433,   434,
       0,   435,     0,     0,     0,     0,   437,   438,   439,     0,
       0,     0,     0,   441,     0,     0,     0,     0,     0,     0,
     444,     0,   446,     0,   447,     0,     0,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,     0,
     462,   463,   464,   465,     0,     0,     0,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,     0,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
       0,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,     0,     0,     0,     0,   502,     0,     0,   503,     0,
       0,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,  -358,     0,     0,     0,
     515,   516,     0,     0,   518,     0,   520,   521,     0,   146,
     522,   147,   148,   149,   150,   151,     0,     0,     0,   153,
       0,     0,     0,   154,     0,     0,     0,     0,   156,   157,
     158,   159,   160,     0,     0,  -403,     0,     0,     0,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,     0,     0,     0,     0,   171,  4196,     0,   172,
     173,     0,   174,   175,     0,     0,     0,     0,   178,   179,
     180,  4197,   182,   183,     0,   184,   185,     0,   186,   187,
       0,   189,     0,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,     0,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,     0,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,     0,     0,     0,     0,     0,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,     0,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,  4568,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,     0,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,  4198,   248,   249,   250,   251,
     252,     0,     0,     0,     0,     0,     0,     0,     0,   256,
       0,   257,     0,   258,     0,   259,     0,     0,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,     0,   267,
       0,     0,     0,     0,     0,   270,     0,     0,     0,   271,
     272,   273,   274,  4199,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,     0,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
    4200,     0,     0,   287,     0,   288,     0,     0,     0,   290,
       0,     0,   291,  4201,     0,   292,   293,     0,     0,     0,
       0,     0,   294,   295,     0,   296,     0,   297,     0,   298,
     299,     0,     0,     0,     0,  -358,     0,     0,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,     0,   322,   323,   324,   325,     0,   326,   327,
       0,     0,     0,     0,   328,   329,   330,   331,   332,   333,
       0,     0,   334,   335,     0,   336,     0,   337,     0,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,     0,
     347,   348,     0,     0,   349,   350,   351,   352,   353,     0,
       0,     0,     0,   355,     0,     0,     0,   356,     0,   357,
     358,     0,   359,   360,  4202,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   364,   365,
       0,     0,     0,   368,     0,   369,   370,   371,   372,   373,
     374,   375,   376,   377,     0,     0,     0,     0,     0,   381,
     382,     0,   383,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,     0,     0,   392,     0,     0,     0,   393,
     394,   395,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,   403,     0,     0,   405,     0,   407,  -358,     0,
     408,   409,   410,   411,   412,   413,   414,   415,     0,     0,
       0,   417,     0,     0,   419,   420,   421,  4203,   422,     0,
       0,     0,   424,   425,   426,   427,   428,   429,   430,   431,
       0,   433,   434,     0,   435,     0,     0,     0,     0,   437,
     438,   439,     0,     0,     0,     0,   441,     0,     0,     0,
       0,     0,     0,   444,     0,   446,     0,   447,     0,     0,
     450,   451,     0,     0,     0,     0,     0,   452,   453,   454,
       0,   455,   456,     0,   457,     0,     0,   458,     0,   459,
       0,   460,     0,   462,   463,   464,   465,     0,     0,     0,
     467,     0,     0,   468,   469,   470,   471,   472,   473,     0,
       0,   474,   475,   476,   477,     0,   478,   479,     0,     0,
     480,   481,   482,   483,     0,     0,   484,   485,     0,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
       0,     0,     0,     0,   493,   494,   495,     0,   496,   497,
       0,   498,   499,     0,     0,     0,     0,     0,   502,     0,
       0,   503,     0,     0,     0,   505,   506,     0,     0,     0,
       0,     0,   507,     0,   508,     0,     0,   509,     0,     0,
       0,   510,     0,   511,   512,   513,   514,     0,     0,  -358,
       0,     0,     0,   515,   516,     0,     0,   518,     0,   520,
     521,     0,   146,   522,   147,   148,   149,   150,   151,     0,
       0,     0,   153,     0,     0,     0,   154,     0,     0,     0,
       0,   156,   157,   158,   159,   160,     0,     0,  -403,     0,
       0,     0,   163,     0,     0,     0,   164,     0,     0,   165,
     166,   167,     0,   168,     0,     0,     0,     0,     0,   171,
    4196,     0,   172,   173,     0,   174,   175,     0,     0,     0,
       0,   178,   179,   180,  4197,   182,   183,     0,   184,   185,
       0,   186,   187,     0,   189,     0,   191,   192,   193,   194,
     195,   196,     0,   197,   198,     0,   199,   200,   201,     0,
     203,     0,     0,     0,   204,     0,     0,   205,     0,   206,
       0,     0,   207,     0,     0,     0,   208,   209,   210,     0,
       0,   211,     0,     0,     0,     0,   212,     0,     0,     0,
       0,     0,   214,   215,     0,   216,     0,     0,     0,   217,
       0,   218,   219,   220,   221,   222,     0,     0,     0,     0,
       0,     0,   224,   225,   226,     0,     0,     0,   227,     0,
    4601,   229,     0,   230,   231,   232,     0,     0,   233,   234,
       0,   235,   236,   237,   238,   239,     0,     0,     0,   241,
     242,   243,   244,   245,     0,     0,   246,   247,  4198,   248,
     249,   250,   251,   252,     0,     0,     0,     0,     0,     0,
       0,     0,   256,     0,   257,     0,   258,     0,   259,     0,
       0,   261,   262,   263,     0,   264,     0,   265,     0,     0,
       0,     0,   267,     0,     0,     0,     0,     0,   270,     0,
       0,     0,   271,   272,   273,   274,  4199,     0,   275,   276,
     277,     0,     0,   278,     0,     0,     0,     0,   279,   280,
       0,     0,     0,     0,   282,     0,     0,     0,   283,   284,
       0,   285,   286,  4200,     0,     0,   287,     0,   288,     0,
       0,     0,   290,     0,     0,   291,  4201,     0,   292,   293,
       0,     0,     0,     0,     0,   294,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,     0,     0,  -358,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,     0,   322,   323,   324,   325,
       0,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,     0,   347,   348,     0,     0,   349,   350,   351,
     352,   353,     0,     0,     0,     0,   355,     0,     0,     0,
     356,     0,   357,   358,     0,   359,   360,  4202,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   364,   365,     0,     0,     0,   368,     0,   369,   370,
     371,   372,   373,   374,   375,   376,   377,     0,     0,     0,
       0,     0,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,     0,     0,   405,     0,
     407,  -358,     0,   408,   409,   410,   411,   412,   413,   414,
     415,     0,     0,     0,   417,     0,     0,   419,   420,   421,
    4203,   422,     0,     0,     0,   424,   425,   426,   427,   428,
     429,   430,   431,     0,   433,   434,     0,   435,     0,     0,
       0,     0,   437,   438,   439,     0,     0,     0,     0,   441,
       0,     0,     0,     0,     0,     0,   444,     0,   446,     0,
     447,     0,     0,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,     0,   462,   463,   464,   465,
       0,     0,     0,   467,     0,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,     0,   480,   481,   482,   483,     0,     0,   484,
     485,     0,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,     0,     0,     0,     0,   493,   494,   495,
       0,   496,   497,     0,   498,   499,     0,     0,     0,     0,
       0,   502,     0,     0,   503,     0,     0,     0,   505,   506,
       0,     0,     0,     0,     0,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,     0,   511,   512,   513,   514,
       0,     0,  -358,     0,     0,     0,   515,   516,     0,     0,
     518,     0,   520,   521,     0,   146,   522,   147,   148,   149,
     150,   151,     0,     0,     0,   153,     0,     0,     0,   154,
       0,     0,     0,     0,   156,   157,   158,   159,   160,     0,
       0,  -403,     0,     0,     0,   163,     0,     0,     0,   164,
       0,     0,   165,   166,   167,     0,   168,     0,     0,     0,
       0,     0,   171,  4196,     0,   172,   173,     0,   174,   175,
       0,     0,     0,     0,   178,   179,   180,  4197,   182,   183,
       0,   184,   185,     0,   186,   187,     0,   189,     0,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,     0,   203,     0,     0,     0,   204,     0,     0,
     205,     0,   206,     0,     0,   207,     0,     0,     0,   208,
     209,   210,     0,     0,   211,     0,     0,     0,     0,   212,
       0,     0,     0,     0,     0,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,     0,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,  -377,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,     0,
       0,     0,   241,   242,   243,   244,   245,     0,     0,   246,
     247,  4198,   248,   249,   250,   251,   252,     0,     0,     0,
       0,     0,     0,     0,     0,   256,     0,   257,     0,   258,
       0,   259,     0,     0,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,     0,   267,     0,     0,     0,     0,
       0,   270,     0,     0,     0,   271,   272,   273,   274,  4199,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
       0,   279,   280,     0,     0,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,  4200,     0,     0,   287,
       0,   288,     0,     0,     0,   290,     0,     0,   291,  4201,
       0,   292,   293,     0,     0,     0,     0,     0,   294,   295,
       0,   296,     0,   297,     0,   298,   299,     0,     0,     0,
       0,  -358,     0,     0,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,     0,   322,
     323,   324,   325,     0,   326,   327,     0,     0,     0,     0,
     328,   329,   330,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,   337,     0,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,     0,   347,   348,     0,     0,
     349,   350,   351,   352,   353,     0,     0,     0,     0,   355,
       0,     0,     0,   356,     0,   357,   358,     0,   359,   360,
    4202,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   364,   365,     0,     0,     0,   368,
       0,   369,   370,   371,   372,   373,   374,   375,   376,   377,
       0,     0,     0,     0,     0,   381,   382,     0,   383,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,     0,
       0,   392,     0,     0,     0,   393,   394,   395,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,   403,     0,
       0,   405,     0,   407,  -358,     0,   408,   409,   410,   411,
     412,   413,   414,   415,     0,     0,     0,   417,     0,     0,
     419,   420,   421,  4203,   422,     0,     0,     0,   424,   425,
     426,   427,   428,   429,   430,   431,     0,   433,   434,     0,
     435,     0,     0,     0,     0,   437,   438,   439,     0,     0,
       0,     0,   441,     0,     0,     0,     0,     0,     0,   444,
       0,   446,     0,   447,     0,     0,   450,   451,     0,     0,
       0,     0,     0,   452,   453,   454,     0,   455,   456,     0,
     457,     0,     0,   458,     0,   459,     0,   460,     0,   462,
     463,   464,   465,     0,     0,     0,   467,     0,     0,   468,
     469,   470,   471,   472,   473,     0,     0,   474,   475,   476,
     477,     0,   478,   479,     0,     0,   480,   481,   482,   483,
       0,     0,   484,   485,     0,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,     0,     0,     0,     0,
     493,   494,   495,     0,   496,   497,     0,   498,   499,     0,
       0,     0,     0,     0,   502,     0,     0,   503,     0,     0,
       0,   505,   506,     0,     0,     0,     0,     0,   507,     0,
     508,     0,     0,   509,     0,     0,     0,   510,     0,   511,
     512,   513,   514,     0,     0,  -358,     0,     0,     0,   515,
     516,     0,     0,   518,     0,   520,   521,     0,   146,   522,
     147,   148,   149,   150,   151,     0,     0,     0,   153,     0,
       0,     0,   154,     0,     0,     0,     0,   156,   157,   158,
     159,   160,     0,     0,  -403,     0,     0,     0,   163,     0,
       0,     0,   164,     0,     0,   165,   166,   167,     0,   168,
       0,     0,     0,     0,     0,   171,  4196,     0,   172,   173,
       0,   174,   175,     0,     0,     0,     0,   178,   179,   180,
    4197,   182,   183,     0,   184,   185,     0,   186,   187,     0,
     189,     0,   191,   192,   193,   194,   195,   196,     0,   197,
     198,     0,   199,   200,   201,     0,   203,     0,     0,     0,
     204,     0,     0,   205,     0,   206,     0,     0,   207,     0,
       0,     0,   208,   209,   210,     0,     0,   211,     0,     0,
       0,     0,   212,     0,     0,     0,     0,     0,   214,   215,
       0,   216,     0,     0,     0,   217,     0,   218,   219,   220,
     221,   222,     0,     0,     0,     0,     0,     0,   224,   225,
     226,     0,     0,     0,   227,     0,     0,   229,     0,   230,
     231,   232,     0,     0,   233,   234,     0,   235,   236,   237,
     238,   239,     0,     0,     0,   241,   242,   243,   244,   245,
       0,     0,   246,   247,  4198,   248,   249,   250,   251,   252,
       0,     0,     0,     0,     0,     0,     0,     0,   256,     0,
     257,     0,   258,     0,   259,     0,     0,   261,   262,   263,
       0,   264,     0,   265,     0,     0,     0,     0,   267,     0,
       0,     0,     0,     0,   270,     0,     0,     0,   271,   272,
     273,   274,  4199,     0,   275,   276,   277,     0,     0,   278,
       0,     0,     0,     0,   279,   280,     0,     0,     0,     0,
     282,     0,     0,     0,   283,   284,     0,   285,   286,  4200,
       0,     0,   287,     0,   288,     0,     0,     0,   290,     0,
       0,   291,  4201,     0,   292,   293,     0,     0,     0,     0,
       0,   294,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,     0,     0,  -358,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,     0,   322,   323,   324,   325,     0,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,     0,   347,
     348,     0,     0,   349,   350,   351,   352,   353,     0,     0,
       0,     0,   355,     0,     0,     0,   356,     0,   357,   358,
       0,   359,   360,  4202,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   364,   365,     0,
       0,     0,   368,     0,   369,   370,   371,   372,   373,   374,
     375,   376,   377,     0,     0,     0,     0,     0,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,     0,     0,   405,     0,   407,  -358,     0,   408,
     409,   410,   411,   412,   413,   414,   415,     0,     0,     0,
     417,     0,     0,   419,   420,   421,  4203,   422,     0,     0,
       0,   424,   425,   426,   427,   428,   429,   430,   431,     0,
     433,   434,     0,   435,     0,     0,     0,     0,   437,   438,
     439,     0,     0,     0,     0,   441,     0,     0,     0,     0,
       0,     0,   444,     0,   446,     0,   447,     0,     0,   450,
     451,     0,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,     0,   462,   463,   464,   465,     0,     0,     0,   467,
       0,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,     0,   480,
     481,   482,   483,     0,     0,   484,   485,     0,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,     0,
       0,     0,     0,   493,   494,   495,     0,   496,   497,     0,
     498,   499,     0,     0,     0,     0,     0,   502,     0,     0,
     503,     0,     0,     0,   505,   506,     0,     0,     0,     0,
       0,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   511,   512,   513,   514,     0,     0,  -358,     0,
       0,     0,   515,   516,     0,     0,   518,     0,   520,   521,
       0,   146,   522,   147,   148,   149,   150,   151,     0,     0,
       0,   153,     0,     0,     0,   154,     0,     0,     0,     0,
     156,   157,   158,   159,   160,     0,     0,  -403,     0,     0,
       0,   163,     0,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,     0,     0,     0,     0,   171,  4196,
       0,   172,   173,     0,   174,   175,     0,     0,     0,     0,
     178,   179,   180,  4197,   182,   183,     0,   184,   185,     0,
     186,   187,     0,   189,     0,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,     0,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
     211,     0,     0,     0,     0,   212,     0,     0,     0,     0,
       0,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,     0,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,     0,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,     0,     0,     0,   241,   242,
     243,   244,   245,     0,     0,   246,   247,  4198,   248,   249,
     250,   251,   252,     0,     0,     0,     0,     0,     0,     0,
       0,   256,     0,   257,     0,   258,     0,   259,     0,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
       0,   267,     0,     0,     0,     0,     0,   270,     0,     0,
       0,   271,   272,   273,   274,  4199,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,     0,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,  4200,     0,     0,   287,     0,   288,     0,     0,
       0,   290,     0,     0,   291,  4201,     0,   292,   293,     0,
       0,     0,     0,     0,   294,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,     0,     0,  -358,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,     0,   322,   323,   324,   325,     0,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,   337,
       0,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,     0,   347,   348,     0,     0,   349,   350,   351,   352,
     353,     0,     0,     0,     0,   355,     0,     0,     0,   356,
       0,   357,   358,     0,   359,   360,  4202,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     364,   365,     0,     0,     0,   368,     0,   369,   370,   371,
     372,   373,   374,   375,   376,   377,     0,     0,     0,     0,
       0,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,     0,     0,   405,     0,   407,
    -358,     0,   408,   409,   410,   411,   412,   413,   414,   415,
       0,     0,     0,   417,     0,     0,   419,   420,   421,  4203,
     422,     0,     0,     0,   424,   425,   426,   427,   428,   429,
     430,   431,     0,   433,   434,     0,   435,     0,     0,     0,
       0,   437,   438,   439,     0,     0,     0,     0,   441,     0,
       0,     0,     0,     0,     0,   444,     0,   446,     0,   447,
       0,     0,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,     0,   462,   463,   464,   465,     0,
       0,     0,   467,     0,     0,   468,   469,   470,   471,   472,
     473,     0,     0,   474,   475,   476,   477,     0,   478,   479,
       0,     0,   480,   481,   482,   483,     0,     0,   484,   485,
       0,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,     0,     0,     0,     0,   493,   494,   495,     0,
     496,   497,     0,   498,   499,     0,     0,     0,     0,     0,
     502,     0,     0,  4481,     0,     0,     0,   505,   506,     0,
       0,     0,     0,     0,   507,     0,   508,     0,     0,   509,
       0,     0,     0,   510,     0,   511,   512,   513,   514,     0,
       0,  -358,     0,     0,     0,   515,   516,     0,     0,   518,
       0,   520,   521,     0,   146,   522,   147,   148,   149,   150,
     151,     0,     0,     0,   153,     0,     0,     0,   154,     0,
       0,     0,     0,   156,   157,   158,   159,   160,     0,     0,
       0,     0,     0,     0,   163,     0,     0,     0,   164,     0,
       0,   165,   166,   167,     0,   168,     0,     0,     0,     0,
       0,   171,     0,     0,   172,   173,     0,   174,   175,     0,
       0,     0,     0,   178,   179,   180,     0,   182,   183,     0,
     184,   185,     0,   186,   187,     0,   189,     0,   191,   192,
     193,   194,   195,   196,     0,   197,   198,     0,   199,   200,
     201,     0,   203,     0,     0,     0,   204,     0,     0,   205,
       0,   206,     0,     0,   207,     0,     0,     0,   208,   209,
     210,     0,     0,   211,     0,     0,     0,     0,   212,     0,
       0,     0,     0,     0,   214,   215,     0,   216,     0,     0,
       0,   217,     0,   218,   219,   220,   221,   222,     0,     0,
       0,     0,     0,     0,   224,   225,   226,     0,     0,     0,
     227,     0,     0,   229,     0,   230,   231,   232,     0,     0,
     233,   234,     0,   235,   236,   237,   238,   239,     0,     0,
       0,   241,   242,   243,   244,   245,     0,     0,   246,   247,
       0,   248,   249,   250,   251,   252,     0,     0,     0,     0,
       0,     0,     0,     0,   256,     0,   257,     0,   258,     0,
     259,     0,     0,   261,   262,   263,     0,   264,     0,   265,
       0,     0,     0,     0,   267,     0,     0,     0,     0,     0,
     270,     0,     0,     0,   271,   272,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,     0,     0,     0,     0,
     279,   280,     0,     0,     0,     0,   282,     0,     0,     0,
     283,   284,     0,   285,   286,     0,     0,     0,   287,     0,
     288,     0,     0,     0,   290,     0,     0,   291,     0,     0,
     292,   293,     0,     0,     0,     0,     0,   294,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,     0,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,     0,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   364,   365,     0,     0,     0,   368,     0,
     369,   370,   371,   372,   373,   374,   375,   376,   377,     0,
       0,     0,     0,     0,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,     0,     0,
     405,     0,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,     0,     0,   417,     0,     0,   419,
     420,   421,     0,   422,     0,     0,     0,   424,   425,   426,
     427,   428,   429,   430,   431,     0,   433,   434,     0,   435,
       0,     0,     0,     0,   437,   438,   439,     0,     0,     0,
       0,   441,     0,     0,     0,     0,     0,     0,   444,     0,
     446,     0,   447,     0,     0,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,     0,   462,   463,
     464,   465,     0,     0,     0,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
       0,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,     0,     0,     0,     0,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,     0,
       0,     0,     0,   502,     0,     0,   503,     0,     0,     0,
     505,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,     0,     0,     0,     0,     0,     0,   515,   516,
       0,     0,   518,     0,   520,   521,     0,     0,   522
};

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4054)))

#define yytable_value_is_error(Yytable_value) \
  YYID (0)

static const yytype_int16 yycheck[] =
{
       6,   637,   618,   658,    45,   716,   626,   627,    20,  1079,
     619,  1469,  1080,    19,  1101,  1137,   636,    23,    30,  1054,
    1431,  1261,  1261,  1101,   994,    37,   783,    33,  1801,     6,
     950,   687,  1363,  1231,    40,  1468,  2077,    43,  1298,    45,
    2620,  1363,    48,  1742,  1182,  1183,  1016,  1162,  1163,    55,
    2478,  2710,  2709,  2820,  1555,  2427,  1209,   130,    41,   743,
    2706,  2497,  1725,  1084,  1653,  2832,  2833,  2503,  1411,    75,
    3248,  2469,  1199,  1211,   992,  2730,  2202,  1084,  1661,   712,
     713,  1418,  2899,  1501,  1661,  1223,  1224,  1225,  2028,  2095,
    3034,  1576,  1230,     4,   100,  1816,  2303,  2303,  1819,  1017,
    1461,  1299,  1300,  1680,  2337,  1303,  1304,  1305,  1306,  2459,
    1308,  1309,  1310,  1311,  1312,  1313,  1314,  1315,   124,  2194,
     126,  1698,  2311,   129,   130,   131,   132,  1663,  1629,  2128,
    2129,  1667,  1653,  2459,   544,  2195,  1657,   675,  1659,  2709,
     634,  1538,   853,  2203,  1680,  2343,  3409,  1653,  3595,   126,
    2764,  1657,   129,  1659,   838,   839,  1692,   841,     9,  1556,
    1036,  1644,  3343,  3300,  1336,  3346,  3209,  1564,  1565,  1167,
     854,  2731,  2732,  1822,  1585,    21,    21,    26,    29,    18,
      19,    48,    77,    62,  3365,    36,   109,    73,  3383,    23,
      19,  3372,  2295,   137,    35,   150,  1175,  1176,  1177,  2586,
      26,  2448,    18,    19,  2277,   156,    18,    19,  1187,  1798,
    2201,    31,   130,    18,    19,  2256,    21,   176,    18,    19,
    3647,    21,  1018,    59,  2314,   150,   125,    61,    62,   163,
    2997,  2998,  2836,   111,   197,  2850,   125,     5,  1217,   153,
     150,  1220,    70,    52,   125,    78,   327,   192,    21,  1621,
     164,  1623,  2459,  2459,  2947,   293,   160,   156,   914,    70,
      22,  1240,  1241,   285,    81,  1244,   194,   156,  1769,    68,
      18,    19,    18,    19,   209,   156,  3457,  1798,    44,  3657,
     231,  3036,    37,  1262,  1263,    64,   231,    23,   144,   140,
     275,   160,  1798,   377,   388,    19,    18,    19,    73,    35,
      37,    18,    19,    18,    19,   373,   222,    23,   964,   381,
     156,   402,  3712,    49,   160,   160,   258,   378,   231,    35,
     730,    18,    19,   241,   433,    61,    62,   465,    85,   863,
      18,    19,   158,    49,   186,   278,  2832,  2833,    64,  2060,
     176,    65,   204,   197,   180,    61,    62,   282,   545,   130,
     370,    18,    19,   973,   176,   139,  3133,   235,   194,   255,
    2724,    65,   122,   983,    42,   125,   239,   262,   160,   131,
     122,    18,    19,   572,   197,   160,   249,    18,    19,   493,
     380,  3729,   374,    77,  3732,   603,    13,   160,   237,    18,
      19,   925,   246,   401,   276,   433,  1665,  1666,    23,  1668,
     447,   615,  1671,  1672,  1673,  1674,  4448,   282,  1677,  4451,
     197,   237,    67,  1682,   266,   572,  4469,   661,  1687,  1688,
    1689,  1690,  1691,    18,    19,   669,  1695,  1696,   188,    21,
     367,   137,  1701,  1702,  1703,  1704,   188,  1706,  1707,    23,
    1709,  1198,   450,   635,   662,  2809,   152,   537,   293,   663,
    4132,    35,   194,    18,    19,  1212,    48,   156,  3235,   219,
     572,  4514,   235,   141,   219,    49,   539,   193,   273,   668,
     429,   663,   386,  1471,   323,   100,  1109,    61,    62,   416,
     197,   571,   219,    18,    19,    52,   103,   534,    18,    19,
     263,  3006,  3755,   485,  1624,   331,   371,   323,  4540,    22,
     112,  2997,  2998,   115,   661,   456,   388,   132,  2872,   582,
      18,    19,  3693,   140,    18,    19,  3130,   369,  1586,  2020,
     393,  3702,    18,    19,  3636,   663,  3172,   547,   637,   471,
     290,   728,   256,   539,   388,   541,   293,   433,   290,   482,
     363,    18,    19,   456,   370,  3726,  3924,   661,   332,   555,
    3731,   557,   256,   626,  4236,   561,  3174,   630,   631,   565,
      18,    19,  3962,   498,  3219,  3608,  3609,  3610,   262,   663,
     661,   387,   578,  2320,   390,   387,   582,   276,   390,   663,
     661,   587,   387,  1294,   606,   390,  3196,   387,   433,   355,
     390,  2092,   160,   429,   662,   601,   637,   669,   502,  3947,
      18,    19,   663,  2350,  2351,   643,  1363,   429,   131,    87,
     630,    18,    19,   373,  1532,  3308,   689,  1535,  1302,   602,
     626,   373,  1540,  1644,   630,   631,  1596,   543,   634,  2836,
    2836,    18,    19,   502,   433,  1319,   404,  1644,  3036,   387,
     646,   387,   390,   643,   390,   501,    47,   422,  2774,   511,
     635,  2062,  3419,  3420,   613,  2318,  3006,   571,   664,  2322,
    2849,   470,   441,  2852,  2853,   387,  3196,    77,   390,   614,
     387,   488,   387,   390,  3289,   390,  2339,  2340,  3282,   634,
    3006,   687,    26,   689,  1340,   691,  3441,  4134,  2277,  2352,
     387,   609,   418,   390,  3872,    33,   702,   631,  2361,   387,
     663,   707,   390,   709,  1842,   628,   712,   713,  1341,   634,
     502,   717,   718,   475,  2303,   543,   667,   502,   701,   570,
     387,   547,  2385,   390,   634,   702,   732,   733,   734,   735,
    1140,  2834,   543,  3996,  3997,   663,  2313,  2314,  2007,   722,
     387,  3128,   637,   390,   623,   596,   387,  1885,  2821,   390,
      18,    19,  2999,   604,   583,  2476,  2277,  2847,   387,  4186,
    2801,   390,   595,   583,  2095,   669,  1562,   601,   667,   647,
     637,  2277,   845,  2095,  2295,   661,  1797,   783,   667,  3436,
    1978,  1414,  2179,   727,  2775,  2776,   667,  1321,   563,  2295,
    1797,  1989,   387,  3221,  1992,   390,   647,  1430,   643,  3006,
    3006,    18,    19,   615,   630,  4000,   879,  1945,  2385,   648,
     583,   586,    18,    19,   663,   216,  1814,   572,  2190,  3247,
     661,   667,   387,  1507,  3479,   390,  2867,   663,   609,   553,
    2479,  3874,   648,  2005,   594,   572,   648,   663,   844,   845,
     846,   663,   594,   648,   850,  1972,   176,  1826,   648,   553,
     666,   663,   387,   263,   663,   390,   511,   387,   663,  2448,
     390,   934,  1482,  2206,   156,   601,  4003,   873,   874,   875,
    2459,   877,   878,   879,  2072,   881,   663,   669,   604,   387,
    1536,   887,   390,   387,   669,   601,   390,   893,  3448,  4336,
     626,   387,   654,   237,   390,   637,   902,   874,   592,   882,
     648,   878,   648,   470,   881,  4587,  3421,  1783,   914,   915,
     387,   249,   918,   390,   662,   663,   662,   663,  1897,   536,
     993,   615,  1901,  3419,  3420,   661,   648,  2448,   934,   387,
     237,   648,   390,   648,   502,  3592,   635,   275,  2459,   850,
     662,   663,  2448,   984,   950,  1924,   663,   662,   663,   955,
     428,   648,   475,  2459,  3572,  2996,   366,   367,   964,  2442,
     648,  4073,   372,  4075,   576,  2204,   663,   579,   667,   387,
    2669,  4234,   390,   979,   662,   663,   275,  3591,   984,   323,
     387,   648,    21,   390,   276,    26,  3596,   993,  1061,  2258,
    2259,    52,  4439,   725,   726,   662,   663,   908,    71,  2746,
     387,   648,  1496,   390,   380,  1078,  2275,   648,   418,  4190,
    1504,  4192,    18,    19,   276,   662,   663,   601,   160,   648,
     292,   662,   663,  2292,  2293,   198,   370,  3597,  3709,   258,
    1036,   158,   125,  1039,   663,   886,  2757,  2409,   622,   623,
    2412,  2413,   271,  3441,  2416,  2417,  2418,  2419,  2420,  2421,
    2422,  2423,   194,   648,  2426,  1061,    71,  3132,  1064,  2780,
      22,   123,  2331,   370,    18,    19,  3596,  4011,   663,  4189,
      74,  3421,  1078,   197,  1080,  3282,  3282,  2346,    18,    19,
      77,  3314,   707,   648,  2625,   486,    12,   712,   713,  1627,
    2220,  2221,  2222,  2223,  3911,  3421,   191,  3286,   663,   429,
    3298,   669,   438,  1109,   442,    35,   125,  1517,   473,   194,
     735,   355,  3238,   648,  2354,  2354,  3242,   158,   648,   387,
      18,    19,   390,   128,  4138,   249,   388,   662,   663,   179,
     204,  1137,   287,   663,   378,  1141,  1142,  1143,  1895,  2590,
     648,  4237,   637,   235,   648,  1151,    13,    13,    57,  3190,
     165,    12,   648,  3521,  1160,   663,  2286,  3525,   662,  2194,
    4174,  1167,  1168,  1169,   203,  1142,  1143,   663,   663,   131,
     387,   648,    35,   390,  2443,  2444,  2445,  2446,  3238,    18,
      19,   387,  3242,   455,   390,   247,   663,    18,    19,   193,
     648,  2321,  1198,  2323,   604,   350,   237,    18,    19,    62,
     285,  3207,  2332,   547,  2174,   663,  1212,    18,    19,    18,
      19,    18,    19,  2876,  3421,  3421,    18,    19,  2348,  3159,
    2705,    18,    19,   239,  3223,  2355,   245,   400,    18,    19,
     648,   235,  2821,   249,  3889,    53,  2366,  2367,  2368,     9,
     547,   648,  2372,   370,   662,  1318,    64,  2836,   477,  2167,
    3686,    18,    19,    18,    19,  1261,   663,    18,    19,   263,
    2178,   648,   598,  2181,  2182,   262,   127,   643,    18,    19,
    2847,  2191,  1278,   140,   140,  1281,   663,   902,  2408,   372,
    2410,  2411,   323,   613,  2414,  2415,   630,  3968,   293,  3064,
     915,  1364,    11,   918,  2424,  2425,  2383,  2384,  2731,  2732,
    2821,    18,    19,    12,   669,  2383,  2384,  1991,   369,  2670,
      18,    19,  1318,  2834,  2765,  2821,   389,  1323,   413,    18,
      19,  1327,   372,   630,   718,  2743,    18,    19,  2834,   370,
    2528,    18,    19,   663,  1340,  1341,   635,   510,  2095,  2880,
    2600,   603,   361,   635,  2927,  4465,  4466,   200,  1421,   100,
    2927,  2928,   641,  2690,   220,   108,  4013,  1363,  1364,   285,
     502,  2758,   200,   122,   636,  4182,   197,    18,    19,  3032,
    1281,   615,  4027,   435,   389,   667,  1108,   393,  2011,    25,
     648,   387,    18,    19,   390,  2523,   316,  3785,   543,  1462,
    2046,   333,  2928,  4489,  1400,   663,  1402,   194,  1404,   108,
    1406,    18,    19,    18,    19,  3126,  1479,   197,  1414,   470,
    2999,  1036,   401,  2551,   418,  1421,   186,  3006,   127,   194,
     547,  2442,   197,  2766,  1430,   167,  1158,   316,   401,  2085,
    2086,   648,    26,   387,   212,  2442,   390,   511,    13,     9,
     501,  2097,   648,   572,    18,    19,   663,   387,   167,  1455,
     390,  2581,   125,  2606,  2607,  3032,  1462,   663,   200,   407,
     369,    31,  1468,   404,   282,  1471,   139,  2706,   221,  2709,
    2709,   128,  2599,  1479,  3515,    18,    19,  3176,  2999,  4136,
     258,   200,  2609,   877,  1109,  3006,  4664,   238,   550,   387,
    1496,   200,   390,  2999,  1405,    18,    19,    32,  1504,  2155,
    3006,    18,    19,   630,  3630,  3631,   547,   258,  4154,  3945,
     285,   585,  1518,  1519,  1520,  1521,  1522,   661,  1524,  2139,
     271,   493,   168,   277,   661,   669,   280,  1533,  1534,   390,
    1536,   290,   661,  1539,   243,  1160,  1609,    18,    19,   589,
    1523,  1518,  1519,  1520,    79,  1522,  3918,  3919,   387,    18,
      19,   390,   404,  1559,  3329,   605,   387,  1534,   566,   390,
      18,    19,  1539,   220,   493,   140,   387,   420,   457,   390,
      21,  1577,  1578,  4232,   487,   564,   387,   286,   387,   390,
     387,   390,   420,   390,  4243,   387,  3361,  3362,   390,   630,
     387,   564,   158,   390,    13,    18,    19,   387,   572,   493,
     390,   127,  1513,  1609,   355,  3646,   316,  1648,    18,    19,
     388,  4378,  4379,    13,   373,  4043,    18,    19,   404,   154,
     387,   575,   387,   390,   493,   390,   387,   378,   570,   390,
      65,   572,   127,  3296,   493,   122,   293,   387,  4200,  4201,
     390,   394,   648,   237,   235,   220,   662,    18,    19,   100,
    3313,   404,    18,    19,   596,  2785,  3319,   663,   411,   332,
     407,   527,   528,   529,   530,   531,   532,    13,   369,   293,
     387,   237,   263,   390,  3251,  3252,   430,     0,   420,   387,
      18,    19,   390,   549,    18,    19,   509,   661,   387,   661,
     231,   390,  2662,  3282,   648,   387,    18,    19,   390,   156,
     387,   420,  1327,   390,   548,   156,    13,   543,   648,   160,
    1621,   420,  1623,   566,  1625,  1626,  1341,  1628,   428,  1725,
     572,   140,   248,   663,    18,    19,   477,  1733,   566,   323,
    1736,  1737,   661,   541,  3003,  3004,   387,   592,   141,   390,
     140,   192,  3319,   194,   415,  1656,   572,   448,    18,    19,
     648,   387,   293,   248,   390,     7,   160,   565,    18,    19,
     615,   212,   515,    18,    19,   663,   217,   661,   300,   301,
     387,   158,   387,   390,    86,   390,   608,  1783,   160,  1404,
     231,    18,    19,   216,   607,   629,   572,   238,   624,  1414,
     499,   533,   661,   105,   140,   246,  1802,  1803,   549,    18,
      19,   511,   661,   290,   370,  1430,    58,   258,  1814,   648,
     401,   480,  1818,   387,   533,   125,   390,   648,   212,   216,
     271,   256,    18,    19,   663,   276,  1803,   648,   651,   230,
     263,  2961,  3421,   140,   285,   594,   662,   648,   148,   648,
     167,   648,   663,   235,   387,   587,   648,   390,    18,    19,
     237,   648,   663,   481,   663,   564,   663,   566,   648,   612,
     662,   366,   367,   197,   387,   662,   263,   390,   587,  2478,
     387,   263,   662,   390,   127,   493,  3207,   187,  3577,  1952,
     415,   648,  4462,   648,  3144,  3207,   373,   648,   429,  1895,
    1896,    19,   144,    18,    19,   662,  1521,   662,   648,  1524,
    3421,   662,   437,   612,   355,   433,   387,   757,   758,   390,
     638,   639,   662,   445,   446,  3421,    18,    19,   387,  2603,
      22,   390,  4484,  4485,   615,   563,   454,   378,   566,   387,
     365,   648,   390,  3172,  1559,   663,   564,   388,   669,  2012,
     648,   569,   345,   478,   623,   662,  1952,   626,  1954,   648,
      18,    19,   527,   528,   662,   530,   648,   532,    18,    19,
     615,   648,   583,   662,   387,  2621,   249,   390,   496,   420,
     662,   185,   663,   637,   549,   662,   640,   387,   669,   829,
     390,   547,   230,   370,   612,   387,   662,   663,   390,   272,
    1996,    19,   524,   525,   526,   563,  2002,   648,   566,  2334,
     628,  3139,   620,   621,   539,  2011,  2012,  3246,   663,  2344,
     615,   662,   648,   212,   669,  3448,   387,  2023,   655,   390,
      40,   387,  2028,   655,   390,   662,   477,  2033,    48,   131,
     662,   648,  2105,   648,    18,    19,    18,    19,  2373,   566,
    2046,  3163,   235,   661,   612,   662,   227,   662,   229,   387,
     501,   569,   390,   387,    18,    19,   390,   662,   663,  2065,
     300,   301,  2103,  2069,   630,   387,    18,    19,   390,   235,
    3310,  3310,   122,   235,   648,   125,  3849,  3850,  3851,  2085,
    2086,  2087,  2088,   662,   663,  1996,   662,   663,   662,  2095,
      26,  2097,   135,   387,  2710,   212,   390,  3132,   549,  2105,
     535,  2142,   493,    18,    19,   648,    19,   594,  1733,   100,
     501,   246,  1737,   141,   381,   367,   231,   387,   553,   662,
     390,    48,   662,   663,  3625,   648,    77,   387,   662,   663,
     390,   648,   387,   197,   122,   390,  2142,   125,   188,   662,
    4356,    77,  4358,  2149,  4360,   662,   246,    18,    19,  2155,
     387,   621,   603,   390,   662,   663,    18,    19,  1783,   501,
     547,   603,  2782,   614,   615,    61,    62,   648,   387,   219,
     130,   390,  2083,   501,  2180,    71,  3291,  3292,   669,   648,
     432,   662,   434,   210,   635,  2191,   637,   662,   663,  2195,
     648,   387,   669,   662,   390,   663,  2202,  2203,  2204,  2205,
     188,    96,    77,   662,   662,   445,   446,  3127,   661,   644,
     228,   662,   663,    18,    19,   666,   667,   387,  1095,  1096,
     390,   667,   158,    61,    62,   648,   612,  4268,   141,   620,
     621,   219,   661,  2144,   194,   662,   663,   668,   648,   662,
     290,   177,   228,   630,   320,   321,   648,   238,   184,   325,
     326,   160,   662,   656,   657,   658,   659,  3227,   669,  1136,
     662,  3231,   387,   610,   120,   390,   384,   258,   171,  2342,
     661,   179,  2183,   661,  3194,   533,   663,   648,     7,  2190,
     271,   241,   648,   158,  2047,   387,   237,  2050,   390,  2330,
    2053,   662,   456,   320,   321,  2307,   662,  3450,   325,   326,
    2306,   237,   290,   652,   653,  2311,   655,  2319,   657,   193,
     648,  2317,  2318,  2325,   648,  3233,  2322,   345,  2324,   387,
    3473,  3474,   390,   373,   662,  3656,   648,   387,  2334,    12,
     390,  2337,   669,  2339,  2340,   197,  2342,  2343,  2344,  4380,
     662,  2353,  2253,  2349,  3497,  2357,  2352,  3485,  2354,   663,
    2261,  2363,  2364,   661,   648,  2361,  2362,  3597,  3597,   661,
    2271,  2272,   237,   661,   355,  2371,   661,  2373,   662,   661,
     226,  2282,  2283,  2284,  2285,   661,  2287,  2288,   648,  2385,
    2386,  3712,   661,    59,  2457,   373,  2011,   323,   648,   661,
      26,   259,   662,   648,   662,   663,  3526,  2403,  2023,   662,
     663,  3539,   662,   387,   661,   387,   390,   662,   390,   572,
    4328,   648,  3480,   364,   122,  2326,  2327,  2328,  2329,   370,
     661,   662,   661,   387,  2497,   662,   390,   100,   364,   648,
    2503,   661,   345,   661,   370,   387,   662,   663,   390,   796,
    2065,    77,   669,   662,  2069,  2356,  3568,  3569,  3570,   661,
    3207,  2457,   648,   661,   122,   141,   661,  3544,   366,   367,
     817,   661,  2087,  2088,   372,  3543,   662,  2473,  2474,  2475,
     130,  2477,   387,   830,   831,   390,   504,   505,   648,   335,
     188,   661,    80,   339,    82,   661,   477,   661,   439,   364,
     346,  2497,   662,   662,   663,   370,   456,  2503,  2409,   378,
     176,  2412,  2413,   108,   180,  2416,  2417,  2418,  2419,  2420,
    2421,  2422,  2423,   662,   663,  2426,   387,   661,   194,   390,
     188,   661,  2857,   648,   661,   387,   130,   125,   390,  2647,
     661,  2649,   661,   493,   194,   661,  3192,   662,  4139,  4140,
     661,   177,   662,   663,   594,   661,   648,  2620,   184,   661,
     148,   219,   661,  3209,  4472,  2180,   141,   661,   549,   615,
    3595,  2896,   167,   249,   439,   238,   662,   663,  2903,   662,
     663,   427,  2907,   662,   663,    18,    19,   662,   663,   661,
     648,   241,   290,  4184,  4185,   258,   661,  3740,   648,   187,
     194,   504,   505,    50,   662,   200,   547,   516,   271,   662,
     663,   237,   662,  2721,  2722,  2723,   594,   662,   663,   661,
    2616,   547,  3221,   661,  2620,  2621,   661,   122,   669,  2954,
      26,   661,   290,  3753,   652,   653,   654,   655,   656,   657,
     658,   659,   662,   663,  2640,   491,   661,   241,  3247,   493,
    2646,  2647,  4560,  2649,  4562,   661,  4247,   501,   599,   609,
    4251,  2724,  3622,   661,   122,   331,   661,   125,  2664,   345,
     662,   663,  4580,   661,   648,   373,   648,   662,   663,   661,
    2676,    77,   547,   116,   117,   118,   119,   120,   662,   630,
     662,   589,   355,   188,   648,  3331,   661,   323,  3334,  3335,
     122,  4609,  4610,   661,   630,   661,   648,   605,   662,   661,
    2706,   661,   661,  2709,   575,   373,  3352,  4165,    33,   662,
     662,   287,   662,   663,   219,  2721,  2722,  2723,  2724,    74,
     188,    35,   662,   663,   599,  2731,  2732,   663,   364,   662,
     663,   662,   663,   648,   370,  2808,  2809,  2362,   661,   652,
     653,   654,   655,   656,   657,   658,   659,   662,    62,   150,
     151,   219,   158,   429,   661,   630,   188,   661,    21,   661,
     345,   662,   663,   661,    27,    50,   620,   621,  2774,   662,
     663,   177,    77,   662,   663,   661,   632,   648,   184,   661,
     223,   224,   225,   226,   661,   290,   648,   661,   663,   662,
     663,   663,   662,   663,   650,   227,   456,   229,   112,  2872,
     661,   115,  2808,  2809,   477,   662,   663,   661,    71,   123,
    3878,  3879,    75,  3881,    77,   420,   141,   661,   504,   505,
      77,   661,   290,   662,   663,    27,    28,   662,   663,   662,
     663,   237,   661,   493,   662,   663,    93,    13,   193,   662,
     663,   661,   440,  2849,   662,   663,  2852,  2853,  2473,  2474,
    2475,  2857,   456,   158,   522,  4266,  4054,   661,   290,    61,
      62,    63,   125,   661,    56,   661,  2872,    43,   373,    71,
    2876,  3939,   662,   663,    66,    77,   549,  2788,  2789,   661,
     235,    83,    84,  3951,    76,    87,   594,   662,   663,   493,
    2896,   661,   335,  2804,   337,   338,   339,  2903,    90,    91,
      92,  2907,   661,   346,  4362,   373,   661,  4176,   263,   111,
      37,   547,  4042,   661,   106,  4154,   487,   323,    94,   122,
      64,   197,    98,   125,   249,    48,   594,   129,   662,   663,
      74,   276,   237,    71,  2940,   662,   663,  2943,   662,   663,
     203,   373,  2948,   273,   387,    89,   260,   390,  2954,   609,
     275,    37,  3608,  3609,  3610,   166,   158,   663,   364,   662,
     663,   566,  2873,   663,   370,    64,   652,   653,   654,   655,
     656,   657,   658,   659,  2885,    74,   661,  2983,   662,   663,
    2986,   194,   587,   543,   427,   188,  2383,  2384,   115,   563,
      89,   166,   122,   666,   630,   122,  4064,   543,  4066,  4067,
     263,   661,   157,   662,   663,   609,  4275,   612,   265,  4278,
    4279,  4280,  4281,   287,  3020,   663,   219,   662,   663,    88,
     345,  2646,  2647,   628,  2649,  3031,  3032,  1248,  1249,   115,
     663,   141,  3057,   235,  4378,  4379,   122,  3062,  4049,  4050,
     242,   366,   367,   357,   194,   663,   401,   490,   491,   193,
     379,   559,   179,   646,   662,   199,   156,   661,   188,   364,
     262,   188,   662,   418,    48,   370,   662,   637,   160,   654,
     655,   656,   657,   658,   659,   160,   160,   253,  2989,   160,
     160,   160,   663,   160,  2995,   404,   343,   290,   125,   594,
     111,   235,   219,   179,   193,   316,  2721,  2722,  2723,  4134,
     199,     7,   188,   366,   367,   661,   110,  4376,  4377,   372,
      77,   100,   369,     4,   492,   378,  4385,   442,   628,   263,
     322,  3127,   663,  4191,   249,    57,   594,   448,  3134,  4259,
    4260,  4261,  4262,   219,   439,   171,   235,   111,   340,   249,
     200,   547,   334,   401,   111,    71,   141,    13,   634,   662,
     140,    10,   663,  3159,   669,   418,   332,  3163,   662,   351,
     290,   662,   594,   290,   263,  4295,  3172,   662,   502,  3175,
     373,   669,   160,   161,   431,   669,   661,   275,  4148,   504,
     505,   663,   158,   287,   668,  3191,  3192,    50,  3194,   632,
     287,   158,   517,   395,   287,   509,   287,   287,  3791,  3792,
    3793,  3207,   404,  3209,   290,   648,   649,   650,   663,   287,
     663,   160,   419,   201,   481,   385,   563,    56,  3874,    21,
     396,   378,   378,   663,   630,   282,   214,    66,   663,   356,
     402,   583,  3238,   663,   497,   345,  3242,    76,   663,   583,
    3246,   368,   547,   373,    13,   372,   373,   141,   663,   238,
     160,    90,    91,    92,   378,   572,   378,   401,  3680,  3681,
     663,   635,   249,   609,   661,   579,   254,   106,   235,   258,
     356,   433,   255,   669,   418,   669,   533,   669,  3700,   267,
    3286,   483,   271,   663,   547,  3707,   372,   373,   249,   656,
    3296,   561,  3298,   607,   599,   252,   181,   489,   100,  4497,
    3325,  4336,   194,   141,  3310,   663,   294,  3313,  3314,   514,
    3316,  3733,    60,  3319,  3736,  3908,  3909,   501,  2943,   418,
    3913,  3914,   663,   405,   194,   630,   572,   652,   653,   654,
     655,   656,   657,   658,   659,  3360,   572,   572,   540,   541,
     542,   604,   518,  3368,   572,   547,   160,   126,    87,    35,
     345,  3376,  3263,   136,   156,   322,   263,    74,   160,   551,
      13,    14,   564,   401,   583,   567,   355,   401,   401,   136,
     401,   359,   261,   340,   261,   519,   568,  4575,  3384,   136,
      48,   401,  3388,   401,   560,   401,  3392,   401,   401,   378,
     619,   594,   194,   403,   504,   505,   619,   364,   663,  4639,
    4639,   603,   663,  3409,  4439,   378,  3031,  3384,   663,   661,
     212,   662,  3418,  4653,  4653,   217,   663,   160,  4658,  4658,
     519,   663,   610,  4663,  4663,   160,  3432,    77,  3434,   160,
     160,   160,   160,   160,  4043,   160,   238,   160,   160,   160,
     160,  3447,  3448,    93,   246,   572,    99,   133,   160,   576,
     160,   345,   579,   160,    27,   160,   258,   160,   160,   160,
     604,   663,   589,   160,   594,   160,   160,   594,   160,   271,
     597,   160,   158,   160,   276,   160,   162,   130,   160,   108,
     160,   642,   614,   285,   134,   378,   572,   661,   477,   669,
     576,   144,   557,   579,   378,   334,   378,   661,    71,   662,
     659,   197,    75,   589,    77,   604,   572,   345,   594,   504,
     505,   597,   351,   662,   167,   662,   202,   170,   663,  3430,
     662,   662,   662,   662,  4160,   590,  4237,   654,   655,   662,
     183,   108,   597,   662,   655,   663,   222,   663,   563,  4607,
     603,   661,   652,   653,   654,   655,   656,   657,   658,   659,
    3175,  4621,   125,   355,   662,   662,   662,   210,  3564,   662,
     549,  3567,  3568,  3569,  3570,   572,   662,   160,   654,   655,
     199,  4226,   572,   661,   663,   662,   378,  3583,   236,   662,
     547,    12,   235,   555,   212,   661,   388,   662,   241,   661,
     167,  3597,  3598,   186,   662,   503,   663,   564,   433,   663,
     661,   287,  3608,  3609,  3610,   663,   235,   661,   201,   572,
     504,   505,   663,  3686,   663,   265,  4232,   197,   420,   662,
     428,   214,   258,   200,  3630,  3631,   258,  4243,   391,   572,
    3636,   663,   285,   472,   174,   160,  3709,   336,   406,   353,
     492,   263,  3683,   533,   263,   533,  3652,  4283,   403,   661,
     489,  3663,   533,   533,   533,  3661,   451,   286,   235,   654,
     655,   656,   657,   658,   659,  3671,   504,   505,   669,   661,
     661,   286,   473,   266,   267,   477,   661,   388,   743,   661,
    3686,   661,   661,   748,   662,   656,   154,   662,   245,   245,
     263,  3316,   669,   343,   662,   160,   662,   383,   662,   501,
     662,   294,   662,  3709,   669,   663,   662,   583,   663,   286,
     643,   282,   551,    48,   779,   662,   366,   367,   160,   369,
     458,   459,   460,   461,   462,   463,   464,   661,   583,   568,
     795,  3737,   661,   419,   558,   559,   560,   661,   661,   563,
     564,   160,   428,   567,   568,   569,   210,   549,   197,  3755,
      73,  3757,  3758,    48,   217,   342,   661,   443,  4469,   653,
     654,   655,   656,   657,   658,   659,  3772,   662,   421,   373,
     363,   258,   425,   838,   839,   258,   841,   842,  4489,   378,
     160,   431,   468,   111,   111,  3791,  3792,  3793,   441,   854,
    3060,   263,   661,   366,   367,   663,   449,   263,   564,   372,
    3711,   603,   564,  4514,   457,   378,   637,  3432,   583,  3434,
     663,   661,   663,   615,   652,   653,   654,   655,   656,   657,
     658,   659,   662,   583,   417,   661,   512,   212,   662,   384,
     663,   378,   516,   635,  3745,   637,   378,   401,   415,   276,
     493,   661,   661,   420,   661,   418,   247,   247,    48,  3760,
     662,   662,   662,   506,   507,  3861,   662,   543,  3769,   663,
     662,   663,   495,   661,   666,   667,   663,   583,  3874,   662,
     499,   662,  3945,   662,   662,   669,   661,   563,   378,   669,
     566,   231,   662,   533,   277,   950,   663,   401,   669,   663,
     519,   662,   583,   583,   385,  3968,   197,   962,   663,   197,
     197,   278,  3908,  3909,  4615,   558,   258,  3913,  3914,  4545,
      35,   258,   661,   120,   661,   125,   125,   566,   414,   661,
     661,   986,   499,   669,   497,   378,   416,   378,    77,    21,
    4641,   516,   669,   493,   587,   564,   662,   566,   488,  3945,
     569,   373,   661,   273,   662,   475,   285,    12,   663,   662,
     147,   433,   661,   661,   269,   661,   609,   197,   611,   637,
      48,    48,  3968,   656,   662,   153,    48,   615,    27,    28,
     615,   194,    35,   661,   547,   604,   319,    35,   609,   662,
     626,   662,  3988,   612,   663,   662,   662,   564,   662,   661,
    3996,  3997,   569,   662,   661,   661,   661,   661,   125,   626,
     263,  4007,    61,    62,    63,   203,   263,   372,   133,    35,
     587,   373,    71,    81,   511,   143,   663,   661,    77,   662,
     194,   663,   662,   662,    83,    84,    21,   662,    87,   663,
     342,   604,   662,   158,   265,   612,  3661,   162,   662,   662,
     428,  4661,   662,   175,   662,   662,   662,   285,   210,   663,
    1115,   628,   111,  3323,  3324,   263,   246,   669,   661,    48,
     884,  3331,    48,    48,  3334,  3335,   125,  4073,   246,  4075,
     129,   420,   661,   661,  4080,  4081,   378,   202,   661,   661,
    4086,   368,  3352,   661,   621,    15,    21,   663,   149,   473,
     373,   342,  4098,   173,   662,   385,  3366,   222,   637,   158,
     609,   620,  3372,  3373,  3374,  3375,  1171,  1172,   566,   661,
      16,   246,    48,   373,    48,  1180,  1181,  1182,  1183,  1184,
    1185,  1186,   538,   661,   637,   661,   661,   484,  1193,  1194,
     662,  1196,  1197,   554,   663,   662,  1201,  1202,   662,   662,
    1205,  1206,  1207,  1208,   661,  1210,  1211,   662,  4154,  4155,
     441,   662,  4158,  1218,  1219,   155,  1221,  1222,  1223,  1224,
    1225,   634,   287,  1228,  1229,  1230,  1231,  1232,  1233,  1234,
    1235,  1236,  1237,    32,  1239,   670,   235,  1242,  1243,   493,
     398,   662,  1247,   242,   662,   574,  1251,  1252,  1253,   385,
     136,  4197,   136,   158,   661,   378,  4202,   373,     6,  1264,
    1265,  1266,   662,   262,   634,   378,   197,    32,  1273,    64,
     662,    64,   662,  1278,   385,   143,   275,   134,   661,  1284,
     130,  1286,  1287,   555,   662,   246,   609,   663,  4234,   154,
     385,   385,   667,  1298,  1299,  1300,   661,  1302,  1303,  1304,
    1305,  1306,   634,  1308,  1309,  1310,  1311,  1312,  1313,  1314,
    1315,   154,   230,   292,  1319,   667,   670,  1322,   383,   124,
     263,   263,   372,   322,  4175,    54,   575,   482,   143,   667,
     154,  4349,   663,   663,   215,   575,   663,   228,    54,  4352,
     154,   340,   194,   662,    48,   667,   194,   194,   455,   575,
     636,   125,   231,   661,   419,   373,   196,   501,  4207,   663,
    3757,  2627,  3753,   428,  2437,   116,   117,   118,   119,   120,
    2433,  2435,  2431,  3760,  4320,  2428,  3764,  2831,   443,   726,
    3770,  4434,  4126,  4235,  2798,  4433,  3781,  3772,  1092,  4407,
    4006,  4641,  4605,    48,   638,  2033,   395,  2094,  4519,  3159,
    4117,  4117,  4611,   468,  4422,   404,  4352,  4117,  4117,  4400,
    4117,  4519,  4117,  4117,  4485,  4426,  4117,  1659,  4117,  4117,
    4438,    14,  4425,  4117,    17,  1718,  4372,  4117,  4117,  2925,
    3186,  3860,  3191,  1134,  3583,  4381,  1418,  4372,  3863,    32,
    4054,  4446,  4135,    36,  4575,  4505,  4545,   512,  1797,  4462,
    4283,   548,  3785,  3018,  1714,  3319,  3296,    50,    51,  3032,
    3308,  1725,  1467,  2388,  4445,    58,  3343,  4514,  3343,  3377,
      63,    64,   223,   224,   225,   226,  3937,  3720,   543,  4193,
    3114,  4445,  3522,  2808,   483,    11,    79,  3525,  3517,  4173,
    4503,    11,  1497,  4184,  1810,  4178,  1501,  4251,  4185,  4247,
    2471,  4086,  1507,  2229,  4522,  3951,    99,  2460,  3017,  1514,
    2224,  3923,  2384,  2383,  4532,  2384,  4462,   648,  1572,  4537,
    3668,   643,  2704,  1568,  4375,  1793,  2087,  3297,   121,  1737,
      13,    14,  3175,  3578,  2669,   659,   938,   130,   131,   132,
    2588,   540,   541,   542,  1996,  2504,  1278,  2614,   547,  1459,
     143,   144,   951,  2615,  2205,  2587,  3641,  4503,  3254,  4080,
    3392,  4081,  3837,   156,  4582,   564,  4584,  1577,   567,  2610,
    3527,  3310,  1212,  3638,  1187,  4464,  4257,   170,  4524,  4597,
    4071,  2105,  4071,   735,   335,  4531,   337,   338,   339,  1328,
    4155,  1079,  3604,  1079,  3571,   346,   896,   190,  1079,  3246,
      54,   556,  4453,  4454,   603,  1079,  2175,  4625,  4626,  2663,
    1553,   637,  4630,  2663,  2176,   208,    99,   210,  1527,  1567,
    2022,  3316,   215,  1434,  4573,   218,  3615,  3581,  3885,  4592,
    4658,  4663,  3712,  3597,  1168,  4581,  4649,   982,  2142,    45,
    4586,    45,  1504,   980,  2098,  1489,  2069,   130,   241,  1491,
     928,   244,  1450,  2219,  2055,  1064,   616,  3564,  4263,  4510,
     545,   144,   661,  1274,   930,   545,  4227,  3132,   726,  4615,
    4229,   264,   726,   726,    -1,    -1,   427,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   167,    -1,    -1,   170,   281,    -1,
      -1,    -1,   285,  4639,    -1,  4641,    -1,    -1,    -1,    -1,
     183,    -1,    -1,  4649,    -1,    -1,    -1,  4653,    -1,    -1,
      -1,    -1,  4658,    -1,    -1,    -1,    -1,  4663,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   210,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    -1,    -1,    17,   490,
     491,   557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   235,    -1,    -1,    -1,    -1,    36,   241,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    50,    51,    -1,   590,    -1,    -1,    -1,    -1,    58,
      -1,   597,    -1,    -1,    63,    64,    -1,    -1,    -1,   382,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      79,    -1,   285,    -1,    -1,    -1,   399,    -1,   401,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,   415,  1828,    -1,    -1,    -1,  1832,    -1,    -1,
      -1,    -1,    -1,   426,    -1,    -1,    -1,  1842,    -1,  1844,
      -1,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   130,   131,   132,    -1,   448,    -1,    -1,   451,    -1,
     453,    -1,    -1,   456,   143,   144,    14,    -1,    -1,    -1,
      -1,    -1,    -1,   466,   467,    -1,    -1,    -1,    -1,    -1,
    1885,   632,    -1,   476,    -1,   478,    -1,    -1,    -1,    -1,
      -1,   170,    -1,    -1,   487,    -1,    -1,    -1,   649,   650,
     493,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,    -1,
      -1,   190,    -1,   506,   507,   508,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1930,  1931,  1932,    -1,   208,
      -1,   210,   748,    -1,    -1,    -1,   215,    -1,   421,   218,
    1945,    -1,   425,    -1,    -1,    -1,   539,    -1,  1953,    -1,
      -1,    99,    -1,   546,    -1,    -1,    -1,    -1,   441,    -1,
      -1,    -1,   241,   779,    -1,   244,   449,  1972,    -1,    -1,
      -1,    -1,    -1,  1978,   457,    -1,  1981,    -1,  1983,   795,
      -1,    -1,   130,    -1,  1989,   264,  1991,  1992,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,   590,    -1,    -1,
      -1,    -1,   281,    -1,    -1,    -1,   285,    -1,    -1,   602,
     493,    -1,    -1,   606,    -1,    -1,   609,    -1,    -1,   167,
      -1,   614,   170,   506,   507,    -1,   842,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   183,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   645,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   210,    -1,    -1,    -1,    -1,  2072,   661,    -1,
      -1,    -1,    -1,    -1,    -1,   558,    -1,  2082,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,    -1,
      -1,    -1,    -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   382,   587,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2120,    -1,    -1,    -1,    -1,
     399,    -1,   401,    -1,    -1,    -1,   609,    -1,   611,    -1,
      -1,    -1,    -1,    -1,   950,    -1,   415,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   962,   426,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   448,
     986,    -1,   451,   232,   453,    -1,    -1,   456,    -1,  2184,
      -1,    -1,    -1,    -1,    -1,    -1,  2191,   466,   467,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,    -1,   478,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   487,    -1,
      -1,    -1,    -1,    -1,   493,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   501,    -1,    -1,    -1,    -1,   506,   507,   508,
      -1,    -1,    -1,    -1,    -1,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     539,    -1,    -1,    -1,    -1,    -1,    -1,   546,    -1,    -1,
      -1,    -1,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   441,    -1,    -1,    -1,    -1,    -1,  1115,
      -1,   449,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   457,
      -1,   590,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   602,    -1,    -1,    -1,   606,    -1,    -1,
     609,    -1,    -1,    -1,    -1,   614,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   493,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1171,  1172,    -1,   506,   507,
      -1,    -1,    -1,    -1,  1180,  1181,   645,    -1,  1184,  1185,
    1186,    -1,    -1,    -1,    -1,    -1,    -1,  1193,  1194,    -1,
    1196,  1197,   661,    -1,    -1,  1201,   445,   446,    -1,  1205,
    1206,  1207,  1208,    -1,  1210,    -1,    -1,    -1,    -1,    -1,
      -1,  2406,  1218,  1219,     7,  1221,  1222,    -1,    -1,    12,
     558,    14,  1228,  1229,    -1,    -1,  1232,  1233,  1234,  1235,
    1236,  1237,    -1,  1239,    27,    28,  1242,  1243,    -1,    -1,
      -1,  1247,    -1,    -1,    -1,  1251,  1252,  1253,    -1,   587,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1264,  1265,
    1266,    -1,    -1,    -1,    -1,    58,    -1,  1273,    -1,    -1,
      63,   609,  1278,   611,    -1,    -1,    -1,    -1,  1284,    -1,
    1286,  1287,    -1,    -1,    77,    -1,    -1,    -1,  2483,    -1,
      83,    84,    -1,    -1,    87,    -1,    -1,  2492,  2493,    -1,
      -1,    -1,    -1,    96,  2499,    -1,    -1,  2502,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1322,    -1,   111,    -1,
    2515,  2516,    -1,  2518,    -1,    -1,  2521,  2522,  2523,  2524,
    2525,    -1,   125,  2528,    -1,    -1,   129,    -1,    -1,    -1,
      -1,    -1,  2537,    -1,   137,    -1,    -1,    -1,  2543,    -1,
    2545,   144,  2547,  2548,    -1,  2550,  2551,    -1,    -1,   152,
    2555,  2556,  2557,    -1,    -1,   158,  2561,  2562,  2563,    -1,
    2565,    -1,  2567,    -1,  2569,    -1,  2571,    -1,  2573,    -1,
      -1,    -1,    -1,  2578,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,
      -1,    -1,    -1,    -1,    -1,  2600,    -1,    -1,  2603,    -1,
      -1,    -1,    -1,    -1,  2609,    -1,    -1,    -1,    -1,  2614,
    2615,    -1,    -1,    -1,     7,    -1,    -1,    -1,    -1,    12,
      -1,    14,    -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   235,    -1,    27,    28,    -1,    -1,    -1,   242,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,
      -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,    61,    62,
      63,    64,    -1,    -1,    -1,    -1,    69,    -1,    71,    -1,
      -1,  1497,   285,    -1,    77,  1501,    -1,    -1,    -1,    -1,
      83,    84,    -1,    -1,    87,    -1,    -1,    -1,  1514,    -1,
      -1,    -1,    -1,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,   322,
      -1,    -1,    -1,    -1,    -1,  2730,    -1,    -1,    -1,    -1,
      -1,    -1,   125,    -1,    -1,    -1,   129,   340,  2743,    -1,
      -1,   344,    -1,    -1,   137,   138,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   152,
      -1,    -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   169,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   388,    -1,    -1,    -1,    -1,
      -1,    -1,   395,    -1,    -1,    -1,    -1,    -1,    -1,   192,
      -1,   404,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2820,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2832,  2833,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     233,    -1,   235,    -1,    -1,    -1,    -1,    -1,   451,   242,
      -1,    -1,  4117,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     483,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   322,
      -1,    -1,    -1,    -1,    -1,  4200,  4201,   540,   541,   542,
      -1,    -1,    -1,    -1,   547,    -1,    -1,   340,    -1,    -1,
      -1,   344,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   564,    -1,    -1,   567,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     7,    -1,    -1,    -1,
      -1,    12,    -1,    14,    -1,    -1,    17,    -1,    -1,   382,
      -1,    -1,  2997,  2998,    -1,   388,    27,    28,    -1,    -1,
     603,    -1,   395,    -1,    -1,    -1,    -1,   610,    -1,    -1,
      -1,   404,  1828,    -1,    -1,    -1,  1832,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,  1844,    -1,
      -1,    -1,    63,    64,   637,    -1,    -1,   640,    69,    -1,
      -1,    -1,    -1,   436,  3049,    -1,    77,  3052,    -1,    -1,
      -1,    -1,    83,    84,    -1,    -1,    87,    -1,   451,   452,
     453,    -1,  4327,  4328,    -1,    96,    -1,    -1,    -1,  3074,
    3075,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     111,    -1,    -1,    -1,  4349,    -1,    -1,    -1,    -1,    -1,
     483,  3096,    -1,    -1,   125,    -1,    -1,    -1,   129,    -1,
    3105,    -1,  3107,    -1,  3109,    -1,   137,   138,    -1,    -1,
      -1,    -1,    -1,   144,  1930,  1931,  1932,    -1,    -1,    -1,
      -1,   152,  3127,    -1,    -1,    -1,    -1,   158,    -1,    -1,
      -1,    -1,    -1,    -1,  3139,    -1,    -1,  1953,   169,  3144,
      -1,    -1,  4407,    -1,    -1,    -1,    -1,   540,   541,   542,
      -1,    -1,    -1,    -1,   547,    -1,  1972,  4422,    -1,    -1,
      -1,   192,    -1,    -1,    -1,  1981,    -1,  1983,    -1,    -1,
      -1,   564,    -1,  4438,   567,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3194,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   590,    -1,  3204,
      -1,    -1,   233,    -1,   235,    -1,    -1,  4472,    -1,    -1,
     603,   242,    -1,    -1,  3219,  3220,    -1,   610,    -1,  4484,
    4485,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,  3243,  3244,
      -1,    -1,    -1,  3248,   637,    -1,    -1,   640,    -1,    -1,
      -1,    -1,    -1,    -1,   285,    -1,    -1,  4522,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2082,  4532,    -1,    -1,
      -1,    -1,  4537,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   322,    -1,    -1,    -1,  4560,    -1,  4562,    -1,    -1,
      -1,    -1,    -1,    -1,  2120,    -1,    -1,    -1,    -1,   340,
      -1,    -1,    -1,   344,    -1,  4580,    -1,  4582,    -1,  4584,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4597,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4609,  4610,    -1,    -1,    -1,    -1,
      -1,   382,    -1,    -1,    -1,    -1,    -1,   388,    -1,    -1,
    4625,  4626,    -1,    -1,   395,  4630,    -1,    -1,  2184,    -1,
      -1,    -1,    -1,   404,    -1,  2191,  3381,  3382,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   436,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3419,  3420,    -1,    -1,    -1,    -1,
     451,   452,   453,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    35,    36,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3453,    -1,
      -1,    -1,   483,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      61,    62,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    72,  3477,    -1,  3479,    -1,    -1,  3482,  3483,    -1,
    3485,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3494,
      -1,    -1,    -1,    -1,  3499,    -1,    97,  3502,    99,  3504,
    3505,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   540,
     541,   542,    -1,    -1,    -1,    -1,   547,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   564,  3539,    -1,   567,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   157,   158,    -1,   590,
      -1,    -1,   163,    -1,    -1,   166,  3571,    -1,    -1,    -1,
      -1,    -1,   603,    -1,    -1,    -1,    -1,    -1,    -1,   610,
      -1,    -1,    27,    28,    -1,    -1,    -1,    -1,    -1,    -1,
    2406,    -1,    -1,    -1,    -1,    27,    28,   198,    -1,   200,
      -1,    -1,    -1,    -1,    -1,    -1,   637,    -1,   209,   640,
     211,    -1,    -1,    -1,    -1,    -1,    61,    62,    63,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    71,    -1,    -1,    -1,
      -1,    63,    77,   234,   235,    -1,    -1,    -1,    83,    84,
      -1,    -1,    87,    -1,    -1,    77,    -1,    -1,    -1,    -1,
      -1,    83,    84,    -1,    -1,    87,    -1,    -1,    -1,    -1,
     261,    -1,    -1,    -1,    -1,    -1,   111,  2483,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2492,  2493,    -1,   111,
     125,   282,    -1,  2499,   129,    -1,  2502,    -1,    -1,    -1,
      -1,    -1,    -1,   125,    -1,    -1,    -1,   129,    -1,  2515,
    2516,    -1,  2518,    -1,    -1,  2521,  2522,  2523,  2524,  2525,
      -1,    -1,    -1,   158,    -1,   316,    -1,    -1,    -1,    -1,
      -1,  2537,    -1,    -1,    -1,    -1,   158,  2543,    -1,  2545,
      -1,  2547,  2548,    -1,  2550,    -1,    -1,    -1,    -1,  2555,
    2556,  2557,    -1,    -1,    -1,  2561,  2562,  2563,    -1,  2565,
      -1,  2567,    -1,  2569,    -1,  2571,    -1,  2573,    34,    35,
      -1,    -1,  2578,    -1,    40,    -1,    42,    -1,    44,    45,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     381,    -1,    -1,    -1,    -1,    -1,    62,    -1,    -1,    -1,
     235,    -1,    -1,  2609,    -1,    -1,    -1,   242,  2614,    -1,
      -1,    -1,    -1,   235,    -1,    -1,    -1,   408,    -1,    -1,
     242,    -1,    -1,    -1,    -1,    -1,    -1,   262,   419,   420,
      -1,    -1,   423,   424,    -1,    -1,    -1,    -1,    -1,    -1,
     262,    -1,    -1,    -1,    -1,    -1,   112,    -1,    -1,   115,
      -1,    -1,    -1,   444,    -1,    -1,    -1,   123,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   142,  3872,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   322,    -1,    -1,
      -1,    -1,    -1,   159,  3889,    -1,    -1,    -1,    -1,  3894,
     322,    -1,    -1,  3898,    -1,   340,    -1,   498,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,
     511,   187,    -1,   189,  2730,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2743,    -1,   205,
     206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   543,    -1,    -1,    -1,   547,    -1,    -1,    -1,
     395,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,
      -1,    -1,    -1,   395,    -1,   566,    -1,    -1,    -1,    -1,
      -1,   247,   404,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   288,   289,    -1,   291,    -1,    -1,    -1,    -1,
      -1,    -1,  4027,   624,  4029,    -1,    -1,    -1,    -1,    -1,
     631,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4054,
      -1,   483,   328,   329,   330,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   347,   348,   349,    -1,    -1,    -1,    -1,   354,    -1,
      -1,   357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   540,   541,   542,    -1,   375,
     376,    -1,   547,    -1,    -1,    -1,    -1,    -1,   540,   541,
     542,    -1,  4117,    -1,    -1,   547,    -1,    -1,    -1,   564,
      -1,    -1,   567,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   564,   409,   410,   567,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   603,   435,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   603,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4193,  4194,
      -1,    -1,    -1,    -1,    -1,  4200,  4201,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   497,    -1,    -1,    -1,   501,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3049,    -1,    -1,  3052,   513,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3074,  3075,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3096,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3105,
      -1,  3107,    -1,  3109,    -1,    -1,    -1,   573,    -1,    -1,
     576,    -1,    -1,   579,   580,   581,   582,    -1,  4313,    -1,
    4315,  3127,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4325,    -1,  4327,  4328,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4349,    -1,   622,   623,    -1,    -1,
      -1,    -1,  4357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   650,    -1,    -1,    -1,  3194,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3204,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4405,    -1,  4407,  3219,  3220,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4422,  4423,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3243,  3244,    -1,
      -1,    -1,  3248,  4438,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4471,  4472,    -1,  3285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4484,
    4485,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4497,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4522,    -1,    -1,
      -1,    -1,    -1,    -1,  4529,    -1,    -1,  4532,    -1,    -1,
      -1,    -1,  4537,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4553,    -1,
      -1,    -1,    -1,    -1,    -1,  4560,    -1,  4562,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3381,  3382,    -1,    -1,    -1,
    4575,    -1,    -1,    -1,    -1,  4580,    -1,  4582,    -1,  4584,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4597,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4609,  4610,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4625,  4626,    -1,    -1,    -1,  4630,    -1,    -1,    -1,    -1,
      -1,  4636,    -1,    -1,    -1,    -1,    -1,  3453,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4664,
      -1,  3477,    -1,  3479,    -1,    -1,  3482,  3483,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3494,    -1,
      -1,    -1,    -1,  3499,    -1,    -1,  3502,    -1,  3504,  3505,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,  3571,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,    -1,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,    -1,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,  3872,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,  3889,   374,    -1,   376,   377,  3894,   379,
     380,   381,  3898,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   395,   396,    -1,    -1,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
      -1,    -1,   452,    -1,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,    -1,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,   491,    -1,    -1,    -1,    -1,   496,   497,   498,    -1,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,  4027,   512,  4029,   514,    -1,    -1,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
      -1,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,    -1,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   663,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4193,  4194,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4313,    -1,  4315,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4325,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4405,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4423,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4471,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4529,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,  4553,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    46,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
    4636,   101,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,  4664,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,   268,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,   584,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,    -1,    -1,    -1,    -1,
     660,   661,    -1,    -1,   664,   665,    -1,    -1,   668,   669,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
     655,    -1,    -1,    -1,    -1,   660,   661,    -1,    -1,   664,
     665,    -1,    -1,   668,   669,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,   101,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,   656,    -1,    -1,    -1,
     660,   661,    -1,    -1,   664,   665,    -1,    -1,   668,   669,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
     655,   656,    -1,    -1,    -1,   660,   661,    -1,    -1,   664,
     665,    -1,    -1,   668,   669,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,   101,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,    -1,    -1,    -1,    -1,
     660,   661,    -1,    -1,   664,   665,    -1,    -1,   668,   669,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
     655,    -1,    -1,    -1,    -1,   660,   661,    -1,    -1,   664,
     665,    -1,    -1,   668,   669,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,   101,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,    -1,    -1,    -1,    -1,
     660,   661,    -1,    -1,   664,   665,    -1,    -1,   668,   669,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
     655,    -1,    -1,    -1,    -1,   660,   661,    -1,    -1,   664,
     665,    -1,    -1,   668,   669,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,   101,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,    -1,    -1,    -1,    -1,
     660,   661,    -1,    -1,   664,   665,    -1,    -1,   668,   669,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
     655,    -1,    -1,    -1,    -1,   660,   661,    -1,    -1,   664,
     665,    -1,    -1,   668,   669,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,   101,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,    -1,    -1,    -1,    -1,
     660,   661,    -1,    -1,   664,   665,    -1,    -1,   668,   669,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
     655,    -1,    -1,    -1,    -1,   660,   661,    -1,    -1,   664,
     665,    -1,    -1,   668,   669,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,   101,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,    -1,    -1,    -1,    -1,
     660,   661,    -1,    -1,   664,   665,    -1,    -1,   668,   669,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
     655,    -1,    -1,    -1,    -1,   660,   661,    -1,    -1,   664,
     665,    -1,    -1,   668,   669,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,   101,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,    -1,    -1,    -1,    -1,
     660,   661,    -1,    -1,   664,   665,    -1,    -1,   668,   669,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
     655,    -1,    -1,    -1,    -1,   660,   661,    -1,    -1,   664,
     665,    -1,    -1,   668,   669,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,   101,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,    -1,    -1,    -1,    -1,
     660,   661,    -1,    -1,   664,   665,    -1,    -1,   668,   669,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    37,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,   399,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,   668,   669,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,   263,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,   275,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,   493,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,   519,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,   669,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,   263,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,   399,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,   519,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,   669,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,   145,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,   399,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,   661,    15,    16,
      -1,   665,    -1,    20,    -1,   669,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,   399,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,   438,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,   493,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,   661,    15,    16,    -1,   665,    -1,
      20,    -1,   669,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,   493,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,   661,    15,    16,    -1,    -1,    -1,    20,    -1,   669,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
     493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,   662,
      15,    16,    -1,    -1,    -1,    20,   669,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,   399,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     5,     6,   662,     8,     9,
      10,    11,    12,   668,   669,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,   661,    15,    16,    -1,    -1,    -1,    20,    -1,   669,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,   661,    15,
      16,    -1,    -1,    -1,    20,    -1,   669,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,   399,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,
     656,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,   669,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,   399,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,   668,   669,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,   399,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,   438,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,   669,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,   669,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,   669,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,   399,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,   669,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   392,    -1,   394,   395,   396,    -1,   398,
     399,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
     529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,   668,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,   668,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,   399,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,   438,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,   668,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,   399,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,   668,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,   399,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,   668,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
     399,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
     529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,   668,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,   668,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,   399,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,   438,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,   668,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,   399,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,     5,     6,   650,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,   662,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,   399,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
       5,     6,   650,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,   662,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,   399,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,     5,     6,   650,     8,     9,    10,    11,
      12,   656,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,   399,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,     5,     6,   650,     8,
       9,    10,    11,    12,   656,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
     399,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
     529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,     5,
       6,   650,     8,     9,    10,    11,    12,   656,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,   399,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,     5,     6,   650,     8,     9,    10,    11,    12,
     656,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,    -1,    -1,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,   521,   522,
     523,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,   594,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,     5,     6,   650,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    18,    19,
      20,    21,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,   387,    -1,    -1,
     390,    -1,    -1,    -1,   394,   395,   396,    -1,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,   648,    -1,
     650,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,   160,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,   399,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,   502,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,     5,     6,   650,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,   399,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,     5,     6,   650,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,   594,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
       5,     6,   650,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,   399,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,     5,     6,   650,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,   104,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,   399,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,     5,     6,   650,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,   104,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
     399,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
     529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,     5,
       6,   650,     8,     9,    10,    11,    12,    13,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,   399,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,     5,     6,   650,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    37,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,     5,     6,   650,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,     5,     6,
     650,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,   399,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,   438,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,     5,     6,   650,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,   399,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,     5,     6,   650,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    95,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,   172,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,   399,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,     5,     6,   650,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,   399,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,   522,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
       5,     6,   650,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,   399,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,     5,     6,   650,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,   399,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,     5,     6,   650,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
     399,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
     529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,     5,
       6,   650,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,   399,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,     5,     6,   650,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,     5,     6,   650,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,     5,     6,
     650,     8,     9,    10,    11,    12,    13,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,   399,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,   438,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,     5,     6,   650,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,   399,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,     5,     6,   650,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,   399,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,   418,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,     5,     6,   650,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,   399,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
       5,     6,   650,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,   399,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,     6,   650,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    16,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,   150,   151,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,   198,    -1,   200,    -1,
     202,    -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   395,   396,    -1,    -1,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,    -1,    -1,
     452,    -1,   454,   455,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,   468,    -1,    -1,   471,
     472,   473,   474,   475,    -1,    -1,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,    -1,   488,   489,    -1,   491,
      -1,    -1,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,
     512,    -1,   514,    -1,    -1,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,
     542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
      -1,    -1,    -1,   605,    -1,    -1,   608,    -1,    -1,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,
      -1,    -1,   644,    -1,   646,   647,    -1,     6,   650,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,   150,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,    -1,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,    -1,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
      -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,   396,    -1,    -1,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,    -1,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,    -1,    -1,   452,    -1,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,    -1,    -1,   468,
      -1,    -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,    -1,   488,
     489,    -1,   491,    -1,    -1,    -1,    -1,   496,   497,   498,
      -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,
      -1,   510,    -1,   512,    -1,   514,    -1,    -1,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
     529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
      -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,    -1,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,
      -1,    -1,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,   634,    -1,   636,    -1,    -1,
      -1,   640,   641,    -1,    -1,   644,    -1,   646,   647,    -1,
       6,   650,     8,     9,    10,    11,    12,    -1,    -1,    -1,
      16,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    -1,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,   150,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,   198,    -1,   200,    -1,   202,    -1,    -1,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,
     396,    -1,    -1,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,    -1,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,    -1,    -1,   452,    -1,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,   468,    -1,    -1,   471,   472,   473,   474,   475,
      -1,    -1,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,    -1,   488,   489,    -1,   491,    -1,    -1,    -1,    -1,
     496,   497,   498,    -1,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,    -1,
      -1,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,
      -1,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,    -1,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,   634,    -1,
     636,    -1,    -1,    -1,   640,   641,    -1,    -1,   644,    -1,
     646,   647,    -1,     6,   650,     8,     9,    10,    11,    12,
      -1,    -1,    -1,    16,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,    -1,    -1,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,    -1,    -1,   452,
      -1,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,
     473,   474,   475,    -1,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,    -1,   488,   489,    -1,   491,    -1,
      -1,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,    -1,    -1,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,    -1,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,    -1,
      -1,   644,    -1,   646,   647,    -1,     6,   650,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,    -1,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,    -1,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   395,   396,    -1,    -1,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
      -1,    -1,   452,    -1,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,    -1,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,   491,    -1,    -1,    -1,    -1,   496,   497,   498,    -1,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,    -1,    -1,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
      -1,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,    -1,    -1,   644,    -1,   646,   647,    -1,     6,
     650,     8,     9,    10,    11,    12,    -1,    -1,    -1,    16,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,    -1,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,
      -1,    -1,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,    -1,    -1,    -1,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,   438,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,    -1,    -1,   452,    -1,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,    -1,
      -1,   468,    -1,    -1,   471,   472,   473,   474,   475,    -1,
      -1,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
      -1,   488,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,
     497,   498,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,    -1,   510,    -1,   512,    -1,   514,    -1,    -1,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,    -1,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,
      -1,   608,    -1,    -1,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,   636,
      -1,    -1,    -1,   640,   641,    -1,    -1,   644,    -1,   646,
     647,    -1,     6,   650,     8,     9,    10,    11,    12,    -1,
      -1,    -1,    16,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    -1,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,   198,    -1,   200,    -1,   202,    -1,
      -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   395,   396,    -1,    -1,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,    -1,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,    -1,   488,   489,    -1,   491,    -1,    -1,
      -1,    -1,   496,   497,   498,    -1,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,    -1,    -1,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,    -1,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,    -1,    -1,
     644,    -1,   646,   647,    -1,     6,   650,     8,     9,    10,
      11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    -1,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,    -1,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
      -1,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   395,   396,    -1,    -1,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,    -1,
      -1,   452,    -1,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,    -1,    -1,   468,    -1,    -1,
     471,   472,   473,   474,   475,    -1,    -1,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,    -1,   488,   489,    -1,
     491,    -1,    -1,    -1,    -1,   496,   497,   498,    -1,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,
      -1,   512,    -1,   514,    -1,    -1,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,
     541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
      -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,    -1,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,
     641,    -1,    -1,   644,    -1,   646,   647,    -1,     6,   650,
       8,     9,    10,    11,    12,    -1,    -1,    -1,    16,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,    -1,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,    -1,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,    -1,
      -1,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,    -1,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,    -1,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,    -1,
     488,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,   497,
     498,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,    -1,    -1,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,    -1,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,
      -1,    -1,   640,   641,    -1,    -1,   644,    -1,   646,   647,
      -1,     6,   650,     8,     9,    10,    11,    12,    -1,    -1,
      -1,    16,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    -1,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,   198,    -1,   200,    -1,   202,    -1,    -1,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,   396,    -1,    -1,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
      -1,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,    -1,    -1,   452,    -1,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,    -1,    -1,   468,    -1,    -1,   471,   472,   473,   474,
     475,    -1,    -1,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,    -1,   488,   489,    -1,   491,    -1,    -1,    -1,
      -1,   496,   497,   498,    -1,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,
      -1,    -1,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,    -1,   540,   541,   542,   543,    -1,
      -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,
     605,    -1,    -1,   608,    -1,    -1,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,   636,    -1,    -1,    -1,   640,   641,    -1,    -1,   644,
      -1,   646,   647,    -1,     6,   650,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    16,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,   198,    -1,   200,    -1,
     202,    -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   395,   396,    -1,    -1,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,    -1,    -1,
     452,    -1,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,   468,    -1,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,    -1,   488,   489,    -1,   491,
      -1,    -1,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,
     512,    -1,   514,    -1,    -1,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,
     542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
      -1,    -1,    -1,   605,    -1,    -1,   608,    -1,    -1,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
      -1,    -1,   644,    -1,   646,   647,    -1,    -1,   650
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   130,   131,   132,   143,   144,   156,   170,
     190,   208,   210,   215,   218,   241,   244,   264,   281,   285,
     382,   399,   401,   415,   426,   448,   451,   453,   456,   466,
     467,   476,   478,   487,   493,   501,   506,   507,   508,   539,
     546,   590,   602,   606,   609,   614,   645,   661,   672,   675,
     676,   677,   678,   679,   681,   686,   688,   710,   743,   770,
     777,   778,   897,   980,  1068,  1076,  1124,  1125,  1126,  1129,
    1143,  1146,  1151,  1153,  1154,  1159,  1162,  1167,  1174,  1185,
    1186,  1304,  1306,  1319,  1320,  1338,  1342,  1346,  1353,  1368,
    1372,  1375,  1385,  1391,  1395,  1397,  1398,  1451,  1472,  1478,
    1480,  1481,  1483,  1490,  1493,  1520,  1526,  1527,  1528,  1529,
    1583,  1590,  1591,    12,   108,   127,   200,   243,   286,   420,
     499,   564,   566,   612,  1547,  1548,  1549,  1552,   282,   371,
    1161,  1521,   572,  1442,   235,     5,     6,     8,     9,    10,
      11,    12,    15,    16,    20,    23,    25,    26,    27,    28,
      29,    30,    32,    36,    40,    43,    44,    45,    47,    49,
      50,    53,    56,    57,    59,    60,    61,    63,    65,    66,
      67,    68,    69,    70,    72,    73,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    87,    88,    90,
      91,    92,    93,    94,    98,   101,   103,   106,   110,   111,
     112,   115,   120,   121,   126,   127,   129,   133,   135,   136,
     137,   138,   139,   143,   146,   147,   148,   152,   154,   155,
     157,   158,   159,   162,   163,   165,   166,   167,   168,   169,
     170,   173,   174,   175,   176,   177,   180,   181,   183,   184,
     185,   186,   187,   190,   191,   195,   196,   198,   200,   202,
     204,   205,   206,   207,   209,   211,   215,   216,   218,   221,
     222,   226,   227,   228,   229,   232,   233,   234,   237,   242,
     243,   244,   248,   252,   253,   255,   256,   260,   262,   265,
     266,   269,   272,   273,   279,   280,   282,   284,   286,   287,
     295,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   316,
     317,   318,   320,   321,   322,   323,   325,   326,   331,   332,
     333,   334,   335,   336,   339,   340,   342,   344,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   357,   358,   361,
     362,   363,   364,   365,   369,   370,   374,   376,   377,   379,
     380,   381,   384,   394,   395,   396,   398,   399,   400,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   413,
     415,   416,   417,   419,   421,   422,   423,   424,   425,   427,
     428,   429,   432,   436,   437,   438,   439,   440,   443,   444,
     445,   446,   447,   449,   450,   452,   453,   454,   457,   458,
     459,   460,   461,   462,   463,   464,   466,   468,   469,   471,
     472,   473,   475,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   491,   492,   496,   497,   498,
     499,   503,   507,   509,   510,   511,   512,   514,   515,   516,
     517,   518,   524,   525,   526,   528,   529,   531,   534,   536,
     538,   539,   540,   541,   542,   543,   546,   547,   550,   551,
     552,   553,   554,   555,   558,   559,   560,   561,   563,   564,
     567,   568,   569,   570,   573,   574,   576,   577,   578,   579,
     585,   586,   590,   591,   592,   593,   595,   596,   598,   599,
     601,   602,   605,   608,   610,   612,   613,   619,   621,   624,
     628,   630,   631,   632,   633,   640,   641,   642,   644,   645,
     646,   647,   650,   737,  1439,  1445,  1449,  1450,   316,   457,
     563,   566,  1474,  1474,   641,  1522,   108,   199,   286,   499,
     519,   564,   569,   604,   612,   719,   947,   948,   949,  1046,
    1047,  1048,   231,   293,   429,  1344,  1345,  1305,   108,   167,
     200,   235,   286,   420,   499,   564,   569,   587,   612,   628,
    1315,  1445,  1161,   103,   536,   779,   735,   736,   669,  1436,
    1438,  1445,   687,   128,   220,   293,  1321,   407,    87,   428,
    1396,   111,   235,   647,  1403,  1474,  1161,   661,   898,  1445,
    1392,   487,   612,  1474,  1161,   128,   293,  1322,  1341,  1386,
     522,   767,   771,   772,  1445,   735,  1522,  1445,  1189,  1190,
    1191,    61,    62,   125,   209,   282,   352,   404,   498,   585,
     668,  1008,  1445,  1452,  1457,  1461,  1462,  1354,   771,   204,
     511,   585,   204,   511,   566,  1348,   407,  1479,  1341,  1445,
      32,    79,   154,   415,   437,   478,   539,  1586,   493,   661,
    1187,     0,   156,   673,   415,   104,   274,   612,  1084,  1442,
    1445,  1447,  1448,  1510,  1511,   608,  1127,  1141,   176,   195,
     402,  1373,  1436,  1445,   160,  1088,  1445,   160,   737,   480,
    1482,   212,   737,  1447,   845,   846,   849,   872,  1445,  1436,
     230,  1314,   167,  1074,  1547,  1474,  1522,  1168,   744,   669,
     583,   185,  1144,  1155,    19,  1523,   230,   950,   212,  1447,
     847,   872,   950,   390,  1544,  1548,  1549,  1550,  1551,  1552,
     566,   948,   235,   235,   235,   197,  1313,  1437,  1445,  1344,
       8,    23,    29,    35,    37,    38,    39,    41,    54,    55,
      61,    62,    69,    72,    93,    96,    97,   102,   104,   107,
     108,   113,   114,   115,   120,   122,   125,   171,   178,   179,
     188,   195,   205,   207,   213,   219,   226,   230,   241,   245,
     271,   279,   290,   319,   324,   335,   339,   341,   345,   346,
     347,   348,   349,   356,   366,   367,   368,   372,   373,   397,
     404,   409,   410,   412,   427,   455,   456,   475,   477,   484,
     485,   491,   544,   545,   552,   556,   557,   562,   572,   576,
     577,   578,   579,   588,   589,   590,   594,   597,   612,   616,
     617,   618,   620,   625,   627,   632,   633,   650,   654,   655,
     656,   660,   661,   664,   665,   668,   669,  1006,  1200,  1201,
    1204,  1205,  1206,  1207,  1211,  1214,  1215,  1216,  1217,  1218,
    1219,  1226,  1227,  1422,  1424,  1426,  1427,  1428,  1430,  1432,
    1434,  1439,  1445,  1314,  1314,  1314,  1445,   212,  1314,  1314,
     872,  1314,  1314,  1314,  1474,   682,  1376,   135,  1494,  1445,
     381,    68,   433,   669,  1447,   231,  1120,  1445,  1204,  1445,
     246,  1399,  1473,  1474,   981,  1204,    48,   899,   197,    35,
     316,  1359,  1393,  1445,   735,  1163,  1474,   246,  1323,   316,
     428,   511,  1387,  1388,   621,   768,   501,   773,  1491,   583,
    1523,   603,  1530,  1531,   246,   388,  1281,  1282,  1301,  1302,
      13,   140,   220,   527,   528,   529,   530,   531,   532,   549,
    1196,  1197,  1198,  1543,   501,   669,    35,   125,   160,   502,
    1009,  1010,  1331,  1447,   194,  1331,   255,   433,  1463,  1464,
    1466,  1468,   668,  1447,    35,   125,  1012,  1013,  1447,   669,
     585,  1453,  1460,  1462,   663,  1454,  1331,    36,    61,    72,
      97,    99,   109,   158,   163,   166,   198,   200,   209,   211,
     234,   235,   261,   282,   316,   381,   408,   419,   420,   423,
     424,   444,   498,   511,   547,   566,   631,  1008,  1045,  1355,
    1359,  1360,  1362,  1458,   773,   447,   534,  1138,  1139,  1140,
     433,   637,  1130,  1131,  1132,  1138,  1347,  1445,  1474,  1120,
      37,   219,   572,  1423,  1443,  1585,  1585,  1585,    96,  1584,
    1585,  1585,  1189,  1187,   662,   667,  1445,   661,  1203,   661,
     228,   668,   228,   465,   663,  1515,   300,   301,   445,   446,
     524,   525,   526,   708,  1142,   612,  1133,  1134,   160,  1370,
    1369,   333,   570,   596,  1070,   610,  1448,  1072,  1447,   851,
     873,  1445,  1071,   384,     7,    58,   144,   367,   432,   434,
     874,  1069,   171,   735,   737,   533,  1553,  1554,  1073,  1152,
    1169,  1170,  1171,  1172,  1436,   661,   745,  1445,   689,   690,
    1311,  1312,  1436,  1311,    57,   369,   369,   448,  1524,   366,
     367,  1210,  1445,   850,   873,   193,     7,   735,   456,    11,
     167,   200,   420,   587,   722,  1546,  1554,  1569,  1571,  1572,
    1578,   200,   722,  1545,  1554,  1569,  1572,  1578,  1547,  1552,
     950,  1445,  1445,  1445,  1313,  1436,  1445,   197,   663,   669,
    1343,   661,   661,   661,  1214,   661,   661,   661,  1204,  1239,
     661,   661,   661,   661,   661,   661,   661,   661,  1203,  1203,
     661,   995,   661,   661,   661,   572,   661,   661,   661,   661,
     661,   661,   661,   661,   661,   661,   661,   661,   661,  1204,
     661,   661,   661,  1237,  1238,  1432,  1445,   661,   661,   661,
     661,   661,   661,   661,   661,   661,  1204,   995,   661,   661,
     661,   661,   661,   661,   661,   661,   661,   661,   661,   661,
     661,   661,   661,   661,   661,   995,   572,   661,   661,   661,
     572,   661,   661,   661,    37,   219,   572,   661,  1203,   995,
     995,   661,   661,   661,   661,   661,   661,  1214,  1214,  1214,
    1204,  1539,  1540,  1445,   668,  1228,  1447,  1445,   663,    18,
      19,    21,   387,   390,   648,  1202,  1208,  1209,  1442,  1445,
     160,   161,   201,   214,   254,   267,   294,   359,  1212,    33,
     141,   249,   275,   345,   442,   504,   505,   517,   652,   653,
     654,   655,   656,   657,   658,   659,  1210,  1214,    71,   389,
    1443,   259,   661,   669,  1445,   737,  1445,   378,   873,   737,
    1447,   370,   630,   883,   885,  1316,  1317,  1318,  1360,   737,
     735,  1310,  1314,   615,   683,    35,   133,   158,   162,   202,
     222,   287,   383,   419,   428,   443,   468,   512,   543,  1377,
    1382,  1383,  1474,    86,   668,   780,   781,   782,   783,  1445,
      13,    14,    99,   130,   144,   167,   170,   183,   210,   235,
     241,   285,   421,   425,   441,   449,   457,   493,   506,   507,
     558,   587,   609,   611,  1495,  1497,  1499,  1500,    21,   160,
    1269,  1270,  1484,  1445,  1323,   516,   669,    50,    85,   293,
    1405,  1436,  1475,  1476,  1160,   662,   277,   280,   430,   900,
     902,   668,   680,  1442,   287,  1164,  1448,  1165,  1166,  1436,
    1147,  1436,    50,  1389,   663,  1443,    56,    66,    76,    90,
      91,    92,   106,   334,   351,   489,   551,   568,   774,   776,
      13,   425,  1492,  1497,   487,  1525,  1524,    13,   140,  1536,
     146,   392,   668,  1299,  1300,  1303,  1447,    48,   276,  1285,
    1286,   197,  1193,   194,   285,  1199,  1200,  1198,  1445,    71,
    1015,  1204,  1448,   404,   572,  1470,   273,   380,   643,   663,
    1467,   663,  1465,   209,   282,   498,  1459,  1331,  1445,  1463,
    1454,  1331,  1455,  1456,  1457,  1461,    13,    35,   125,   378,
    1204,  1471,   166,   275,   635,  1366,   661,   108,   167,   200,
     420,   566,   587,   612,   628,  1366,    13,   959,  1447,  1285,
     197,   249,  1361,  1363,    70,   543,   194,   543,   563,    70,
     543,    13,    43,    94,    98,   253,   332,   396,   518,   560,
    1349,  1350,  1351,   166,   222,   543,   543,  1285,  1366,  1363,
     287,   157,    73,   422,   563,   586,   543,   624,   663,   380,
     643,    88,   663,   194,   709,  1312,   493,   661,   665,  1242,
    1243,  1244,  1245,  1246,  1250,  1436,   663,   379,  1588,   559,
    1589,   646,   258,   471,  1587,   662,  1282,  1286,  1531,  1532,
    1534,  1535,   156,   674,   662,   662,    48,  1447,    48,   637,
      65,   256,   365,   535,   553,   644,  1506,  1507,  1511,   637,
    1081,   160,   160,   160,   160,   160,   160,   663,   160,  1128,
     404,  1135,  1447,   194,  1185,  1319,  1320,  1338,  1342,  1371,
    1374,  1423,  1445,   125,   945,   946,   956,   957,  1018,   111,
     738,   316,     7,   852,   738,   661,   110,   869,   869,   869,
       4,     7,    12,    14,    17,    27,    28,    58,    63,    64,
      69,    77,    83,    84,    87,    96,   111,   129,   137,   138,
     144,   152,   158,   169,   192,   233,   235,   242,   262,   285,
     322,   340,   344,   382,   388,   395,   404,   436,   451,   452,
     453,   483,   540,   541,   542,   547,   564,   567,   590,   603,
     610,   637,   640,   952,   954,   956,   957,  1089,  1090,  1091,
    1096,  1099,  1102,  1108,  1109,  1110,  1111,  1115,  1117,  1118,
    1278,  1075,   492,   628,  1554,  1311,   249,   663,   235,   263,
     401,  1043,  1180,  1182,  1183,   746,   747,  1204,   232,   295,
     296,   297,   298,   299,   302,   303,   304,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   317,   318,   704,
     705,   708,   458,   459,   460,   461,   462,   463,   464,   691,
     692,   176,   429,   663,  1145,    59,   176,   180,   194,   331,
     429,  1156,  1157,  1158,    57,   448,   171,   718,   852,   111,
     869,  1510,   200,   950,   737,  1445,   737,   737,  1554,  1436,
    1049,  1050,  1049,  1049,   615,   401,  1248,  1249,   669,  1243,
    1437,   656,  1445,  1204,  1204,    13,   140,  1233,  1271,  1233,
    1233,  1233,   634,  1241,  1204,  1204,  1204,  1236,  1236,  1204,
    1204,  1204,   140,  1233,  1271,   373,   662,   662,  1204,  1204,
    1204,  1204,  1432,  1539,   116,   117,   118,   119,   120,   223,
     224,   225,   226,   335,   337,   338,   339,   346,   427,   490,
     491,   632,   649,   650,  1266,  1267,  1204,  1235,  1236,   112,
     115,   576,   579,  1268,   140,  1229,  1204,  1204,  1204,  1204,
    1266,  1204,  1236,  1238,    10,   663,   669,   140,  1233,  1204,
    1204,   140,  1233,  1204,  1204,  1236,  1236,  1236,  1204,  1204,
    1236,  1207,  1204,  1204,  1204,  1204,  1204,  1204,   662,  1204,
    1233,  1233,  1204,  1204,   140,  1233,  1204,  1267,  1267,  1204,
      46,   268,   584,  1204,  1204,   662,  1433,  1434,  1445,  1233,
    1233,  1204,  1204,  1204,   662,   663,   662,   493,   661,  1537,
    1538,  1204,  1459,   502,   669,  1201,  1442,  1445,  1204,  1204,
    1204,   179,   372,   589,   605,  1210,    13,    20,  1206,  1213,
    1207,  1207,   661,  1214,  1207,  1207,  1207,  1207,   275,  1207,
    1207,   245,  1207,   245,  1207,  1207,  1207,  1207,  1207,    33,
     249,   275,   442,  1447,  1214,  1443,  1204,  1223,  1224,  1225,
     656,  1445,   669,  1436,  1316,   663,  1318,   158,  1448,  1509,
    1311,  1307,   668,   684,   685,   287,   287,   287,   287,    50,
     287,   287,   663,  1378,   115,   576,   579,   775,   785,  1227,
    1426,  1432,  1447,   663,   160,   419,  1498,   481,   481,   564,
     569,   612,   628,   385,  1502,   563,   378,  1504,    67,   511,
    1501,   109,   628,  1503,   378,   663,  1445,   186,   363,  1445,
    1485,  1486,  1436,  1442,  1445,  1175,   282,  1404,  1270,   663,
    1311,    73,   661,   907,   908,   907,   908,   402,   910,   216,
     263,  1447,    31,   583,  1394,   663,   583,   663,   583,  1311,
    1248,    13,  1390,  1388,   663,   160,  1498,   378,   378,  1445,
    1186,   572,  1444,  1444,  1447,   663,  1204,  1283,  1431,   290,
     373,   594,  1287,  1288,  1424,  1445,  1199,   145,  1195,  1243,
     635,  1272,   609,   249,   125,  1014,  1017,  1447,  1331,   661,
     433,   454,   496,  1469,  1466,  1464,   669,   669,   669,  1462,
    1204,  1471,   663,  1460,   249,  1364,  1442,  1204,   656,   950,
     737,   737,   737,  1436,   737,   735,  1436,   287,   350,   543,
    1358,  1358,  1366,  1445,   737,  1366,  1448,  1361,   737,  1366,
     252,   561,   181,   194,  1352,   663,  1364,   709,  1361,  1436,
    1363,  1361,  1361,   275,   635,  1367,  1367,  1140,   514,  1132,
      60,  1196,  1245,  1251,  1254,  1445,   100,   238,   258,   271,
     355,   477,   549,  1247,   501,   663,  1248,  1423,   405,   194,
    1285,   572,   404,   572,  1447,   572,   572,   572,    19,  1505,
     320,   321,   325,   326,  1082,  1083,     5,   404,  1077,  1078,
    1079,  1080,  1440,  1442,   122,   188,   290,   373,   594,  1292,
    1440,   122,   188,   219,   290,   373,   594,  1290,  1442,  1442,
     708,  1442,   709,   160,   126,  1136,    87,   946,    71,  1008,
     136,    77,    93,   265,   343,   369,   431,   533,   740,   742,
     263,   438,   598,   870,   871,   237,   866,   867,   868,   875,
     883,   885,   108,   221,   394,   404,   411,   515,   612,   720,
     721,  1442,    26,   323,   860,   861,   862,   875,   876,   877,
     883,   885,   853,   854,   860,    74,    89,   401,   967,   970,
     971,  1041,  1043,  1047,  1048,  1119,  1331,  1332,  1119,   401,
    1332,  1332,  1119,  1332,   401,   401,  1332,  1332,  1332,  1332,
     583,   136,  1332,   261,   401,   564,   193,   401,   418,  1043,
    1119,   261,  1332,   401,   401,   564,   136,  1332,  1332,  1332,
    1332,  1332,  1119,   401,    48,  1332,  1332,   401,    21,   160,
     583,  1043,  1123,   401,   401,  1332,  1332,  1332,  1332,   139,
     332,  1332,  1332,   401,  1332,   403,   619,   619,   952,   401,
     450,   895,  1097,   663,   663,   661,   669,   966,   972,  1435,
    1445,   378,   730,  1085,   127,   248,  1436,   125,  1173,  1445,
    1171,  1436,  1181,   661,  1182,   662,   663,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   663,   709,
     160,   160,   160,   160,   160,   160,   160,   663,  1312,   610,
    1157,   944,   945,    77,   364,   439,   599,   863,   864,   865,
     875,   879,   880,   881,   882,   883,   885,   642,   614,   848,
    1515,  1445,   737,   661,   473,  1579,     9,    31,   843,   711,
     592,   615,  1057,   378,   378,   378,  1243,   661,  1272,  1445,
    1272,   669,  1343,   663,   662,  1233,   662,  1204,   662,   662,
     662,  1204,   150,   634,  1240,    21,   662,   615,   662,   663,
     662,   662,   663,   615,   663,  1236,   662,   656,   662,   663,
     663,   662,   662,   662,   662,   197,   663,   662,   663,  1236,
     662,   663,   663,   663,   655,   663,   662,   662,   661,  1432,
    1445,  1233,   662,   662,   662,  1233,   662,   663,   662,   662,
     662,   662,   662,   663,   662,   249,   662,   663,   663,   662,
     663,   663,   662,   662,   662,   663,   197,   663,  1233,   662,
     662,   663,   663,   663,   662,   197,  1204,   197,  1204,   197,
    1204,   197,   662,   663,   662,   662,   662,   662,   663,    21,
     273,   663,  1033,   662,  1236,  1252,  1253,   493,   661,  1188,
     603,   666,  1447,  1204,  1445,   179,   372,   589,   605,   661,
      19,  1204,  1539,   165,  1274,  1207,  1204,  1204,  1207,   661,
    1214,  1207,  1202,   662,   663,   661,   669,  1445,  1308,  1318,
    1332,   663,    52,   470,  1121,  1311,  1447,   663,   709,  1383,
    1311,  1384,   783,   786,   787,   782,   374,   485,   784,   563,
     661,  1512,  1448,  1512,  1512,  1512,   200,   420,   566,  1496,
    1500,   160,   186,   201,   214,   266,   267,   294,   363,   417,
    1487,  1489,  1272,  1248,   669,  1176,  1177,  1178,  1179,  1436,
     236,   293,   433,   643,  1477,  1476,   661,   916,  1207,   122,
     188,   219,   290,   373,   594,  1291,  1294,  1295,   555,   911,
     901,    12,   903,  1204,  1442,  1448,  1448,  1166,  1436,   176,
     429,   613,  1148,  1149,  1150,   493,   501,   620,   621,   661,
     942,  1324,  1325,  1327,  1328,  1329,   709,   776,   775,   663,
    1448,   200,   420,  1496,  1008,  1011,  1300,    22,   131,  1284,
     663,   377,   663,  1204,   212,  1275,   503,   404,  1470,  1470,
      78,   595,   433,  1331,  1456,  1442,   197,  1365,   662,  1445,
    1448,  1366,   428,  1285,  1351,  1365,  1366,  1361,  1436,  1366,
    1366,  1442,  1204,  1440,  1200,   603,   662,  1533,  1534,  1242,
     258,   258,   391,  1255,   258,   271,   477,  1255,  1250,  1242,
    1339,  1340,  1433,  1244,  1270,   663,   336,   572,    21,    48,
    1506,  1290,  1290,  1290,  1290,  1083,   285,   606,   174,  1079,
     125,   245,   361,  1442,   160,   406,  1137,  1291,  1332,  1332,
     353,  1442,   533,   533,   533,   533,   533,   492,  1442,  1442,
    1332,   663,   868,  1442,  1442,  1442,  1442,  1290,  1442,  1442,
     662,   663,  1332,  1332,   663,   862,   855,   856,   875,   876,
     877,  1065,  1435,  1161,    64,   193,   418,   604,   969,  1042,
    1065,  1043,  1044,  1044,   125,  1445,  1435,  1161,  1292,  1290,
    1435,  1290,    13,  1098,  1106,  1107,  1445,  1161,  1442,  1442,
    1442,  1442,  1008,  1332,  1290,  1098,   263,  1106,   263,  1435,
    1435,   958,  1447,  1107,  1098,  1332,   186,   266,   369,   961,
    1290,   125,  1445,  1292,  1292,  1435,  1161,  1279,  1280,  1433,
     125,  1290,  1442,  1161,  1435,  1436,  1161,  1161,    80,    82,
     125,   148,   187,   440,   960,   125,  1290,   125,  1290,   125,
    1290,  1445,  1290,  1098,   955,   896,   403,     7,   144,  1111,
    1115,  1091,  1108,  1115,   963,   964,   965,   966,   967,  1445,
       9,   186,  1122,   441,   968,   969,  1035,   973,   669,    81,
     488,   451,  1086,  1555,   661,   418,  1262,  1263,  1264,  1445,
    1204,   661,  1290,  1440,  1290,  1290,  1440,  1440,  1290,  1290,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1290,  1290,
    1440,  1427,   705,   661,   693,   693,   661,   698,   698,   661,
     701,   701,   661,   696,   692,  1332,  1332,  1332,  1332,   663,
     865,  1447,   286,   177,   184,   857,   858,   859,   875,   876,
     877,   878,   881,   882,   883,   884,   885,  1081,   473,   723,
    1573,   123,   247,   435,   550,   962,   661,   130,   241,   609,
     844,   275,   661,   887,   951,   953,   954,    47,   216,   486,
    1062,  1062,  1436,  1436,  1436,  1272,  1265,  1445,  1281,   245,
    1204,   662,   575,  1204,  1204,   154,    35,    62,   112,   115,
     123,   260,   357,   509,   579,   607,  1234,  1009,  1204,  1204,
    1009,  1234,   662,   662,   245,   245,  1204,  1204,  1204,   388,
    1231,  1204,  1204,  1204,  1204,  1204,  1207,   662,   662,  1204,
    1204,  1204,  1204,  1204,  1204,  1236,   245,  1204,  1204,  1204,
     662,  1204,  1204,  1204,  1204,   197,  1204,   197,  1204,   197,
    1204,  1204,  1204,    35,    62,  1028,  1029,  1030,  1031,  1032,
    1291,  1290,   662,   662,  1192,  1193,  1194,  1541,  1542,  1543,
    1252,  1188,   662,  1536,   669,  1066,  1539,  1206,   662,   663,
     662,  1214,  1266,  1266,    19,  1204,  1539,  1274,  1225,  1235,
     656,  1445,  1309,   958,  1448,  1121,   685,  1379,   160,   663,
    1445,  1513,  1514,   583,   656,  1436,  1445,  1508,  1508,  1508,
    1488,  1285,   501,  1324,  1325,   663,  1180,  1182,  1444,   643,
     282,   904,   905,   906,  1445,   662,    48,   661,   918,   908,
     160,   661,   583,  1149,  1196,  1339,   662,   942,  1326,  1429,
    1430,  1433,  1445,  1530,   661,  1330,  1333,   160,   210,   197,
    1508,  1508,  1508,  1010,    73,  1407,  1431,  1288,  1288,    48,
     217,  1273,   342,   661,   662,  1471,  1292,  1356,   163,   631,
     373,  1357,  1272,  1361,  1192,  1536,  1270,   666,   258,  1250,
    1255,  1255,   258,   378,   378,   615,   663,  1272,  1331,   192,
     231,   614,  1257,  1258,  1259,  1260,  1261,  1290,  1442,  1442,
     736,  1291,  1442,   160,  1017,  1010,   111,   111,   127,   248,
     290,   373,   594,   886,  1293,  1294,  1439,   868,   721,   886,
     886,   862,   663,   856,  1100,   661,   263,   263,  1044,  1065,
    1050,  1065,  1065,   144,   501,  1098,  1112,  1093,   663,  1291,
    1010,  1442,   564,  1435,  1121,   637,   564,  1442,  1113,  1098,
     663,  1284,  1098,   583,  1103,  1098,   661,   899,   662,   663,
    1445,  1436,    34,    35,    40,    42,    44,    45,    62,   112,
     115,   123,   142,   159,   187,   189,   205,   206,   247,   260,
     279,   288,   289,   291,   328,   329,   330,   347,   348,   349,
     354,   357,   375,   376,   409,   410,   435,   497,   501,   513,
     573,   576,   579,   580,   581,   582,   622,   623,   650,   974,
     982,   985,   986,   987,   988,   989,   990,   991,  1445,   367,
     416,    25,   168,   724,   583,   137,   152,   726,   661,  1556,
    1098,   662,   663,   706,   707,  1290,   662,   694,   695,  1445,
     662,   699,   700,  1445,   662,   702,   703,  1440,  1441,   661,
     662,   697,  1442,  1291,   886,   886,   865,   384,   212,  1332,
    1332,   663,   859,  1077,   962,   378,   748,   749,   751,  1445,
     516,  1580,   378,  1436,   275,   888,   893,   894,   895,   963,
     893,   663,   953,   712,   714,   716,   662,   663,   276,  1289,
    1204,   662,  1204,   575,   661,   999,  1000,  1000,   661,   994,
     661,   992,   993,   999,  1000,   247,   994,   247,   662,   662,
     662,   662,   662,  1204,  1204,   662,   662,   663,   662,    48,
     495,  1230,   663,   663,   662,   663,   662,   249,  1220,  1221,
     662,   662,   662,   662,   663,   662,   662,  1204,   662,   194,
     662,   662,   663,   662,   663,   663,   662,  1204,   662,  1204,
     662,  1204,   662,   662,   662,   661,  1023,  1023,    22,   131,
     475,   654,  1025,  1026,  1027,   663,   663,  1272,  1200,  1543,
    1192,   662,  1533,  1537,  1445,   662,  1236,  1206,   662,   663,
     662,   662,  1116,  1117,  1118,   194,   637,  1380,    56,    66,
      76,    90,    91,    92,   106,   334,   351,   472,   489,   551,
     568,   788,   787,   662,   663,  1510,   669,   669,   583,   583,
     583,   661,  1339,   378,  1337,  1337,  1178,  1436,  1182,   231,
    1184,  1400,   662,   663,   902,   401,   919,   920,  1291,   904,
    1448,  1200,   661,  1327,  1328,   662,   662,   663,   669,   125,
    1204,  1334,  1335,  1336,   663,   775,   385,  1509,   197,   197,
     197,   153,   164,   386,   571,  1408,  1409,   278,  1410,  1276,
    1431,  1204,  1281,  1470,  1285,  1285,  1366,  1537,  1242,  1250,
     258,   258,  1242,  1250,  1204,  1204,   661,  1340,  1281,  1336,
    1043,  1043,  1258,   120,  1442,   856,   402,   661,  1101,  1204,
    1065,  1050,   661,  1049,  1049,   125,   125,   972,  1156,  1107,
    1015,   566,   974,  1092,  1280,  1435,  1104,  1106,  1094,  1384,
     965,   661,  1036,   999,   999,  1000,   994,   992,   414,   983,
     992,   992,    23,    35,    49,   601,  1008,  1019,  1020,  1021,
      62,   622,   986,   988,  1021,  1021,    62,   623,   623,   626,
     992,   984,  1000,   994,   994,  1021,   999,  1000,    27,    71,
      75,    77,   125,   372,   378,   418,   497,   547,   604,  1002,
    1003,  1004,  1016,  1034,  1210,   626,   999,  1021,    35,   999,
    1022,   999,   999,  1000,   661,   993,  1001,   669,   416,  1204,
    1204,   378,   730,   737,   378,    77,   731,  1445,  1557,    21,
     662,  1263,   662,   663,   662,   663,   662,   663,   669,   662,
     663,   695,   662,   663,   661,  1445,   886,   886,   859,   516,
     488,   662,   663,   750,  1442,   239,   249,   393,   752,   753,
     754,   755,  1436,  1436,   942,   662,   231,   456,   890,  1406,
     953,   661,   661,   661,  1445,  1288,  1266,  1204,   122,   290,
     373,   594,  1021,   373,   373,  1266,  1266,  1204,  1232,  1431,
    1423,   662,  1204,  1204,  1236,    44,   355,   662,   637,  1222,
    1204,  1266,  1204,  1204,  1204,  1204,   662,   662,   662,  1291,
     662,  1033,  1028,  1026,  1028,  1029,  1290,  1275,   662,  1236,
    1118,  1117,  1381,   433,  1514,   637,  1517,   656,   656,  1510,
    1510,  1510,  1335,  1337,   147,  1184,   269,  1406,   906,   216,
     263,   921,   662,   663,   662,  1192,  1532,  1327,  1328,  1429,
    1445,   662,   663,  1333,   197,  1509,  1509,  1509,    48,    48,
     153,    48,  1409,   537,   571,  1411,  1412,   638,   639,   663,
    1277,  1285,   662,   709,   378,   615,  1250,  1250,   378,   615,
    1265,  1289,   194,  1256,  1256,  1291,   919,   662,   661,   661,
    1063,  1064,  1445,   661,   661,   115,   576,   579,   654,   655,
    1425,  1426,  1122,  1436,  1114,  1161,  1105,  1148,   662,  1037,
    1445,   319,  1038,   509,   607,   651,   996,   997,   998,   661,
     996,   996,    35,    23,   601,  1008,    35,  1009,  1021,   626,
     996,   661,  1021,   996,  1014,   125,   148,   187,  1442,  1006,
    1007,  1425,   609,   125,   125,   139,   332,   263,    71,  1004,
     203,   975,   263,   372,  1021,  1022,  1021,  1022,   996,   373,
     996,  1445,  1266,   511,  1442,   143,  1087,   662,   663,  1558,
    1559,   707,   695,   700,  1445,   703,   663,   661,   720,  1442,
     724,  1574,   751,   982,  1005,   662,   663,   750,   194,   662,
     662,   951,    21,   943,  1063,  1063,  1063,   662,   662,   662,
     662,   662,   662,   663,   662,   662,   662,   663,   662,   663,
     662,   342,   265,   428,   662,   662,   662,   662,   662,   662,
    1024,   662,   663,  1273,   662,   175,   285,   210,  1515,  1515,
    1515,   662,   263,   246,   661,   909,   903,   922,  1445,   920,
    1336,  1509,  1423,  1423,    48,  1423,    48,    48,  1412,  1431,
     420,  1296,  1204,   661,  1204,   661,   662,   212,   258,   388,
     661,   661,   662,  1063,  1063,   662,   663,  1284,   661,  1063,
    1063,  1427,  1427,  1095,  1096,  1122,   246,   662,   663,   198,
     400,   510,   378,  1039,   998,  1067,  1423,  1009,  1022,  1067,
    1006,   621,  1014,    15,    21,   725,   732,   733,  1445,   493,
     661,  1560,  1564,   695,   695,   662,   729,   730,   473,  1015,
    1581,   754,  1445,   149,   889,   893,   661,   942,   662,   662,
     662,   373,  1431,  1204,   342,   173,   662,  1290,  1281,   385,
     637,  1516,  1516,  1516,   609,   566,   916,   912,   661,   620,
     923,  1423,  1423,  1423,    16,  1301,  1302,  1265,  1265,    48,
      48,  1262,  1264,   662,   662,    77,   262,  1051,  1054,  1057,
    1058,  1059,  1064,   373,   662,   662,   661,  1445,   130,   609,
     662,   663,   662,   661,   538,   727,    54,    68,   182,   230,
     257,   270,   381,   474,   734,   793,   795,   796,   797,   799,
     800,   801,   802,   803,   804,   806,   814,   815,   818,   829,
     832,   834,   835,  1439,  1446,  1450,  1565,   661,  1562,  1563,
     637,  1566,  1561,   662,   663,   726,  1575,   739,  1005,   484,
    1532,   890,   942,   891,  1051,   637,  1052,  1056,  1058,  1061,
    1053,  1055,  1058,  1060,   662,   662,   662,  1285,   210,   320,
     321,   325,   326,  1518,  1519,  1339,  1436,   662,   554,   917,
     914,   915,  1445,   249,   272,    77,   111,   235,   322,   340,
     364,   564,   939,   940,   941,  1360,   661,  1199,   662,   662,
     662,   662,  1035,  1051,  1442,  1332,  1059,  1284,   662,  1052,
    1053,   919,    52,   369,   470,   501,  1040,  1040,  1021,  1423,
    1021,   981,  1204,   155,   728,   816,   819,  1445,   197,   363,
     807,   794,  1446,  1446,  1445,   798,   676,   292,   455,   636,
     838,    32,   836,   670,  1189,  1562,   662,  1564,    53,    64,
     282,  1530,   695,   731,  1005,   134,   740,   741,  1210,  1582,
     191,   413,  1567,  1568,   662,  1530,   713,   398,   715,  1061,
     717,  1060,  1296,   385,  1290,  1290,  1290,  1290,  1519,  1248,
    1291,   662,   663,   925,   574,  1332,   136,   136,  1332,  1332,
    1332,  1332,   661,   934,   941,   158,   373,  1297,  1298,  1290,
     662,     6,   125,   372,   378,   378,   662,  1204,  1204,   634,
     821,   825,   197,  1445,   809,   810,  1204,   757,   792,   793,
     795,   797,   799,   801,   802,   803,   804,   806,   814,   829,
     832,   834,   757,   839,   837,   830,   833,   662,  1532,    64,
     385,    64,   662,   143,  1576,   134,   792,  1447,  1570,   892,
    1116,  1439,  1116,  1116,  1199,  1401,   913,   915,   661,   927,
     929,   924,  1442,  1332,  1332,  1293,  1293,  1291,  1445,   555,
     935,   936,  1332,   662,   663,   609,   130,   548,   629,   979,
     817,   826,   150,   825,   828,   246,   154,  1204,   154,   792,
     667,   608,  1204,   758,   838,   836,   385,   385,   732,   739,
     792,  1532,  1011,   917,   661,   928,   929,   930,   327,   926,
     929,  1442,  1442,   937,   662,   663,   958,  1298,  1040,  1040,
      77,   372,   604,   976,   977,   978,  1034,  1210,   634,   820,
     822,  1204,   757,   154,   805,   230,   811,   292,   667,   841,
     840,   124,   756,   759,   831,  1446,   831,  1577,  1402,   662,
     663,   327,   932,   933,  1207,   938,  1447,   936,  1442,   263,
     978,   263,   372,   823,   822,   828,   827,    54,   808,  1445,
     575,  1204,   143,    95,   172,   763,   789,  1445,   154,   792,
     667,   792,   482,  1413,   929,   663,   931,   939,  1204,   154,
     575,   663,   757,   842,   757,   215,   663,   760,    86,   105,
     667,   228,  1407,   933,   662,   824,    54,   757,  1445,   812,
     154,   154,   194,  1445,  1005,   194,   194,    48,  1410,   575,
     150,   151,   813,   455,   636,   761,   125,   790,   766,   767,
    1290,   762,  1423,   231,  1414,   757,   757,   809,   521,   523,
     764,   765,   766,   769,  1210,  1445,   791,  1185,   373,   661,
    1416,   663,   792,   196,  1204,   278,   482,  1415,   662,   668,
    1417,  1418,  1433,   501,  1419,   765,  1447,   662,   663,  1420,
    1421,  1433,  1418,   663,  1331,  1421,  1336
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  However,
   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
   discussed.  */

#define YYFAIL		goto yyerrlab
#if defined YYFAIL
  /* This is here to suppress warnings from the GCC cpp's
     -Wunused-macros.  Normally we don't worry about that warning, but
     some users do, and we want to make it easy for users to remove
     YYFAIL uses, which will produce warnings from Bison 2.5.  */
#endif

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))

/* Error token number */
#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (YYID (N))                                                     \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (YYID (0))
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

__attribute__((__unused__))
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
#else
static unsigned
yy_location_print_ (yyo, yylocp)
    FILE *yyo;
    YYLTYPE const * const yylocp;
#endif
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += fprintf (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += fprintf (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += fprintf (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += fprintf (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += fprintf (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */
#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, YYTHD)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, YYTHD); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    class THD *YYTHD;
#endif
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (YYTHD);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
        break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    class THD *YYTHD;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
#else
static void
yy_stack_print (yybottom, yytop)
    yytype_int16 *yybottom;
    yytype_int16 *yytop;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, YYTHD)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    class THD *YYTHD;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , YYTHD);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, YYTHD); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULL, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULL;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - Assume YYFAIL is not used.  It's too flawed to consider.  See
       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
       for details.  YYERROR is fine as it does not invoke this
       function.
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULL, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, YYTHD)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    class THD *YYTHD;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
        break;
    }
}




/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (class THD *YYTHD)
#else
int
yyparse (YYTHD)
    class THD *YYTHD;
#endif
#endif
{
/* The lookahead symbol.  */
int yychar;


#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
static YYSTYPE yyval_default;
# define YY_INITIAL_VALUE(Value) = Value
#endif
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

/* The semantic value of the lookahead symbol.  */
YYSTYPE yylval YY_INITIAL_VALUE(yyval_default);

/* Location data for the lookahead symbol.  */
YYLTYPE yylloc = yyloc_default;


    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       `yyss': related to states.
       `yyvs': related to semantic values.
       `yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);

	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss_alloc, yyss);
	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
	YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
/* Line 1792 of yacc.c  */
#line 1591 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!thd->bootstrap &&
                !thd->m_parser_state->has_comment())
            {
              my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 3:
/* Line 1792 of yacc.c  */
#line 1603 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
    break;

  case 5:
/* Line 1792 of yacc.c  */
#line 1628 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 20:
/* Line 1792 of yacc.c  */
#line 1656 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {  MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 22:
/* Line 1792 of yacc.c  */
#line 1658 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].select)); }
    break;

  case 31:
/* Line 1792 of yacc.c  */
#line 1667 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 46:
/* Line 1792 of yacc.c  */
#line 1682 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 52:
/* Line 1792 of yacc.c  */
#line 1688 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].select)); }
    break;

  case 53:
/* Line 1792 of yacc.c  */
#line 1689 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].set)); }
    break;

  case 56:
/* Line 1792 of yacc.c  */
#line 1692 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 62:
/* Line 1792 of yacc.c  */
#line 1698 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 65:
/* Line 1792 of yacc.c  */
#line 1705 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 68:
/* Line 1792 of yacc.c  */
#line 1720 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(2) - (4)].lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
    break;

  case 69:
/* Line 1792 of yacc.c  */
#line 1740 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(1) - (1)].lex_str);
            lex->prepared_stmt_code_is_varref= FALSE;
          }
    break;

  case 70:
/* Line 1792 of yacc.c  */
#line 1747 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(2) - (2)].lex_str);
            lex->prepared_stmt_code_is_varref= TRUE;
          }
    break;

  case 71:
/* Line 1792 of yacc.c  */
#line 1757 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 72:
/* Line 1792 of yacc.c  */
#line 1764 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 77:
/* Line 1792 of yacc.c  */
#line 1779 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[(2) - (2)].lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
    break;

  case 78:
/* Line 1792 of yacc.c  */
#line 1791 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
    break;

  case 79:
/* Line 1792 of yacc.c  */
#line 1799 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 80:
/* Line 1792 of yacc.c  */
#line 1810 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
    break;

  case 81:
/* Line 1792 of yacc.c  */
#line 1821 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 82:
/* Line 1792 of yacc.c  */
#line 1823 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 83:
/* Line 1792 of yacc.c  */
#line 1833 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 86:
/* Line 1792 of yacc.c  */
#line 1842 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_DB);
          }
    break;

  case 87:
/* Line 1792 of yacc.c  */
#line 1849 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_DB);
          }
    break;

  case 88:
/* Line 1792 of yacc.c  */
#line 1856 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_TABLE);
          }
    break;

  case 89:
/* Line 1792 of yacc.c  */
#line 1863 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
    break;

  case 90:
/* Line 1792 of yacc.c  */
#line 1870 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
    break;

  case 91:
/* Line 1792 of yacc.c  */
#line 1877 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
    break;

  case 92:
/* Line 1792 of yacc.c  */
#line 1885 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_REWRITE_DB);
          }
    break;

  case 93:
/* Line 1792 of yacc.c  */
#line 1894 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 94:
/* Line 1792 of yacc.c  */
#line 1900 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 95:
/* Line 1792 of yacc.c  */
#line 1907 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 96:
/* Line 1792 of yacc.c  */
#line 1914 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 97:
/* Line 1792 of yacc.c  */
#line 1922 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *db_item= new (thd->mem_root) Item_string((yyvsp[(1) - (1)].lex_str).str,
                                                           (yyvsp[(1) - (1)].lex_str).length,
                                                           thd->charset());
            (yyval.item)= db_item;
          }
    break;

  case 98:
/* Line 1792 of yacc.c  */
#line 1932 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 99:
/* Line 1792 of yacc.c  */
#line 1938 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 100:
/* Line 1792 of yacc.c  */
#line 1944 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (5)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (5)].item));
          }
    break;

  case 101:
/* Line 1792 of yacc.c  */
#line 1952 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(4) - (7)].item));
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(6) - (7)].item));
            (yyval.item_list)= (yyvsp[(1) - (7)].item_list);
          }
    break;

  case 102:
/* Line 1792 of yacc.c  */
#line 1960 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 103:
/* Line 1792 of yacc.c  */
#line 1966 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 104:
/* Line 1792 of yacc.c  */
#line 1973 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 105:
/* Line 1792 of yacc.c  */
#line 1980 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 106:
/* Line 1792 of yacc.c  */
#line 1988 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item_string *table_item= new (thd->mem_root) Item_string((yyvsp[(1) - (3)].lex_str).str,
                                                              (yyvsp[(1) - (3)].lex_str).length,
                                                              thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
            (yyval.item)= table_item;
          }
    break;

  case 107:
/* Line 1792 of yacc.c  */
#line 2001 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 108:
/* Line 1792 of yacc.c  */
#line 2007 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 109:
/* Line 1792 of yacc.c  */
#line 2014 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 110:
/* Line 1792 of yacc.c  */
#line 2021 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 111:
/* Line 1792 of yacc.c  */
#line 2029 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *string_item= new (thd->mem_root) Item_string((yyvsp[(1) - (1)].lex_str).str,
                                                               (yyvsp[(1) - (1)].lex_str).length,
                                                               thd->charset());
            (yyval.item)= string_item;
          }
    break;

  case 114:
/* Line 1792 of yacc.c  */
#line 2045 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.host = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 115:
/* Line 1792 of yacc.c  */
#line 2049 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.bind_addr = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 116:
/* Line 1792 of yacc.c  */
#line 2053 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.user = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 117:
/* Line 1792 of yacc.c  */
#line 2057 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.password = (yyvsp[(3) - (3)].lex_str).str;
            if (strlen((yyvsp[(3) - (3)].lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
    break;

  case 118:
/* Line 1792 of yacc.c  */
#line 2067 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.port = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 119:
/* Line 1792 of yacc.c  */
#line 2071 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.connect_retry = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 120:
/* Line 1792 of yacc.c  */
#line 2075 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.retry_count= (yyvsp[(3) - (3)].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 121:
/* Line 1792 of yacc.c  */
#line 2080 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[(3) - (3)]).cpp.start, (yylsp[(3) - (3)]).cpp.end - (yylsp[(3) - (3)]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 122:
/* Line 1792 of yacc.c  */
#line 2091 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 123:
/* Line 1792 of yacc.c  */
#line 2096 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_ca= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 124:
/* Line 1792 of yacc.c  */
#line 2100 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_capath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 125:
/* Line 1792 of yacc.c  */
#line 2104 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.tls_version= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 126:
/* Line 1792 of yacc.c  */
#line 2108 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cert= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 127:
/* Line 1792 of yacc.c  */
#line 2112 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cipher= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 128:
/* Line 1792 of yacc.c  */
#line 2116 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_key= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 129:
/* Line 1792 of yacc.c  */
#line 2120 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 130:
/* Line 1792 of yacc.c  */
#line 2125 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crl= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 131:
/* Line 1792 of yacc.c  */
#line 2129 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crlpath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 132:
/* Line 1792 of yacc.c  */
#line 2134 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            Lex->mi.heartbeat_period= (float) (yyvsp[(3) - (3)].item)->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 133:
/* Line 1792 of yacc.c  */
#line 2167 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
    break;

  case 134:
/* Line 1792 of yacc.c  */
#line 2172 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.auto_position= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 139:
/* Line 1792 of yacc.c  */
#line 2189 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[(1) - (1)].ulong_num));
          }
    break;

  case 140:
/* Line 1792 of yacc.c  */
#line 2195 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.log_file_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 141:
/* Line 1792 of yacc.c  */
#line 2199 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.pos = (yyvsp[(3) - (3)].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
    break;

  case 142:
/* Line 1792 of yacc.c  */
#line 2215 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 143:
/* Line 1792 of yacc.c  */
#line 2219 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_pos = (yyvsp[(3) - (3)].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
    break;

  case 144:
/* Line 1792 of yacc.c  */
#line 2229 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
         Lex->mi.channel= "";
         Lex->mi.for_channel= false;
       }
    break;

  case 145:
/* Line 1792 of yacc.c  */
#line 2234 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
         /*
           channel names are case insensitive. This means, even the results
           displayed to the user are converted to lower cases.
           system_charset_info is utf8_general_ci as required by channel name
           restrictions
         */
         my_casedn_str(system_charset_info, (yyvsp[(3) - (3)].lex_str).str);
         Lex->mi.channel= (yyvsp[(3) - (3)].lex_str).str;
         Lex->mi.for_channel= true;
       }
    break;

  case 146:
/* Line 1792 of yacc.c  */
#line 2251 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_TABLE;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(5) - (5)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_WRITE, MDL_SHARED))
              MYSQL_YYABORT;
            /*
              Instruct open_table() to acquire SHARED lock to check the
              existance of table. If the table does not exist then
              it will be upgraded EXCLUSIVE MDL lock. If table exist
              then open_table() will return with an error or warning.
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_FOR_CREATE;
            lex->alter_info.reset();
            lex->col_list.empty();
            lex->change=NullS;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.options=(yyvsp[(2) - (5)].num) | (yyvsp[(4) - (5)].num);
            lex->create_info.default_table_charset= NULL;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->create_last_non_select_table= lex->last_table();
          }
    break;

  case 147:
/* Line 1792 of yacc.c  */
#line 2277 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->set_current_select(lex->select_lex);
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.db_type=
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE ?
                ha_default_temp_handlerton(thd) : ha_default_handlerton(thd);
              push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                  ER_WARN_USING_OTHER_HANDLER,
                                  ER(ER_WARN_USING_OTHER_HANDLER),
                                  ha_resolve_storage_engine_name(lex->create_info.db_type),
                                  (yyvsp[(5) - (7)].table)->table.str);
            }
            create_table_set_open_action_and_adjust_tables(lex);
          }
    break;

  case 148:
/* Line 1792 of yacc.c  */
#line 2296 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 149:
/* Line 1792 of yacc.c  */
#line 2301 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 150:
/* Line 1792 of yacc.c  */
#line 2305 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 151:
/* Line 1792 of yacc.c  */
#line 2308 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 152:
/* Line 1792 of yacc.c  */
#line 2313 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 153:
/* Line 1792 of yacc.c  */
#line 2317 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 154:
/* Line 1792 of yacc.c  */
#line 2320 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 155:
/* Line 1792 of yacc.c  */
#line 2325 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 156:
/* Line 1792 of yacc.c  */
#line 2329 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 157:
/* Line 1792 of yacc.c  */
#line 2331 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 158:
/* Line 1792 of yacc.c  */
#line 2336 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[(4) - (6)].lex_str);
            lex->create_info.options=(yyvsp[(3) - (6)].num);
          }
    break;

  case 159:
/* Line 1792 of yacc.c  */
#line 2343 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
          }
    break;

  case 160:
/* Line 1792 of yacc.c  */
#line 2349 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 161:
/* Line 1792 of yacc.c  */
#line 2352 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->create_info.options=(yyvsp[(3) - (8)].num);
          }
    break;

  case 162:
/* Line 1792 of yacc.c  */
#line 2358 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
    break;

  case 163:
/* Line 1792 of yacc.c  */
#line 2362 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
    break;

  case 164:
/* Line 1792 of yacc.c  */
#line 2367 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            Lex->server_options.m_server_name= (yyvsp[(3) - (11)].lex_str);
            Lex->server_options.set_scheme((yyvsp[(7) - (11)].lex_str));
            Lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_create_server(&Lex->server_options);
          }
    break;

  case 167:
/* Line 1792 of yacc.c  */
#line 2383 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_username((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 168:
/* Line 1792 of yacc.c  */
#line 2387 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_host((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 169:
/* Line 1792 of yacc.c  */
#line 2391 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_db((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 170:
/* Line 1792 of yacc.c  */
#line 2395 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_owner((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 171:
/* Line 1792 of yacc.c  */
#line 2399 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_password((yyvsp[(2) - (2)].lex_str));
            Lex->contains_plaintext_password= true;
          }
    break;

  case 172:
/* Line 1792 of yacc.c  */
#line 2404 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_socket((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 173:
/* Line 1792 of yacc.c  */
#line 2408 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_port((yyvsp[(2) - (2)].ulong_num));
          }
    break;

  case 174:
/* Line 1792 of yacc.c  */
#line 2415 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).cpp.start;
            lex->create_info.options= (yyvsp[(2) - (3)].num);
            if (!(lex->event_parse_data= Event_parse_data::new_instance(thd)))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[(3) - (3)].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
    break;

  case 175:
/* Line 1792 of yacc.c  */
#line 2435 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
    break;

  case 176:
/* Line 1792 of yacc.c  */
#line 2446 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (3)].item), &(yyvsp[(2) - (3)].item));

            Lex->event_parse_data->item_expression= (yyvsp[(2) - (3)].item);
            Lex->event_parse_data->interval= (yyvsp[(3) - (3)].interval);
          }
    break;

  case 178:
/* Line 1792 of yacc.c  */
#line 2455 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[(2) - (2)].item);
          }
    break;

  case 179:
/* Line 1792 of yacc.c  */
#line 2463 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 180:
/* Line 1792 of yacc.c  */
#line 2465 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 181:
/* Line 1792 of yacc.c  */
#line 2471 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 182:
/* Line 1792 of yacc.c  */
#line 2477 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 183:
/* Line 1792 of yacc.c  */
#line 2486 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
    break;

  case 184:
/* Line 1792 of yacc.c  */
#line 2493 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_starts= (yyvsp[(2) - (2)].item);
          }
    break;

  case 186:
/* Line 1792 of yacc.c  */
#line 2503 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_ends= (yyvsp[(2) - (2)].item);
          }
    break;

  case 187:
/* Line 1792 of yacc.c  */
#line 2511 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 189:
/* Line 1792 of yacc.c  */
#line 2517 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
    break;

  case 190:
/* Line 1792 of yacc.c  */
#line 2523 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
    break;

  case 191:
/* Line 1792 of yacc.c  */
#line 2531 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 192:
/* Line 1792 of yacc.c  */
#line 2533 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[(2) - (2)].lex_str);
            (yyval.num)= 1;
          }
    break;

  case 193:
/* Line 1792 of yacc.c  */
#line 2540 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          SP_TYPE_EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[(0) - (0)]).cpp.end);
          }
    break;

  case 194:
/* Line 1792 of yacc.c  */
#line 2586 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= TRUE;
          }
    break;

  case 208:
/* Line 1792 of yacc.c  */
#line 2615 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex->db= NULL;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           lex->alter_password.update_account_locked_column= false;
           lex->alter_password.account_locked= false;
           memset(&(lex->mqh), 0, sizeof(lex->mqh));
         }
    break;

  case 209:
/* Line 1792 of yacc.c  */
#line 2632 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
           LEX *lex=Lex;
           lex->alter_password.update_password_expired_fields= false;
           lex->alter_password.update_password_expired_column= false;
           lex->alter_password.use_default_password_lifetime= true;
           lex->alter_password.expire_after_days= 0;
         }
    break;

  case 210:
/* Line 1792 of yacc.c  */
#line 2643 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(1) - (3)].lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[(1) - (3)].lex_str), FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(3) - (3)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new sp_name(to_lex_cstring((yyvsp[(1) - (3)].lex_str)), (yyvsp[(3) - (3)].lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
    break;

  case 211:
/* Line 1792 of yacc.c  */
#line 2657 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db;
            if (sp_check_name(&(yyvsp[(1) - (1)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new sp_name(to_lex_cstring(db), (yyvsp[(1) - (1)].lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
    break;

  case 212:
/* Line 1792 of yacc.c  */
#line 2675 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 213:
/* Line 1792 of yacc.c  */
#line 2676 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 214:
/* Line 1792 of yacc.c  */
#line 2680 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 215:
/* Line 1792 of yacc.c  */
#line 2681 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 216:
/* Line 1792 of yacc.c  */
#line 2687 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 217:
/* Line 1792 of yacc.c  */
#line 2689 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 218:
/* Line 1792 of yacc.c  */
#line 2691 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 219:
/* Line 1792 of yacc.c  */
#line 2693 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 220:
/* Line 1792 of yacc.c  */
#line 2695 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 221:
/* Line 1792 of yacc.c  */
#line 2697 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 222:
/* Line 1792 of yacc.c  */
#line 2699 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 223:
/* Line 1792 of yacc.c  */
#line 2704 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 224:
/* Line 1792 of yacc.c  */
#line 2705 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= TRUE; }
    break;

  case 225:
/* Line 1792 of yacc.c  */
#line 2706 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= FALSE; }
    break;

  case 226:
/* Line 1792 of yacc.c  */
#line 2711 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
    break;

  case 227:
/* Line 1792 of yacc.c  */
#line 2715 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
    break;

  case 228:
/* Line 1792 of yacc.c  */
#line 2722 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;

            lex->sql_command= SQLCOM_CALL;
            lex->spname= (yyvsp[(2) - (2)].spname);
            lex->call_value_list.empty();
            sp_add_used_routine(lex, YYTHD, (yyvsp[(2) - (2)].spname), SP_TYPE_PROCEDURE);
          }
    break;

  case 229:
/* Line 1792 of yacc.c  */
#line 2730 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 234:
/* Line 1792 of yacc.c  */
#line 2746 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

           Lex->call_value_list.push_back((yyvsp[(3) - (3)].item));
          }
    break;

  case 235:
/* Line 1792 of yacc.c  */
#line 2752 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            Lex->call_value_list.push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 240:
/* Line 1792 of yacc.c  */
#line 2772 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->length= 0;
            lex->dec= 0;
            lex->type= 0;

            lex->default_value= 0;
            lex->on_update_value= 0;

            lex->comment= null_lex_str;
            lex->charset= NULL;

            lex->interval_list.empty();
            lex->uint_geom_type= 0;
          }
    break;

  case 241:
/* Line 1792 of yacc.c  */
#line 2792 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(1) - (3)].lex_str),
                                                   (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                                   sp_variable::MODE_IN);

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 246:
/* Line 1792 of yacc.c  */
#line 2833 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (4)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }
            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(3) - (4)].lex_str),
                                                   (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                                   (sp_variable::enum_mode) (yyvsp[(1) - (4)].num));

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 247:
/* Line 1792 of yacc.c  */
#line 2861 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 248:
/* Line 1792 of yacc.c  */
#line 2862 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 249:
/* Line 1792 of yacc.c  */
#line 2863 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_OUT; }
    break;

  case 250:
/* Line 1792 of yacc.c  */
#line 2864 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_INOUT; }
    break;

  case 251:
/* Line 1792 of yacc.c  */
#line 2868 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 253:
/* Line 1792 of yacc.c  */
#line 2873 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 255:
/* Line 1792 of yacc.c  */
#line 2879 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 256:
/* Line 1792 of yacc.c  */
#line 2883 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[(2) - (3)].spblock).vars || (yyvsp[(2) - (3)].spblock).conds) && ((yyvsp[(1) - (3)].spblock).curs || (yyvsp[(1) - (3)].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(2) - (3)].spblock).curs && (yyvsp[(1) - (3)].spblock).hndlrs)
            { /* Cursor following handler */
              my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[(1) - (3)].spblock).vars + (yyvsp[(2) - (3)].spblock).vars;
            (yyval.spblock).conds= (yyvsp[(1) - (3)].spblock).conds + (yyvsp[(2) - (3)].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[(1) - (3)].spblock).hndlrs + (yyvsp[(2) - (3)].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[(1) - (3)].spblock).curs + (yyvsp[(2) - (3)].spblock).curs;
          }
    break;

  case 257:
/* Line 1792 of yacc.c  */
#line 2910 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            pctx->declare_var_boundary((yyvsp[(2) - (2)].num));
          }
    break;

  case 258:
/* Line 1792 of yacc.c  */
#line 2921 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint num_vars= pctx->context_var_count();
            enum enum_field_types var_type= (enum enum_field_types) (yyvsp[(4) - (5)].num);
            Item *dflt_value_item= (yyvsp[(5) - (5)].item);
            LEX_STRING dflt_value_query= EMPTY_STR;

            if (dflt_value_item)
            {
              // sp_opt_default only pushes start ptr for DEFAULT clause.
              const char *expr_start_ptr=
                sp->m_parser_data.pop_expr_start_ptr();
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[(5) - (5)]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= new (thd->mem_root) Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[(2) - (5)].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (fill_field_definition(thd, sp, var_type, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is=
                new (thd->mem_root)
                  sp_instr_set(sp->instructions(),
                               lex,
                               var_idx,
                               dflt_value_item,
                               dflt_value_query,
                               (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[(2) - (5)].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 259:
/* Line 1792 of yacc.c  */
#line 2994 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[(2) - (5)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[(2) - (5)].lex_str), (yyvsp[(5) - (5)].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
    break;

  case 260:
/* Line 1792 of yacc.c  */
#line 3011 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[(2) - (4)].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              new (thd->mem_root)
                sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[(2) - (4)].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_STR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
    break;

  case 261:
/* Line 1792 of yacc.c  */
#line 3053 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[(2) - (7)].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
    break;

  case 262:
/* Line 1792 of yacc.c  */
#line 3090 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[(4) - (4)]).raw.end);
          }
    break;

  case 263:
/* Line 1792 of yacc.c  */
#line 3099 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {             /*$7*/
            CONTEXTUALIZE((yyvsp[(6) - (6)].select));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[(2) - (6)].lex_str), &offp, TRUE))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[(2) - (6)].lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_STRING cursor_query= EMPTY_STR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(6) - (6)]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              new (thd->mem_root)
                sp_instr_cpush(sp->instructions(), pctx,
                               cursor_lex, cursor_query,
                               pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[(2) - (6)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
    break;

  case 264:
/* Line 1792 of yacc.c  */
#line 3164 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::EXIT; }
    break;

  case 265:
/* Line 1792 of yacc.c  */
#line 3165 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::CONTINUE; }
    break;

  case 266:
/* Line 1792 of yacc.c  */
#line 3171 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 267:
/* Line 1792 of yacc.c  */
#line 3173 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)+= 1; }
    break;

  case 268:
/* Line 1792 of yacc.c  */
#line 3178 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[(1) - (1)].spcondvalue)))
            {
              my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[(1) - (1)].spcondvalue));
            }
          }
    break;

  case 269:
/* Line 1792 of yacc.c  */
#line 3201 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { /* mysql errno */
            if ((yyvsp[(1) - (1)].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(1) - (1)].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 271:
/* Line 1792 of yacc.c  */
#line 3216 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[(3) - (3)].lex_str)) || is_sqlstate_completion((yyvsp[(3) - (3)].lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(3) - (3)].lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 272:
/* Line 1792 of yacc.c  */
#line 3237 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 273:
/* Line 1792 of yacc.c  */
#line 3238 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 274:
/* Line 1792 of yacc.c  */
#line 3243 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue);
          }
    break;

  case 275:
/* Line 1792 of yacc.c  */
#line 3247 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 276:
/* Line 1792 of yacc.c  */
#line 3260 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 277:
/* Line 1792 of yacc.c  */
#line 3266 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 278:
/* Line 1792 of yacc.c  */
#line 3272 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 279:
/* Line 1792 of yacc.c  */
#line 3281 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_signal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 280:
/* Line 1792 of yacc.c  */
#line 3294 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
    break;

  case 281:
/* Line 1792 of yacc.c  */
#line 3320 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 282:
/* Line 1792 of yacc.c  */
#line 3325 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= NULL; }
    break;

  case 283:
/* Line 1792 of yacc.c  */
#line 3327 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 284:
/* Line 1792 of yacc.c  */
#line 3332 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.signal_item_list)= new (YYTHD->mem_root) Set_signal_information(); }
    break;

  case 285:
/* Line 1792 of yacc.c  */
#line 3334 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.signal_item_list)= (yyvsp[(2) - (2)].signal_item_list); }
    break;

  case 286:
/* Line 1792 of yacc.c  */
#line 3339 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.signal_item_list)= new (YYTHD->mem_root) Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[(1) - (3)].da_condition_item_name), (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 287:
/* Line 1792 of yacc.c  */
#line 3346 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.signal_item_list)= (yyvsp[(1) - (5)].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[(3) - (5)].da_condition_item_name), (yyvsp[(5) - (5)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 288:
/* Line 1792 of yacc.c  */
#line 3358 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 289:
/* Line 1792 of yacc.c  */
#line 3360 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            if ((yyvsp[(1) - (1)].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[(1) - (1)].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[(1) - (1)].item);
          }
    break;

  case 290:
/* Line 1792 of yacc.c  */
#line 3380 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 291:
/* Line 1792 of yacc.c  */
#line 3386 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
    break;

  case 292:
/* Line 1792 of yacc.c  */
#line 3388 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
    break;

  case 293:
/* Line 1792 of yacc.c  */
#line 3390 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
    break;

  case 294:
/* Line 1792 of yacc.c  */
#line 3392 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
    break;

  case 295:
/* Line 1792 of yacc.c  */
#line 3394 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
    break;

  case 296:
/* Line 1792 of yacc.c  */
#line 3396 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
    break;

  case 297:
/* Line 1792 of yacc.c  */
#line 3398 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
    break;

  case 298:
/* Line 1792 of yacc.c  */
#line 3400 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
    break;

  case 299:
/* Line 1792 of yacc.c  */
#line 3402 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
    break;

  case 300:
/* Line 1792 of yacc.c  */
#line 3404 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
    break;

  case 301:
/* Line 1792 of yacc.c  */
#line 3406 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
    break;

  case 302:
/* Line 1792 of yacc.c  */
#line 3408 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
    break;

  case 303:
/* Line 1792 of yacc.c  */
#line 3413 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_resignal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 304:
/* Line 1792 of yacc.c  */
#line 3427 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Diagnostics_information *info= (yyvsp[(4) - (4)].diag_info);

            info->set_which_da((yyvsp[(2) - (4)].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 305:
/* Line 1792 of yacc.c  */
#line 3443 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 306:
/* Line 1792 of yacc.c  */
#line 3445 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 307:
/* Line 1792 of yacc.c  */
#line 3447 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
    break;

  case 308:
/* Line 1792 of yacc.c  */
#line 3452 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Statement_information((yyvsp[(1) - (1)].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 309:
/* Line 1792 of yacc.c  */
#line 3458 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Condition_information((yyvsp[(2) - (3)].item), (yyvsp[(3) - (3)].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 310:
/* Line 1792 of yacc.c  */
#line 3467 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_list)= new (YYTHD->mem_root) List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[(1) - (1)].stmt_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 311:
/* Line 1792 of yacc.c  */
#line 3473 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].stmt_info_list)->push_back((yyvsp[(3) - (3)].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[(1) - (3)].stmt_info_list);
          }
    break;

  case 312:
/* Line 1792 of yacc.c  */
#line 3482 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_item)= new (YYTHD->mem_root) Statement_information_item((yyvsp[(3) - (3)].stmt_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 313:
/* Line 1792 of yacc.c  */
#line 3490 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, (yyvsp[(1) - (1)].lex_str), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[(1) - (1)]).raw.start,
                (yylsp[(1) - (1)]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 314:
/* Line 1792 of yacc.c  */
#line 3518 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[(2) - (2)].lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
    break;

  case 315:
/* Line 1792 of yacc.c  */
#line 3526 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
    break;

  case 316:
/* Line 1792 of yacc.c  */
#line 3528 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
    break;

  case 317:
/* Line 1792 of yacc.c  */
#line 3537 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 318:
/* Line 1792 of yacc.c  */
#line 3542 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_list)= new (YYTHD->mem_root) List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[(1) - (1)].cond_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 319:
/* Line 1792 of yacc.c  */
#line 3548 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].cond_info_list)->push_back((yyvsp[(3) - (3)].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[(1) - (3)].cond_info_list);
          }
    break;

  case 320:
/* Line 1792 of yacc.c  */
#line 3557 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_item)= new (YYTHD->mem_root) Condition_information_item((yyvsp[(3) - (3)].cond_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 321:
/* Line 1792 of yacc.c  */
#line 3565 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
    break;

  case 322:
/* Line 1792 of yacc.c  */
#line 3567 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
    break;

  case 323:
/* Line 1792 of yacc.c  */
#line 3569 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
    break;

  case 324:
/* Line 1792 of yacc.c  */
#line 3571 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
    break;

  case 325:
/* Line 1792 of yacc.c  */
#line 3573 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
    break;

  case 326:
/* Line 1792 of yacc.c  */
#line 3575 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
    break;

  case 327:
/* Line 1792 of yacc.c  */
#line 3577 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
    break;

  case 328:
/* Line 1792 of yacc.c  */
#line 3579 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
    break;

  case 329:
/* Line 1792 of yacc.c  */
#line 3581 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
    break;

  case 330:
/* Line 1792 of yacc.c  */
#line 3583 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
    break;

  case 331:
/* Line 1792 of yacc.c  */
#line 3585 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
    break;

  case 332:
/* Line 1792 of yacc.c  */
#line 3587 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
    break;

  case 333:
/* Line 1792 of yacc.c  */
#line 3589 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
    break;

  case 334:
/* Line 1792 of yacc.c  */
#line 3594 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (1)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(1) - (1)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
    break;

  case 335:
/* Line 1792 of yacc.c  */
#line 3614 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(3) - (3)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[(1) - (3)].num) + 1;
          }
    break;

  case 336:
/* Line 1792 of yacc.c  */
#line 3637 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item) = NULL; }
    break;

  case 337:
/* Line 1792 of yacc.c  */
#line 3639 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->sphead->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end); }
    break;

  case 338:
/* Line 1792 of yacc.c  */
#line 3641 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            (yyval.item) = (yyvsp[(3) - (3)].item);
          }
    break;

  case 352:
/* Line 1792 of yacc.c  */
#line 3666 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
    break;

  case 353:
/* Line 1792 of yacc.c  */
#line 3668 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 354:
/* Line 1792 of yacc.c  */
#line 3676 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
    break;

  case 355:
/* Line 1792 of yacc.c  */
#line 3685 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_STRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(2) - (2)]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                new (thd->mem_root)
                  sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
    break;

  case 356:
/* Line 1792 of yacc.c  */
#line 3732 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);

            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 357:
/* Line 1792 of yacc.c  */
#line 3742 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != SP_TYPE_FUNCTION)
            {
              my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              new (thd->mem_root)
                sp_instr_freturn(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query,
                                 sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 358:
/* Line 1792 of yacc.c  */
#line 3790 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_STR,
                             sp->instructions());
          }
    break;

  case 359:
/* Line 1792 of yacc.c  */
#line 3801 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 360:
/* Line 1792 of yacc.c  */
#line 3813 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 361:
/* Line 1792 of yacc.c  */
#line 3872 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i=
              new (thd->mem_root) sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 362:
/* Line 1792 of yacc.c  */
#line 3922 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i=
              new (thd->mem_root)
                sp_instr_copen(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 363:
/* Line 1792 of yacc.c  */
#line 3946 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(3) - (4)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i=
              new (thd->mem_root)
                sp_instr_cfetch(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 364:
/* Line 1792 of yacc.c  */
#line 3967 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 365:
/* Line 1792 of yacc.c  */
#line 3972 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              new (thd->mem_root)
                sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 369:
/* Line 1792 of yacc.c  */
#line 4002 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 370:
/* Line 1792 of yacc.c  */
#line 4020 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(3) - (3)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 371:
/* Line 1792 of yacc.c  */
#line 4040 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(0) - (0)]).raw.end);
          }
    break;

  case 372:
/* Line 1792 of yacc.c  */
#line 4049 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(2) - (2)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex,
                                     (yyvsp[(2) - (2)].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 373:
/* Line 1792 of yacc.c  */
#line 4088 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i =
              new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_STR, 0));
          }
    break;

  case 374:
/* Line 1792 of yacc.c  */
#line 4107 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 380:
/* Line 1792 of yacc.c  */
#line 4130 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 381:
/* Line 1792 of yacc.c  */
#line 4141 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_STRING case_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              new (thd->mem_root)
                sp_instr_set_case_expr(sp->instructions(), lex,
                                       case_expr_id, (yyvsp[(3) - (3)].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 382:
/* Line 1792 of yacc.c  */
#line 4187 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
    break;

  case 383:
/* Line 1792 of yacc.c  */
#line 4194 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_case(YYTHD);
          }
    break;

  case 384:
/* Line 1792 of yacc.c  */
#line 4201 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_end_case(Lex, false);
          }
    break;

  case 389:
/* Line 1792 of yacc.c  */
#line 4218 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 390:
/* Line 1792 of yacc.c  */
#line 4227 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              new (thd->mem_root)
                sp_instr_jump_case_when(sp->instructions(), lex,
                                        pctx->get_current_case_expr_id(),
                                        (yyvsp[(3) - (3)].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 391:
/* Line 1792 of yacc.c  */
#line 4270 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 392:
/* Line 1792 of yacc.c  */
#line 4278 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 393:
/* Line 1792 of yacc.c  */
#line 4287 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item), when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 394:
/* Line 1792 of yacc.c  */
#line 4325 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 395:
/* Line 1792 of yacc.c  */
#line 4333 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              new (thd->mem_root)
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 397:
/* Line 1792 of yacc.c  */
#line 4351 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
    break;

  case 398:
/* Line 1792 of yacc.c  */
#line 4369 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
    break;

  case 399:
/* Line 1792 of yacc.c  */
#line 4388 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 400:
/* Line 1792 of yacc.c  */
#line 4389 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 401:
/* Line 1792 of yacc.c  */
#line 4394 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
    break;

  case 402:
/* Line 1792 of yacc.c  */
#line 4410 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 403:
/* Line 1792 of yacc.c  */
#line 4427 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_STR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
    break;

  case 404:
/* Line 1792 of yacc.c  */
#line 4438 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
    break;

  case 405:
/* Line 1792 of yacc.c  */
#line 4446 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
    break;

  case 406:
/* Line 1792 of yacc.c  */
#line 4461 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[(3) - (5)].spblock).hndlrs)
            {
              sp_instr *i=
                new (thd->mem_root) sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[(3) - (5)].spblock).curs)
            {
              sp_instr *i=
                new (thd->mem_root)
                  sp_instr_cpop(sp->instructions(), pctx, (yyvsp[(3) - (5)].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
    break;

  case 407:
/* Line 1792 of yacc.c  */
#line 4497 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
                new (thd->mem_root)
                  sp_instr_jump(sp->instructions(), pctx,
                                pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 408:
/* Line 1792 of yacc.c  */
#line 4512 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 409:
/* Line 1792 of yacc.c  */
#line 4521 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 410:
/* Line 1792 of yacc.c  */
#line 4562 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
              new (thd->mem_root)
                sp_instr_jump(sp->instructions(), pctx, pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 411:
/* Line 1792 of yacc.c  */
#line 4580 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(3) - (3)]).raw.end);
          }
    break;

  case 412:
/* Line 1792 of yacc.c  */
#line 4589 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                             /*$6*/
            ITEMIZE((yyvsp[(5) - (5)].item), &(yyvsp[(5) - (5)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(5) - (5)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(ip, lex, (yyvsp[(5) - (5)].item), expr_query,
                                     pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
    break;

  case 414:
/* Line 1792 of yacc.c  */
#line 4633 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_BEFORE; }
    break;

  case 415:
/* Line 1792 of yacc.c  */
#line 4635 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_AFTER; }
    break;

  case 416:
/* Line 1792 of yacc.c  */
#line 4640 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_INSERT; }
    break;

  case 417:
/* Line 1792 of yacc.c  */
#line 4642 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_UPDATE; }
    break;

  case 418:
/* Line 1792 of yacc.c  */
#line 4644 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_DELETE; }
    break;

  case 422:
/* Line 1792 of yacc.c  */
#line 4678 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 423:
/* Line 1792 of yacc.c  */
#line 4680 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(4) - (4)].lex_str).str;
          }
    break;

  case 424:
/* Line 1792 of yacc.c  */
#line 4690 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE;
          }
    break;

  case 425:
/* Line 1792 of yacc.c  */
#line 4696 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE;
          }
    break;

  case 430:
/* Line 1792 of yacc.c  */
#line 4719 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 482:
/* Line 1792 of yacc.c  */
#line 4818 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 483:
/* Line 1792 of yacc.c  */
#line 4826 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 484:
/* Line 1792 of yacc.c  */
#line 4834 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 485:
/* Line 1792 of yacc.c  */
#line 4842 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 486:
/* Line 1792 of yacc.c  */
#line 4854 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 487:
/* Line 1792 of yacc.c  */
#line 4866 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
    break;

  case 488:
/* Line 1792 of yacc.c  */
#line 4871 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
    break;

  case 489:
/* Line 1792 of yacc.c  */
#line 4876 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
    break;

  case 490:
/* Line 1792 of yacc.c  */
#line 4884 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 491:
/* Line 1792 of yacc.c  */
#line 4892 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 492:
/* Line 1792 of yacc.c  */
#line 4900 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 493:
/* Line 1792 of yacc.c  */
#line 4908 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 494:
/* Line 1792 of yacc.c  */
#line 4916 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 495:
/* Line 1792 of yacc.c  */
#line 4924 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 496:
/* Line 1792 of yacc.c  */
#line 4932 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 497:
/* Line 1792 of yacc.c  */
#line 4945 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->ts_comment= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 498:
/* Line 1792 of yacc.c  */
#line 4958 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "STORAGE ENGINE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->storage_engine= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 499:
/* Line 1792 of yacc.c  */
#line 4972 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->file_block_size != 0)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "FILE_BLOCK_SIZE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->file_block_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 500:
/* Line 1792 of yacc.c  */
#line 4986 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
    break;

  case 501:
/* Line 1792 of yacc.c  */
#line 4991 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
    break;

  case 502:
/* Line 1792 of yacc.c  */
#line 5003 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= (yyvsp[(1) - (1)].ulonglong_number);}
    break;

  case 503:
/* Line 1792 of yacc.c  */
#line 5005 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[(1) - (1)].lex_str).str;
            size_t str_len= (yyvsp[(1) - (1)].lex_str).length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                case 'm':
                case 'M':
                  text_shift_number+=10;
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
    break;

  case 504:
/* Line 1792 of yacc.c  */
#line 5055 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 505:
/* Line 1792 of yacc.c  */
#line 5058 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 506:
/* Line 1792 of yacc.c  */
#line 5060 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex->add_table_to_list(thd, (yyvsp[(2) - (2)].table), NULL, 0,
                                                          TL_READ,
                                                          MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 507:
/* Line 1792 of yacc.c  */
#line 5075 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (4)].table), NULL, 0,
                                                          TL_READ,
                                                          MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 508:
/* Line 1792 of yacc.c  */
#line 5094 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 509:
/* Line 1792 of yacc.c  */
#line 5097 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
             CONTEXTUALIZE((yyvsp[(2) - (3)].create_select));
             Select->set_braces(1);
           }
    break;

  case 510:
/* Line 1792 of yacc.c  */
#line 5102 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
             if ((yyvsp[(5) - (5)].node) != NULL)
               CONTEXTUALIZE((yyvsp[(5) - (5)].node));
           }
    break;

  case 511:
/* Line 1792 of yacc.c  */
#line 5109 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 512:
/* Line 1792 of yacc.c  */
#line 5111 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(3) - (3)].create_select));
            Select->set_braces(0);
          }
    break;

  case 513:
/* Line 1792 of yacc.c  */
#line 5116 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(5) - (5)].union_list) != NULL)
              CONTEXTUALIZE((yyvsp[(5) - (5)].union_list));
          }
    break;

  case 514:
/* Line 1792 of yacc.c  */
#line 5121 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(4) - (5)].create_select));
            Select->set_braces(1);
          }
    break;

  case 515:
/* Line 1792 of yacc.c  */
#line 5126 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
             if ((yyvsp[(7) - (7)].node) != NULL)
               CONTEXTUALIZE((yyvsp[(7) - (7)].node));
          }
    break;

  case 516:
/* Line 1792 of yacc.c  */
#line 5134 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
    break;

  case 517:
/* Line 1792 of yacc.c  */
#line 5170 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 519:
/* Line 1792 of yacc.c  */
#line 5176 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.flags|= Alter_info::ALTER_PARTITION;
            }
          }
    break;

  case 521:
/* Line 1792 of yacc.c  */
#line 5194 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!lex->part_info)
            {
              my_syntax_error(ER(ER_PARTITION_ENTRY_ERROR));
              MYSQL_YYABORT;
            }
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
    break;

  case 522:
/* Line 1792 of yacc.c  */
#line 5206 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 524:
/* Line 1792 of yacc.c  */
#line 5215 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
    break;

  case 525:
/* Line 1792 of yacc.c  */
#line 5222 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= HASH_PARTITION; }
    break;

  case 526:
/* Line 1792 of yacc.c  */
#line 5223 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 527:
/* Line 1792 of yacc.c  */
#line 5225 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 528:
/* Line 1792 of yacc.c  */
#line 5227 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 529:
/* Line 1792 of yacc.c  */
#line 5229 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 530:
/* Line 1792 of yacc.c  */
#line 5231 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 531:
/* Line 1792 of yacc.c  */
#line 5235 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 532:
/* Line 1792 of yacc.c  */
#line 5237 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->part_info->linear_hash_ind= TRUE;}
    break;

  case 533:
/* Line 1792 of yacc.c  */
#line 5242 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
    break;

  case 534:
/* Line 1792 of yacc.c  */
#line 5244 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            switch ((yyvsp[(3) - (3)].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 535:
/* Line 1792 of yacc.c  */
#line 5260 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 536:
/* Line 1792 of yacc.c  */
#line 5261 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 537:
/* Line 1792 of yacc.c  */
#line 5265 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 538:
/* Line 1792 of yacc.c  */
#line 5266 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 539:
/* Line 1792 of yacc.c  */
#line 5271 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (part_info->part_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->num_columns > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of partition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 540:
/* Line 1792 of yacc.c  */
#line 5290 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
    break;

  case 541:
/* Line 1792 of yacc.c  */
#line 5300 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            /*
              TODO: replace @1.cpp.end with @2.cpp.start: we don't need whitespaces at
              the beginning of the partition expression string:
            */
            if (part_info->set_part_expr(const_cast<char *>((yylsp[(1) - (3)]).cpp.end), (yyvsp[(2) - (3)].item),
                                         const_cast<char *>((yylsp[(2) - (3)]).cpp.end), FALSE))
            { MYSQL_YYABORT; }
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
    break;

  case 542:
/* Line 1792 of yacc.c  */
#line 5316 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: replace @1.cpp.end with @2.cpp.start: we don't need whitespaces at
              the beginning of the partition expression string:
            */
            if (Lex->part_info->set_part_expr(const_cast<char *>((yylsp[(1) - (3)]).cpp.end), (yyvsp[(2) - (3)].item),
                                              const_cast<char *>((yylsp[(2) - (3)]).cpp.end), TRUE))
            { MYSQL_YYABORT; }
          }
    break;

  case 543:
/* Line 1792 of yacc.c  */
#line 5329 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 544:
/* Line 1792 of yacc.c  */
#line 5331 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 545:
/* Line 1792 of yacc.c  */
#line 5346 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 546:
/* Line 1792 of yacc.c  */
#line 5348 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->part_info->subpart_type= HASH_PARTITION; }
    break;

  case 547:
/* Line 1792 of yacc.c  */
#line 5349 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 548:
/* Line 1792 of yacc.c  */
#line 5352 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
    break;

  case 549:
/* Line 1792 of yacc.c  */
#line 5357 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 550:
/* Line 1792 of yacc.c  */
#line 5361 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 551:
/* Line 1792 of yacc.c  */
#line 5362 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 552:
/* Line 1792 of yacc.c  */
#line 5367 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->subpart_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->subpart_field_list.elements > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of subpartition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 553:
/* Line 1792 of yacc.c  */
#line 5385 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            LEX *lex= Lex;
            bool not_corr_func;
            not_corr_func= !lex->safe_to_cache_query;
            lex->safe_to_cache_query= 1;
            if (not_corr_func)
            {
              my_syntax_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[(1) - (1)].item);
          }
    break;

  case 554:
/* Line 1792 of yacc.c  */
#line 5402 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 555:
/* Line 1792 of yacc.c  */
#line 5404 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            LEX *lex= Lex;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
    break;

  case 556:
/* Line 1792 of yacc.c  */
#line 5419 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == RANGE_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "RANGE");
              MYSQL_YYABORT;
            }
            else if (part_info->part_type == LIST_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "LIST");
              MYSQL_YYABORT;
            }
          }
    break;

  case 557:
/* Line 1792 of yacc.c  */
#line 5435 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (part_info->num_parts !=
                  count_curr_parts)
              {
                my_syntax_error(ER(ER_PARTITION_WRONG_NO_PART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 558:
/* Line 1792 of yacc.c  */
#line 5456 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 559:
/* Line 1792 of yacc.c  */
#line 5457 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 560:
/* Line 1792 of yacc.c  */
#line 5462 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new partition_element();

            if (!p_elem || part_info->partitions.push_back(p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            p_elem->part_state= PART_NORMAL;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 561:
/* Line 1792 of yacc.c  */
#line 5481 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 562:
/* Line 1792 of yacc.c  */
#line 5486 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            p_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str;
          }
    break;

  case 563:
/* Line 1792 of yacc.c  */
#line 5495 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type == RANGE_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
              if (part_info->part_type == LIST_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
    break;

  case 564:
/* Line 1792 of yacc.c  */
#line 5517 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != RANGE_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
    break;

  case 565:
/* Line 1792 of yacc.c  */
#line 5532 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 566:
/* Line 1792 of yacc.c  */
#line 5534 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != LIST_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                               "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
    break;

  case 567:
/* Line 1792 of yacc.c  */
#line 5549 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 568:
/* Line 1792 of yacc.c  */
#line 5554 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;

            if (part_info->num_columns &&
                part_info->num_columns != 1U)
            {
              part_info->print_debug("Kilroy II", NULL);
              my_syntax_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 569:
/* Line 1792 of yacc.c  */
#line 5575 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 570:
/* Line 1792 of yacc.c  */
#line 5580 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (!lex->is_partition_management() ||
                  part_info->num_columns == 0 ||
                  part_info->num_columns > MAX_REF_PARTS)
              {
                part_info->print_debug("Kilroy III", NULL);
                my_syntax_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST [COLUMNS] partitions.
              */
              if (part_info->reorganize_into_single_field_col_val())
              {
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 571:
/* Line 1792 of yacc.c  */
#line 5609 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_columns < 2U)
            {
              my_syntax_error(ER(ER_ROW_SINGLE_PARTITION_FIELD_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 572:
/* Line 1792 of yacc.c  */
#line 5620 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 573:
/* Line 1792 of yacc.c  */
#line 5621 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 574:
/* Line 1792 of yacc.c  */
#line 5626 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (!(part_info->part_type == LIST_PARTITION &&
                  part_info->num_columns == 1U) &&
                 part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 575:
/* Line 1792 of yacc.c  */
#line 5637 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 576:
/* Line 1792 of yacc.c  */
#line 5639 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (part_info->num_columns != part_info->curr_list_object)
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              my_syntax_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
    break;

  case 577:
/* Line 1792 of yacc.c  */
#line 5662 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 578:
/* Line 1792 of yacc.c  */
#line 5663 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 579:
/* Line 1792 of yacc.c  */
#line 5668 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == LIST_PARTITION)
            {
              my_syntax_error(ER(ER_MAXVALUE_IN_VALUES_IN));
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 580:
/* Line 1792 of yacc.c  */
#line 5681 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[(1) - (1)].item);

            if (!lex->safe_to_cache_query)
            {
              my_syntax_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            if (part_info->add_column_list_value(YYTHD, part_expr))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 581:
/* Line 1792 of yacc.c  */
#line 5703 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0 &&
                !part_info->use_default_subpartitions)
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions.
              */
              my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 582:
/* Line 1792 of yacc.c  */
#line 5717 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (part_info->num_subparts !=
                  part_info->count_curr_subparts)
              {
                my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (part_info->partitions.elements > 1)
              {
                my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 583:
/* Line 1792 of yacc.c  */
#line 5742 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 584:
/* Line 1792 of yacc.c  */
#line 5743 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 585:
/* Line 1792 of yacc.c  */
#line 5748 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new partition_element(curr_part);
            if (part_info->use_default_subpartitions &&
                part_info->partitions.elements >= 2)
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
            if (!sub_p_elem ||
             curr_part->subpartitions.push_back(sub_p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
    break;

  case 586:
/* Line 1792 of yacc.c  */
#line 5780 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 587:
/* Line 1792 of yacc.c  */
#line 5785 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str; }
    break;

  case 588:
/* Line 1792 of yacc.c  */
#line 5789 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 589:
/* Line 1792 of yacc.c  */
#line 5790 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 590:
/* Line 1792 of yacc.c  */
#line 5794 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 591:
/* Line 1792 of yacc.c  */
#line 5795 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 592:
/* Line 1792 of yacc.c  */
#line 5800 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 593:
/* Line 1792 of yacc.c  */
#line 5802 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[(4) - (4)].db_type);
            part_info->default_engine_type= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 594:
/* Line 1792 of yacc.c  */
#line 5808 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 595:
/* Line 1792 of yacc.c  */
#line 5810 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 596:
/* Line 1792 of yacc.c  */
#line 5812 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 597:
/* Line 1792 of yacc.c  */
#line 5814 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 598:
/* Line 1792 of yacc.c  */
#line 5816 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 599:
/* Line 1792 of yacc.c  */
#line 5818 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 600:
/* Line 1792 of yacc.c  */
#line 5827 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_select)= NEW_PTN PT_create_select((yyvsp[(1) - (4)].optimizer_hints), (yyvsp[(2) - (4)].select_options), (yyvsp[(3) - (4)].item_list2), (yyvsp[(4) - (4)].table_expression));
          }
    break;

  case 601:
/* Line 1792 of yacc.c  */
#line 5833 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 602:
/* Line 1792 of yacc.c  */
#line 5834 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 603:
/* Line 1792 of yacc.c  */
#line 5838 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 604:
/* Line 1792 of yacc.c  */
#line 5839 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 605:
/* Line 1792 of yacc.c  */
#line 5843 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 606:
/* Line 1792 of yacc.c  */
#line 5844 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 607:
/* Line 1792 of yacc.c  */
#line 5848 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 608:
/* Line 1792 of yacc.c  */
#line 5849 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 609:
/* Line 1792 of yacc.c  */
#line 5853 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 610:
/* Line 1792 of yacc.c  */
#line 5854 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (1)].num);}
    break;

  case 611:
/* Line 1792 of yacc.c  */
#line 5858 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (1)].num); }
    break;

  case 612:
/* Line 1792 of yacc.c  */
#line 5859 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 613:
/* Line 1792 of yacc.c  */
#line 5863 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_TMP_TABLE; }
    break;

  case 614:
/* Line 1792 of yacc.c  */
#line 5867 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 615:
/* Line 1792 of yacc.c  */
#line 5868 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_IF_NOT_EXISTS; }
    break;

  case 623:
/* Line 1792 of yacc.c  */
#line 5889 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.db_type= (yyvsp[(3) - (3)].db_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
    break;

  case 624:
/* Line 1792 of yacc.c  */
#line 5894 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.max_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
    break;

  case 625:
/* Line 1792 of yacc.c  */
#line 5899 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.min_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
    break;

  case 626:
/* Line 1792 of yacc.c  */
#line 5904 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.avg_row_length=(yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
    break;

  case 627:
/* Line 1792 of yacc.c  */
#line 5909 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.password=(yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
    break;

  case 628:
/* Line 1792 of yacc.c  */
#line 5914 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.comment=(yyvsp[(3) - (3)].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
    break;

  case 629:
/* Line 1792 of yacc.c  */
#line 5919 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_COMPRESS;
            Lex->create_info.compress= (yyvsp[(3) - (3)].lex_str);
	  }
    break;

  case 630:
/* Line 1792 of yacc.c  */
#line 5924 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_ENCRYPT;
            Lex->create_info.encrypt_type= (yyvsp[(3) - (3)].lex_str);
	  }
    break;

  case 631:
/* Line 1792 of yacc.c  */
#line 5929 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.auto_increment_value=(yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
    break;

  case 632:
/* Line 1792 of yacc.c  */
#line 5934 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 633:
/* Line 1792 of yacc.c  */
#line 5949 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 634:
/* Line 1792 of yacc.c  */
#line 5955 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
    break;

  case 635:
/* Line 1792 of yacc.c  */
#line 5970 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
    break;

  case 636:
/* Line 1792 of yacc.c  */
#line 5975 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
    break;

  case 637:
/* Line 1792 of yacc.c  */
#line 5990 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
    break;

  case 638:
/* Line 1792 of yacc.c  */
#line 5996 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[(3) - (3)].ulong_num) == 0 || (yyvsp[(3) - (3)].ulong_num) > 0xffff)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
    break;

  case 639:
/* Line 1792 of yacc.c  */
#line 6014 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
    break;

  case 640:
/* Line 1792 of yacc.c  */
#line 6019 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 641:
/* Line 1792 of yacc.c  */
#line 6024 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
             Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 642:
/* Line 1792 of yacc.c  */
#line 6029 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
    break;

  case 643:
/* Line 1792 of yacc.c  */
#line 6034 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.row_type= (yyvsp[(3) - (3)].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
    break;

  case 644:
/* Line 1792 of yacc.c  */
#line 6039 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->select_lex->table_list.save_and_clear(&Lex->save_list);
          }
    break;

  case 645:
/* Line 1792 of yacc.c  */
#line 6043 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex->table_list;
            lex->select_lex->table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list.first);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
    break;

  case 648:
/* Line 1792 of yacc.c  */
#line 6067 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.merge_insert_method= (yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
    break;

  case 649:
/* Line 1792 of yacc.c  */
#line 6072 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.data_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
    break;

  case 650:
/* Line 1792 of yacc.c  */
#line 6077 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.index_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
    break;

  case 651:
/* Line 1792 of yacc.c  */
#line 6082 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.tablespace= (yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_TABLESPACE;
          }
    break;

  case 652:
/* Line 1792 of yacc.c  */
#line 6087 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_DISK;}
    break;

  case 653:
/* Line 1792 of yacc.c  */
#line 6089 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
    break;

  case 654:
/* Line 1792 of yacc.c  */
#line 6091 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.connect_string.str= (yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[(3) - (3)].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
    break;

  case 655:
/* Line 1792 of yacc.c  */
#line 6097 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 656:
/* Line 1792 of yacc.c  */
#line 6105 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !my_charset_same(cinfo->default_table_charset,(yyvsp[(4) - (4)].charset)))
            {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                       "CHARACTER SET ", cinfo->default_table_charset->csname,
                       "CHARACTER SET ", (yyvsp[(4) - (4)].charset)->csname);
              MYSQL_YYABORT;
            }
            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 657:
/* Line 1792 of yacc.c  */
#line 6123 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !((yyvsp[(4) - (4)].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                   (yyvsp[(4) - (4)].charset))))
            {
              MYSQL_YYABORT;
            }

            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 658:
/* Line 1792 of yacc.c  */
#line 6140 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                thd->lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);

            if (plugin)
              (yyval.db_type)= plugin_data<handlerton*>(plugin);
            else
            {
              if (thd->variables.sql_mode & MODE_NO_ENGINE_SUBSTITUTION)
              {
                my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyval.db_type)= 0;
              push_warning_printf(thd, Sql_condition::SL_WARNING,
                                  ER_UNKNOWN_STORAGE_ENGINE,
                                  ER(ER_UNKNOWN_STORAGE_ENGINE),
                                  (yyvsp[(1) - (1)].lex_str).str);
            }
          }
    break;

  case 659:
/* Line 1792 of yacc.c  */
#line 6166 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);
            if (plugin)
              (yyval.db_type)= plugin_data<handlerton*>(plugin);
            else
            {
              my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 660:
/* Line 1792 of yacc.c  */
#line 6183 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 661:
/* Line 1792 of yacc.c  */
#line 6184 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 662:
/* Line 1792 of yacc.c  */
#line 6185 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 663:
/* Line 1792 of yacc.c  */
#line 6186 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 664:
/* Line 1792 of yacc.c  */
#line 6187 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 665:
/* Line 1792 of yacc.c  */
#line 6188 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 666:
/* Line 1792 of yacc.c  */
#line 6192 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 667:
/* Line 1792 of yacc.c  */
#line 6193 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 668:
/* Line 1792 of yacc.c  */
#line 6194 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 669:
/* Line 1792 of yacc.c  */
#line 6198 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 670:
/* Line 1792 of yacc.c  */
#line 6199 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 671:
/* Line 1792 of yacc.c  */
#line 6200 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 672:
/* Line 1792 of yacc.c  */
#line 6201 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 673:
/* Line 1792 of yacc.c  */
#line 6207 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
    break;

  case 679:
/* Line 1792 of yacc.c  */
#line 6225 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 680:
/* Line 1792 of yacc.c  */
#line 6232 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (7)].key_type), (yyvsp[(2) - (7)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 681:
/* Line 1792 of yacc.c  */
#line 6238 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 682:
/* Line 1792 of yacc.c  */
#line 6244 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 683:
/* Line 1792 of yacc.c  */
#line 6250 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(2) - (8)].key_type), (yyvsp[(3) - (8)].lex_str).str ? (yyvsp[(3) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 684:
/* Line 1792 of yacc.c  */
#line 6255 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Key *key= new Foreign_key((yyvsp[(4) - (8)].lex_str).str ? (yyvsp[(4) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str), lex->col_list,
                                      (yyvsp[(8) - (8)].table)->db,
                                      (yyvsp[(8) - (8)].table)->table,
                                      lex->ref_list,
                                      lex->fk_delete_opt,
                                      lex->fk_update_opt,
                                      lex->fk_match_option);
            if (key == NULL)
              MYSQL_YYABORT;
            lex->alter_info.key_list.push_back(key);
            if (add_create_index (lex, KEYTYPE_MULTIPLE, (yyvsp[(1) - (8)].lex_str).str ? (yyvsp[(1) - (8)].lex_str) : (yyvsp[(4) - (8)].lex_str),
                                  &default_key_create_info, 1))
              MYSQL_YYABORT;
            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= Alter_info::ADD_FOREIGN_KEY;
          }
    break;

  case 685:
/* Line 1792 of yacc.c  */
#line 6274 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 688:
/* Line 1792 of yacc.c  */
#line 6286 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (4)].item), &(yyvsp[(3) - (4)].item));
          }
    break;

  case 689:
/* Line 1792 of yacc.c  */
#line 6293 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 690:
/* Line 1792 of yacc.c  */
#line 6294 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 691:
/* Line 1792 of yacc.c  */
#line 6298 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 692:
/* Line 1792 of yacc.c  */
#line 6303 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0;
            lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset=NULL;
            lex->gcol_info= 0;
          }
    break;

  case 693:
/* Line 1792 of yacc.c  */
#line 6313 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd, &(yyvsp[(1) - (3)].lex_str), (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  lex->change,&lex->interval_list,lex->charset,
                                  lex->uint_geom_type,
                                  lex->gcol_info))
              MYSQL_YYABORT;
          }
    break;

  case 694:
/* Line 1792 of yacc.c  */
#line 6327 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 695:
/* Line 1792 of yacc.c  */
#line 6331 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (9)].num);
            if (Lex->charset)
            {
              Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[(2) - (9)].charset));
              if (Lex->charset == NULL)
                MYSQL_YYABORT;
            }
            else
              Lex->charset= (yyvsp[(2) - (9)].charset);
            Lex->gcol_info->set_field_type((enum enum_field_types) (yyval.num));
          }
    break;

  case 702:
/* Line 1792 of yacc.c  */
#line 6362 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 703:
/* Line 1792 of yacc.c  */
#line 6368 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 704:
/* Line 1792 of yacc.c  */
#line 6373 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 705:
/* Line 1792 of yacc.c  */
#line 6374 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 707:
/* Line 1792 of yacc.c  */
#line 6377 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 710:
/* Line 1792 of yacc.c  */
#line 6388 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->gcol_info->set_field_stored(TRUE);
          }
    break;

  case 711:
/* Line 1792 of yacc.c  */
#line 6395 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /* 
              "PARSE_GCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            if (!Lex->parse_gcol_expr)
            {
              YYTHD->parse_error_at((yylsp[(1) - (4)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 712:
/* Line 1792 of yacc.c  */
#line 6411 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->gcol_info= new Generated_column();
            if (!Lex->gcol_info)
            {
              mem_alloc_error(sizeof(Generated_column));
              MYSQL_YYABORT;
            }
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));
            uint expr_len= (uint)(yylsp[(1) - (1)]).cpp.length();
            Lex->gcol_info->dup_expr_str(YYTHD->mem_root, (yylsp[(1) - (1)]).cpp.start, expr_len);
            Lex->gcol_info->expr_item= (yyvsp[(1) - (1)].item);
            /*
              @todo: problems:
              - here we have a call to the constructor of
              Generated_column, which takes no argument and builds a
              non-functional object
              - then we fill it member by member; either by assignment to
              public members (!) or by call to a public setter. Both these
              techniques allow changing, at any future point in time, vital
              properties of the object which should rather be constant.
              Class should rather have a constructor which takes arguments,
              sets members, and members should be constant after that.
              This would also get rid of some setters like set_field_stored();
            */
          }
    break;

  case 713:
/* Line 1792 of yacc.c  */
#line 6440 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            (yyval.num)=(yyvsp[(1) - (3)].num);
          }
    break;

  case 714:
/* Line 1792 of yacc.c  */
#line 6445 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)=(yyvsp[(1) - (3)].num);
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
          }
    break;

  case 715:
/* Line 1792 of yacc.c  */
#line 6451 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
            (yyval.num)=MYSQL_TYPE_FLOAT;
          }
    break;

  case 716:
/* Line 1792 of yacc.c  */
#line 6457 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 717:
/* Line 1792 of yacc.c  */
#line 6462 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 718:
/* Line 1792 of yacc.c  */
#line 6467 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 719:
/* Line 1792 of yacc.c  */
#line 6472 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 720:
/* Line 1792 of yacc.c  */
#line 6477 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 721:
/* Line 1792 of yacc.c  */
#line 6484 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 722:
/* Line 1792 of yacc.c  */
#line 6491 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->type|= (yyvsp[(3) - (3)].ulong_num);
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 723:
/* Line 1792 of yacc.c  */
#line 6498 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->type|= (yyvsp[(2) - (2)].ulong_num);
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 724:
/* Line 1792 of yacc.c  */
#line 6505 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 725:
/* Line 1792 of yacc.c  */
#line 6511 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 726:
/* Line 1792 of yacc.c  */
#line 6517 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 727:
/* Line 1792 of yacc.c  */
#line 6524 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->type|= (yyvsp[(3) - (3)].ulong_num);
            (yyval.num)= MYSQL_TYPE_VARCHAR;
            Lex->charset=national_charset_info;
          }
    break;

  case 728:
/* Line 1792 of yacc.c  */
#line 6531 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            Lex->charset=&my_charset_bin;
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 729:
/* Line 1792 of yacc.c  */
#line 6537 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            if (Lex->length)
            {
              errno= 0;
              ulong length= strtoul(Lex->length, NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
            }
            (yyval.num)=MYSQL_TYPE_YEAR;
          }
    break;

  case 730:
/* Line 1792 of yacc.c  */
#line 6553 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DATE; }
    break;

  case 731:
/* Line 1792 of yacc.c  */
#line 6555 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->dec= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            (yyval.num)= MYSQL_TYPE_TIME2;
          }
    break;

  case 732:
/* Line 1792 of yacc.c  */
#line 6560 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->dec= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            if (YYTHD->variables.sql_mode & MODE_MAXDB)
              (yyval.num)=MYSQL_TYPE_DATETIME2;
            else
            {
              /*
                Unlike other types TIMESTAMP fields are NOT NULL by default.
                This behavior is deprecated now.
              */
              if (!YYTHD->variables.explicit_defaults_for_timestamp)
                Lex->type|= NOT_NULL_FLAG;
              /*
                To flag the current statement as dependent for binary
                logging on the session var. Extra copying to Lex is
                done in case prepared stmt.
              */
              Lex->binlog_need_explicit_defaults_ts=
                YYTHD->binlog_need_explicit_defaults_ts= true;

              (yyval.num)=MYSQL_TYPE_TIMESTAMP2;
            }
          }
    break;

  case 733:
/* Line 1792 of yacc.c  */
#line 6584 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->dec= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            (yyval.num)= MYSQL_TYPE_DATETIME2;
          }
    break;

  case 734:
/* Line 1792 of yacc.c  */
#line 6589 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_TINY_BLOB;
          }
    break;

  case 735:
/* Line 1792 of yacc.c  */
#line 6594 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_BLOB;
          }
    break;

  case 736:
/* Line 1792 of yacc.c  */
#line 6600 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)(yyvsp[(1) - (1)].num);
            (yyval.num)=MYSQL_TYPE_GEOMETRY;
          }
    break;

  case 737:
/* Line 1792 of yacc.c  */
#line 6606 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 738:
/* Line 1792 of yacc.c  */
#line 6611 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_LONG_BLOB;
          }
    break;

  case 739:
/* Line 1792 of yacc.c  */
#line 6616 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 740:
/* Line 1792 of yacc.c  */
#line 6621 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 741:
/* Line 1792 of yacc.c  */
#line 6627 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_TINY_BLOB;
          }
    break;

  case 742:
/* Line 1792 of yacc.c  */
#line 6633 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_BLOB;
          }
    break;

  case 743:
/* Line 1792 of yacc.c  */
#line 6640 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 744:
/* Line 1792 of yacc.c  */
#line 6646 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_LONG_BLOB;
          }
    break;

  case 745:
/* Line 1792 of yacc.c  */
#line 6652 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
            (yyval.num)=MYSQL_TYPE_NEWDECIMAL;
          }
    break;

  case 746:
/* Line 1792 of yacc.c  */
#line 6658 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
            (yyval.num)=MYSQL_TYPE_NEWDECIMAL;
          }
    break;

  case 747:
/* Line 1792 of yacc.c  */
#line 6664 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
            (yyval.num)=MYSQL_TYPE_NEWDECIMAL;
          }
    break;

  case 748:
/* Line 1792 of yacc.c  */
#line 6670 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {Lex->interval_list.empty();}
    break;

  case 749:
/* Line 1792 of yacc.c  */
#line 6672 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(6) - (6)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(6) - (6)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_ENUM;
          }
    break;

  case 750:
/* Line 1792 of yacc.c  */
#line 6678 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.empty();}
    break;

  case 751:
/* Line 1792 of yacc.c  */
#line 6680 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(6) - (6)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(6) - (6)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_SET;
          }
    break;

  case 752:
/* Line 1792 of yacc.c  */
#line 6686 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 753:
/* Line 1792 of yacc.c  */
#line 6692 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_LONGLONG;
            Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
              UNIQUE_FLAG);
          }
    break;

  case 754:
/* Line 1792 of yacc.c  */
#line 6698 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_JSON;
          }
    break;

  case 755:
/* Line 1792 of yacc.c  */
#line 6705 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRY; }
    break;

  case 756:
/* Line 1792 of yacc.c  */
#line 6706 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRYCOLLECTION; }
    break;

  case 757:
/* Line 1792 of yacc.c  */
#line 6708 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char*>(STRINGIFY_ARG
                                           (MAX_LEN_GEOM_POINT_FIELD));
            (yyval.num)= Field::GEOM_POINT;
          }
    break;

  case 758:
/* Line 1792 of yacc.c  */
#line 6713 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOINT; }
    break;

  case 759:
/* Line 1792 of yacc.c  */
#line 6714 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_LINESTRING; }
    break;

  case 760:
/* Line 1792 of yacc.c  */
#line 6715 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTILINESTRING; }
    break;

  case 761:
/* Line 1792 of yacc.c  */
#line 6716 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_POLYGON; }
    break;

  case 762:
/* Line 1792 of yacc.c  */
#line 6717 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOLYGON; }
    break;

  case 763:
/* Line 1792 of yacc.c  */
#line 6721 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 764:
/* Line 1792 of yacc.c  */
#line 6725 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 765:
/* Line 1792 of yacc.c  */
#line 6726 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 766:
/* Line 1792 of yacc.c  */
#line 6730 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 767:
/* Line 1792 of yacc.c  */
#line 6731 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 768:
/* Line 1792 of yacc.c  */
#line 6735 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 769:
/* Line 1792 of yacc.c  */
#line 6736 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 770:
/* Line 1792 of yacc.c  */
#line 6737 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 771:
/* Line 1792 of yacc.c  */
#line 6738 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 772:
/* Line 1792 of yacc.c  */
#line 6739 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 773:
/* Line 1792 of yacc.c  */
#line 6743 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONG; }
    break;

  case 774:
/* Line 1792 of yacc.c  */
#line 6744 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TINY; }
    break;

  case 775:
/* Line 1792 of yacc.c  */
#line 6745 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_SHORT; }
    break;

  case 776:
/* Line 1792 of yacc.c  */
#line 6746 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_INT24; }
    break;

  case 777:
/* Line 1792 of yacc.c  */
#line 6747 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONGLONG; }
    break;

  case 778:
/* Line 1792 of yacc.c  */
#line 6752 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              MYSQL_TYPE_FLOAT : MYSQL_TYPE_DOUBLE;
          }
    break;

  case 779:
/* Line 1792 of yacc.c  */
#line 6757 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 780:
/* Line 1792 of yacc.c  */
#line 6759 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 781:
/* Line 1792 of yacc.c  */
#line 6764 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
    break;

  case 782:
/* Line 1792 of yacc.c  */
#line 6769 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= (yyvsp[(1) - (1)].c_str);
            (yyval.precision).dec= NULL;
          }
    break;

  case 784:
/* Line 1792 of yacc.c  */
#line 6778 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= (yyvsp[(2) - (5)].lex_str).str;
            (yyval.precision).dec= (yyvsp[(4) - (5)].lex_str).str;
          }
    break;

  case 785:
/* Line 1792 of yacc.c  */
#line 6786 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; }
    break;

  case 786:
/* Line 1792 of yacc.c  */
#line 6787 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 787:
/* Line 1792 of yacc.c  */
#line 6791 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 788:
/* Line 1792 of yacc.c  */
#line 6792 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 789:
/* Line 1792 of yacc.c  */
#line 6794 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(2) - (3)].lex_str).str, NULL, &error);
           }
    break;

  case 790:
/* Line 1792 of yacc.c  */
#line 6801 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 791:
/* Line 1792 of yacc.c  */
#line 6802 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 792:
/* Line 1792 of yacc.c  */
#line 6806 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 793:
/* Line 1792 of yacc.c  */
#line 6807 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 794:
/* Line 1792 of yacc.c  */
#line 6811 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 795:
/* Line 1792 of yacc.c  */
#line 6812 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG;}
    break;

  case 796:
/* Line 1792 of yacc.c  */
#line 6813 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
    break;

  case 797:
/* Line 1792 of yacc.c  */
#line 6817 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 798:
/* Line 1792 of yacc.c  */
#line 6818 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 799:
/* Line 1792 of yacc.c  */
#line 6819 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 800:
/* Line 1792 of yacc.c  */
#line 6820 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 801:
/* Line 1792 of yacc.c  */
#line 6823 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; /* use default length */ }
    break;

  case 803:
/* Line 1792 of yacc.c  */
#line 6829 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
    break;

  case 805:
/* Line 1792 of yacc.c  */
#line 6837 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 806:
/* Line 1792 of yacc.c  */
#line 6838 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 807:
/* Line 1792 of yacc.c  */
#line 6842 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 809:
/* Line 1792 of yacc.c  */
#line 6848 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~ NOT_NULL_FLAG;
            Lex->type|= EXPLICIT_NULL_FLAG;
          }
    break;

  case 810:
/* Line 1792 of yacc.c  */
#line 6852 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 811:
/* Line 1792 of yacc.c  */
#line 6853 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->default_value=(yyvsp[(2) - (2)].item); }
    break;

  case 812:
/* Line 1792 of yacc.c  */
#line 6855 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root)
              Item_func_now_local(static_cast<uint8>((yyvsp[(3) - (3)].ulong_num)));
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->on_update_value= item;
          }
    break;

  case 813:
/* Line 1792 of yacc.c  */
#line 6862 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
    break;

  case 814:
/* Line 1792 of yacc.c  */
#line 6864 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 815:
/* Line 1792 of yacc.c  */
#line 6870 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 816:
/* Line 1792 of yacc.c  */
#line 6876 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 817:
/* Line 1792 of yacc.c  */
#line 6882 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 818:
/* Line 1792 of yacc.c  */
#line 6887 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 819:
/* Line 1792 of yacc.c  */
#line 6889 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (Lex->charset && !my_charset_same(Lex->charset,(yyvsp[(2) - (2)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(2) - (2)].charset)->name,Lex->charset->csname);
              MYSQL_YYABORT;
            }
            else
            {
              Lex->charset=(yyvsp[(2) - (2)].charset);
            }
          }
    break;

  case 820:
/* Line 1792 of yacc.c  */
#line 6902 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DEFAULT << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 821:
/* Line 1792 of yacc.c  */
#line 6908 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_FIXED << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 822:
/* Line 1792 of yacc.c  */
#line 6914 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DYNAMIC << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 823:
/* Line 1792 of yacc.c  */
#line 6920 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DEFAULT << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 824:
/* Line 1792 of yacc.c  */
#line 6925 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DISK << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 825:
/* Line 1792 of yacc.c  */
#line 6930 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_MEMORY << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 826:
/* Line 1792 of yacc.c  */
#line 6939 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
          (yyval.num)= (yyvsp[(1) - (2)].num);

          if (Lex->charset) /* Lex->charset is scanned in "type" */
          {
            if (!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[(2) - (2)].charset))))
              MYSQL_YYABORT;
          }
          else if ((yyvsp[(2) - (2)].charset))
          {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                     "COLLATE with no CHARACTER SET "
                     "in SP parameters, RETURNS, DECLARE");
            MYSQL_YYABORT;
          }
        }
    break;

  case 827:
/* Line 1792 of yacc.c  */
#line 6960 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 828:
/* Line 1792 of yacc.c  */
#line 6966 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root)
              Item_func_now_local(static_cast<uint8>((yyvsp[(1) - (1)].ulong_num)));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 829:
/* Line 1792 of yacc.c  */
#line 6973 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 830:
/* Line 1792 of yacc.c  */
#line 6977 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 831:
/* Line 1792 of yacc.c  */
#line 6978 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 832:
/* Line 1792 of yacc.c  */
#line 6983 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 833:
/* Line 1792 of yacc.c  */
#line 6990 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 834:
/* Line 1792 of yacc.c  */
#line 6994 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 835:
/* Line 1792 of yacc.c  */
#line 6995 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 836:
/* Line 1792 of yacc.c  */
#line 6999 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 837:
/* Line 1792 of yacc.c  */
#line 7000 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= (yyvsp[(2) - (2)].charset); }
    break;

  case 838:
/* Line 1792 of yacc.c  */
#line 7005 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[(1) - (1)].lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 839:
/* Line 1792 of yacc.c  */
#line 7013 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 840:
/* Line 1792 of yacc.c  */
#line 7017 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 841:
/* Line 1792 of yacc.c  */
#line 7018 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 842:
/* Line 1792 of yacc.c  */
#line 7023 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[(1) - (1)].lex_str).str)))
              MYSQL_YYABORT;
          }
    break;

  case 843:
/* Line 1792 of yacc.c  */
#line 7030 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 844:
/* Line 1792 of yacc.c  */
#line 7031 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(2) - (2)].charset); }
    break;

  case 845:
/* Line 1792 of yacc.c  */
#line 7035 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 846:
/* Line 1792 of yacc.c  */
#line 7036 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= (yyvsp[(2) - (2)].charset); }
    break;

  case 847:
/* Line 1792 of yacc.c  */
#line 7040 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset); }
    break;

  case 848:
/* Line 1792 of yacc.c  */
#line 7041 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 849:
/* Line 1792 of yacc.c  */
#line 7045 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 850:
/* Line 1792 of yacc.c  */
#line 7046 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 851:
/* Line 1792 of yacc.c  */
#line 7051 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1; }
    break;

  case 852:
/* Line 1792 of yacc.c  */
#line 7052 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1_bin; }
    break;

  case 853:
/* Line 1792 of yacc.c  */
#line 7053 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1_bin; }
    break;

  case 854:
/* Line 1792 of yacc.c  */
#line 7058 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
    break;

  case 855:
/* Line 1792 of yacc.c  */
#line 7066 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
    break;

  case 856:
/* Line 1792 of yacc.c  */
#line 7071 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
    break;

  case 857:
/* Line 1792 of yacc.c  */
#line 7079 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= NULL;
            (yyval.charset_with_flags).type_flags= 0;
          }
    break;

  case 858:
/* Line 1792 of yacc.c  */
#line 7084 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= (yyvsp[(1) - (1)].charset);
            (yyval.charset_with_flags).type_flags= 0;
          }
    break;

  case 859:
/* Line 1792 of yacc.c  */
#line 7089 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= (yyvsp[(1) - (1)].charset);
            (yyval.charset_with_flags).type_flags= 0;
          }
    break;

  case 860:
/* Line 1792 of yacc.c  */
#line 7094 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= &my_charset_bin;
            (yyval.charset_with_flags).type_flags= 0;
          }
    break;

  case 861:
/* Line 1792 of yacc.c  */
#line 7099 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= (yyvsp[(2) - (3)].charset);
            (yyval.charset_with_flags).type_flags= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 862:
/* Line 1792 of yacc.c  */
#line 7104 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= NULL;
            (yyval.charset_with_flags).type_flags= BINCMP_FLAG;
          }
    break;

  case 863:
/* Line 1792 of yacc.c  */
#line 7109 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= (yyvsp[(3) - (3)].charset);
            (yyval.charset_with_flags).type_flags= BINCMP_FLAG;
          }
    break;

  case 864:
/* Line 1792 of yacc.c  */
#line 7116 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 865:
/* Line 1792 of yacc.c  */
#line 7117 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= BINCMP_FLAG; }
    break;

  case 866:
/* Line 1792 of yacc.c  */
#line 7122 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
          if ((yyvsp[(2) - (2)].ulong_num) == 0)
          {
            my_syntax_error(ER(ER_SYNTAX_ERROR));
            MYSQL_YYABORT;
          }
        }
    break;

  case 867:
/* Line 1792 of yacc.c  */
#line 7130 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (4)].ulong_num); }
    break;

  case 868:
/* Line 1792 of yacc.c  */
#line 7134 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 869:
/* Line 1792 of yacc.c  */
#line 7135 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
    break;

  case 870:
/* Line 1792 of yacc.c  */
#line 7139 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
    break;

  case 871:
/* Line 1792 of yacc.c  */
#line 7142 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 872:
/* Line 1792 of yacc.c  */
#line 7143 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 873:
/* Line 1792 of yacc.c  */
#line 7144 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (2)].ulong_num) | (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 874:
/* Line 1792 of yacc.c  */
#line 7145 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) ; }
    break;

  case 875:
/* Line 1792 of yacc.c  */
#line 7150 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) < 1 ? 1 : ((yyvsp[(1) - (1)].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[(1) - (1)].ulong_num));
          (yyval.ulong_num)--;
        }
    break;

  case 876:
/* Line 1792 of yacc.c  */
#line 7158 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (1 | (yyvsp[(2) - (2)].ulong_num)) << (yyvsp[(1) - (2)].ulong_num);
        }
    break;

  case 877:
/* Line 1792 of yacc.c  */
#line 7164 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 878:
/* Line 1792 of yacc.c  */
#line 7165 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)|= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 879:
/* Line 1792 of yacc.c  */
#line 7170 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
          uint start= (yyvsp[(1) - (3)].ulong_num);
          uint end= (yyvsp[(3) - (3)].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
    break;

  case 880:
/* Line 1792 of yacc.c  */
#line 7179 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 881:
/* Line 1792 of yacc.c  */
#line 7180 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 882:
/* Line 1792 of yacc.c  */
#line 7184 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 883:
/* Line 1792 of yacc.c  */
#line 7185 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 886:
/* Line 1792 of yacc.c  */
#line 7199 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)=(yyvsp[(2) - (5)].table);
          }
    break;

  case 887:
/* Line 1792 of yacc.c  */
#line 7206 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->ref_list.empty(); }
    break;

  case 889:
/* Line 1792 of yacc.c  */
#line 7212 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(3) - (3)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key);
          }
    break;

  case 890:
/* Line 1792 of yacc.c  */
#line 7219 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key);
          }
    break;

  case 891:
/* Line 1792 of yacc.c  */
#line 7231 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= FK_MATCH_UNDEF; }
    break;

  case 892:
/* Line 1792 of yacc.c  */
#line 7233 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= FK_MATCH_FULL; }
    break;

  case 893:
/* Line 1792 of yacc.c  */
#line 7235 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= FK_MATCH_PARTIAL; }
    break;

  case 894:
/* Line 1792 of yacc.c  */
#line 7237 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= FK_MATCH_SIMPLE; }
    break;

  case 895:
/* Line 1792 of yacc.c  */
#line 7242 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
    break;

  case 896:
/* Line 1792 of yacc.c  */
#line 7248 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (3)].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
    break;

  case 897:
/* Line 1792 of yacc.c  */
#line 7254 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[(3) - (3)].m_fk_option);
          }
    break;

  case 898:
/* Line 1792 of yacc.c  */
#line 7261 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(6) - (6)].m_fk_option);
          }
    break;

  case 899:
/* Line 1792 of yacc.c  */
#line 7268 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(6) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(3) - (6)].m_fk_option);
          }
    break;

  case 900:
/* Line 1792 of yacc.c  */
#line 7276 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
    break;

  case 901:
/* Line 1792 of yacc.c  */
#line 7277 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
    break;

  case 902:
/* Line 1792 of yacc.c  */
#line 7278 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
    break;

  case 903:
/* Line 1792 of yacc.c  */
#line 7279 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
    break;

  case 904:
/* Line 1792 of yacc.c  */
#line 7280 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
    break;

  case 905:
/* Line 1792 of yacc.c  */
#line 7284 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
    break;

  case 906:
/* Line 1792 of yacc.c  */
#line 7288 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
    break;

  case 907:
/* Line 1792 of yacc.c  */
#line 7289 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
    break;

  case 908:
/* Line 1792 of yacc.c  */
#line 7293 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 909:
/* Line 1792 of yacc.c  */
#line 7294 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 910:
/* Line 1792 of yacc.c  */
#line 7298 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 912:
/* Line 1792 of yacc.c  */
#line 7303 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 913:
/* Line 1792 of yacc.c  */
#line 7304 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 914:
/* Line 1792 of yacc.c  */
#line 7305 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 915:
/* Line 1792 of yacc.c  */
#line 7309 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
    break;

  case 916:
/* Line 1792 of yacc.c  */
#line 7310 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
    break;

  case 917:
/* Line 1792 of yacc.c  */
#line 7314 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_FULLTEXT;}
    break;

  case 918:
/* Line 1792 of yacc.c  */
#line 7319 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_type)= KEYTYPE_SPATIAL;
          }
    break;

  case 919:
/* Line 1792 of yacc.c  */
#line 7325 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->key_create_info= default_key_create_info;
          }
    break;

  case 922:
/* Line 1792 of yacc.c  */
#line 7342 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 924:
/* Line 1792 of yacc.c  */
#line 7347 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 926:
/* Line 1792 of yacc.c  */
#line 7352 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 934:
/* Line 1792 of yacc.c  */
#line 7372 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 935:
/* Line 1792 of yacc.c  */
#line 7373 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 936:
/* Line 1792 of yacc.c  */
#line 7378 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.block_size= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 937:
/* Line 1792 of yacc.c  */
#line 7379 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 942:
/* Line 1792 of yacc.c  */
#line 7394 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX_CSTRING plugin_name= {(yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length};
            if (plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
              Lex->key_create_info.parser_name= (yyvsp[(3) - (3)].lex_str);
            else
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 943:
/* Line 1792 of yacc.c  */
#line 7407 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 944:
/* Line 1792 of yacc.c  */
#line 7408 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
    break;

  case 945:
/* Line 1792 of yacc.c  */
#line 7409 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 946:
/* Line 1792 of yacc.c  */
#line 7413 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(3) - (4)].key_part)); }
    break;

  case 947:
/* Line 1792 of yacc.c  */
#line 7414 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(1) - (2)].key_part)); }
    break;

  case 948:
/* Line 1792 of yacc.c  */
#line 7419 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 949:
/* Line 1792 of yacc.c  */
#line 7425 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            int key_part_len= atoi((yyvsp[(3) - (4)].lex_str).str);
            if (!key_part_len)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[(1) - (4)].lex_str).str);
            }
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (4)].lex_str), (uint) key_part_len);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 950:
/* Line 1792 of yacc.c  */
#line 7438 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 951:
/* Line 1792 of yacc.c  */
#line 7439 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 952:
/* Line 1792 of yacc.c  */
#line 7443 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 953:
/* Line 1792 of yacc.c  */
#line 7444 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 954:
/* Line 1792 of yacc.c  */
#line 7448 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(1) - (1)].string)); }
    break;

  case 955:
/* Line 1792 of yacc.c  */
#line 7449 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(3) - (3)].string)); }
    break;

  case 956:
/* Line 1792 of yacc.c  */
#line 7457 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->sql_command= SQLCOM_ALTER_TABLE;
            lex->duplicates= DUP_ERROR;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->col_list.empty();
            lex->select_lex->init_order();
            lex->select_lex->db=
                    const_cast<char*>((lex->select_lex->table_list.first)->db);
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.db_type= 0;
            lex->create_info.default_table_charset= NULL;
            lex->create_info.row_type= ROW_TYPE_NOT_USED;
            lex->alter_info.reset();
            lex->no_write_to_binlog= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
            lex->create_last_non_select_table= lex->last_table();
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
    break;

  case 957:
/* Line 1792 of yacc.c  */
#line 7484 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (!lex->m_sql_cmd)
            {
              /* Create a generic ALTER TABLE statment. */
              lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (lex->m_sql_cmd == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 958:
/* Line 1792 of yacc.c  */
#line 7496 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 959:
/* Line 1792 of yacc.c  */
#line 7501 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[(3) - (5)].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
    break;

  case 960:
/* Line 1792 of yacc.c  */
#line 7510 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            push_deprecated_warn_no_replacement(YYTHD,
              "UPGRADE DATA DIRECTORY NAME");
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "DATABASE");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[(3) - (7)].lex_str);
          }
    break;

  case 961:
/* Line 1792 of yacc.c  */
#line 7523 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 962:
/* Line 1792 of yacc.c  */
#line 7534 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 963:
/* Line 1792 of yacc.c  */
#line 7541 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 964:
/* Line 1792 of yacc.c  */
#line 7552 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 965:
/* Line 1792 of yacc.c  */
#line 7559 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 966:
/* Line 1792 of yacc.c  */
#line 7570 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 967:
/* Line 1792 of yacc.c  */
#line 7577 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 968:
/* Line 1792 of yacc.c  */
#line 7589 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 969:
/* Line 1792 of yacc.c  */
#line 7591 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= Event_parse_data::new_instance(YYTHD)))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 970:
/* Line 1792 of yacc.c  */
#line 7611 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!((yyvsp[(6) - (10)].num) || (yyvsp[(7) - (10)].num) || (yyvsp[(8) - (10)].num) || (yyvsp[(9) - (10)].num) || (yyvsp[(10) - (10)].num)))
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 971:
/* Line 1792 of yacc.c  */
#line 7624 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
    break;

  case 972:
/* Line 1792 of yacc.c  */
#line 7629 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
    break;

  case 973:
/* Line 1792 of yacc.c  */
#line 7634 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
    break;

  case 974:
/* Line 1792 of yacc.c  */
#line 7639 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
    break;

  case 975:
/* Line 1792 of yacc.c  */
#line 7644 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[(3) - (7)].lex_str);
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_alter_server(&Lex->server_options);
          }
    break;

  case 977:
/* Line 1792 of yacc.c  */
#line 7654 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (5)].lex_user)->auth.str= (yyvsp[(5) - (5)].lex_str).str;
            (yyvsp[(2) - (5)].lex_user)->auth.length= (yyvsp[(5) - (5)].lex_str).length;
            (yyvsp[(2) - (5)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 978:
/* Line 1792 of yacc.c  */
#line 7660 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 979:
/* Line 1792 of yacc.c  */
#line 7665 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
          }
    break;

  case 980:
/* Line 1792 of yacc.c  */
#line 7673 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 984:
/* Line 1792 of yacc.c  */
#line 7684 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
    break;

  case 985:
/* Line 1792 of yacc.c  */
#line 7690 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
    break;

  case 986:
/* Line 1792 of yacc.c  */
#line 7696 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.update_password_expired_column= true;
          }
    break;

  case 987:
/* Line 1792 of yacc.c  */
#line 7702 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if ((yyvsp[(3) - (4)].ulong_num) == 0 || (yyvsp[(3) - (4)].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              my_snprintf(buf, sizeof(buf), "%lu", (yyvsp[(3) - (4)].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.expire_after_days= (yyvsp[(3) - (4)].ulong_num);
            lex->alter_password.use_default_password_lifetime= false;
          }
    break;

  case 988:
/* Line 1792 of yacc.c  */
#line 7716 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
    break;

  case 989:
/* Line 1792 of yacc.c  */
#line 7722 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_password.update_password_expired_fields= true;
          }
    break;

  case 990:
/* Line 1792 of yacc.c  */
#line 7728 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 991:
/* Line 1792 of yacc.c  */
#line 7732 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 993:
/* Line 1792 of yacc.c  */
#line 7737 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 994:
/* Line 1792 of yacc.c  */
#line 7738 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 995:
/* Line 1792 of yacc.c  */
#line 7743 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 996:
/* Line 1792 of yacc.c  */
#line 7749 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 997:
/* Line 1792 of yacc.c  */
#line 7755 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 998:
/* Line 1792 of yacc.c  */
#line 7761 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 999:
/* Line 1792 of yacc.c  */
#line 7770 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(st_lex_user));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
    break;

  case 1000:
/* Line 1792 of yacc.c  */
#line 7783 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 1001:
/* Line 1792 of yacc.c  */
#line 7784 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1002:
/* Line 1792 of yacc.c  */
#line 7785 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1003:
/* Line 1792 of yacc.c  */
#line 7786 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1004:
/* Line 1792 of yacc.c  */
#line 7790 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 1005:
/* Line 1792 of yacc.c  */
#line 7792 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[(3) - (3)].spname);
            (yyval.num)= 1;
          }
    break;

  case 1006:
/* Line 1792 of yacc.c  */
#line 7803 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 1007:
/* Line 1792 of yacc.c  */
#line 7804 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1008:
/* Line 1792 of yacc.c  */
#line 7808 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str).str= 0; (yyval.lex_str).length= 0; }
    break;

  case 1009:
/* Line 1792 of yacc.c  */
#line 7809 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1019:
/* Line 1792 of yacc.c  */
#line 7829 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1020:
/* Line 1792 of yacc.c  */
#line 7837 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1022:
/* Line 1792 of yacc.c  */
#line 7853 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_DROP_PARTITION;
          }
    break;

  case 1023:
/* Line 1792 of yacc.c  */
#line 7858 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
          }
    break;

  case 1024:
/* Line 1792 of yacc.c  */
#line 7865 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1026:
/* Line 1792 of yacc.c  */
#line 7879 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1027:
/* Line 1792 of yacc.c  */
#line 7891 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1029:
/* Line 1792 of yacc.c  */
#line 7904 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1031:
/* Line 1792 of yacc.c  */
#line 7917 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->alter_info.num_parts= (yyvsp[(4) - (4)].ulong_num);
          }
    break;

  case 1032:
/* Line 1792 of yacc.c  */
#line 7924 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1034:
/* Line 1792 of yacc.c  */
#line 7937 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            size_t dummy;
            lex->select_lex->db= const_cast<char*>((yyvsp[(6) - (7)].table)->db.str);
            if (lex->select_lex->db == NULL &&
                lex->copy_db_to(&lex->select_lex->db, &dummy))
            {
              MYSQL_YYABORT;
            }
            lex->name.str= const_cast<char*>((yyvsp[(6) - (7)].table)->table.str);
            lex->name.length= (yyvsp[(6) - (7)].table)->table.length;
            lex->alter_info.flags|= Alter_info::ALTER_EXCHANGE_PARTITION;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(6) - (7)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1035:
/* Line 1792 of yacc.c  */
#line 7963 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1036:
/* Line 1792 of yacc.c  */
#line 7972 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1039:
/* Line 1792 of yacc.c  */
#line 7988 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.with_validation= Alter_info::ALTER_WITH_VALIDATION;
          }
    break;

  case 1040:
/* Line 1792 of yacc.c  */
#line 7992 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.with_validation=
              Alter_info::ALTER_WITHOUT_VALIDATION;
          }
    break;

  case 1041:
/* Line 1792 of yacc.c  */
#line 8000 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REMOVE_PARTITIONING;
          }
    break;

  case 1042:
/* Line 1792 of yacc.c  */
#line 8007 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ALL_PARTITION;
          }
    break;

  case 1044:
/* Line 1792 of yacc.c  */
#line 8015 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->alter_info.flags|= Alter_info::ALTER_ADD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1045:
/* Line 1792 of yacc.c  */
#line 8027 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1047:
/* Line 1792 of yacc.c  */
#line 8033 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
    break;

  case 1048:
/* Line 1792 of yacc.c  */
#line 8038 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->part_info->num_parts= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 1049:
/* Line 1792 of yacc.c  */
#line 8045 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1051:
/* Line 1792 of yacc.c  */
#line 8060 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_TABLE_REORG;
          }
    break;

  case 1052:
/* Line 1792 of yacc.c  */
#line 8064 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REORGANIZE_PARTITION;
          }
    break;

  case 1053:
/* Line 1792 of yacc.c  */
#line 8068 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
    break;

  case 1054:
/* Line 1792 of yacc.c  */
#line 8075 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1055:
/* Line 1792 of yacc.c  */
#line 8076 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1056:
/* Line 1792 of yacc.c  */
#line 8081 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            if (Lex->alter_info.partition_names.push_back(s))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1062:
/* Line 1792 of yacc.c  */
#line 8112 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change=0;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN;
          }
    break;

  case 1063:
/* Line 1792 of yacc.c  */
#line 8121 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1064:
/* Line 1792 of yacc.c  */
#line 8125 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 1066:
/* Line 1792 of yacc.c  */
#line 8131 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change= (yyvsp[(3) - (3)].lex_str).str;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
          }
    break;

  case 1067:
/* Line 1792 of yacc.c  */
#line 8137 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1068:
/* Line 1792 of yacc.c  */
#line 8141 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset= NULL;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
            lex->gcol_info= 0;
          }
    break;

  case 1069:
/* Line 1792 of yacc.c  */
#line 8151 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,&(yyvsp[(3) - (5)].lex_str),
                                  (enum enum_field_types) (yyvsp[(5) - (5)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  (yyvsp[(3) - (5)].lex_str).str, &lex->interval_list, lex->charset,
                                  lex->uint_geom_type,
                                  lex->gcol_info))
              MYSQL_YYABORT;
          }
    break;

  case 1070:
/* Line 1792 of yacc.c  */
#line 8164 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1071:
/* Line 1792 of yacc.c  */
#line 8168 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::COLUMN, (yyvsp[(3) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_COLUMN;
          }
    break;

  case 1072:
/* Line 1792 of yacc.c  */
#line 8177 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[(4) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::DROP_FOREIGN_KEY;
          }
    break;

  case 1073:
/* Line 1792 of yacc.c  */
#line 8186 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, primary_key_name);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 1074:
/* Line 1792 of yacc.c  */
#line 8195 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (3)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 1075:
/* Line 1792 of yacc.c  */
#line 8204 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 1076:
/* Line 1792 of yacc.c  */
#line 8210 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 1077:
/* Line 1792 of yacc.c  */
#line 8216 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (6)].lex_str).str,(yyvsp[(6) - (6)].item));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 1078:
/* Line 1792 of yacc.c  */
#line 8225 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (5)].lex_str).str, (Item*) 0);
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 1079:
/* Line 1792 of yacc.c  */
#line 8234 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            size_t dummy;
            lex->select_lex->db= const_cast<char*>((yyvsp[(3) - (3)].table)->db.str);
            if (lex->select_lex->db == NULL &&
                lex->copy_db_to(&lex->select_lex->db, &dummy))
            {
              MYSQL_YYABORT;
            }
            enum_ident_name_check ident_check_status=
              check_table_name((yyvsp[(3) - (3)].table)->table.str,(yyvsp[(3) - (3)].table)->table.length, FALSE);
            if (ident_check_status == IDENT_NAME_WRONG)
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            else if (ident_check_status == IDENT_NAME_TOO_LONG)
            {
              my_error(ER_TOO_LONG_IDENT, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            LEX_STRING db_str= to_lex_string((yyvsp[(3) - (3)].table)->db);
            if (db_str.str &&
                (check_and_convert_db_name(&db_str, FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            lex->name.str= const_cast<char*>((yyvsp[(3) - (3)].table)->table.str);
            lex->name.length= (yyvsp[(3) - (3)].table)->table.length;
            lex->alter_info.flags|= Alter_info::ALTER_RENAME;
          }
    break;

  case 1080:
/* Line 1792 of yacc.c  */
#line 8264 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_rename_key *ak= new (YYTHD->mem_root)
                                    Alter_rename_key((yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            if (ak == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_rename_key_list.push_back(ak);
            lex->alter_info.flags|= Alter_info::ALTER_RENAME_INDEX;
          }
    break;

  case 1081:
/* Line 1792 of yacc.c  */
#line 8274 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(4) - (5)].charset))
            {
              THD *thd= YYTHD;
              (yyvsp[(4) - (5)].charset)= thd->variables.collation_database;
            }
            (yyvsp[(5) - (5)].charset)= (yyvsp[(5) - (5)].charset) ? (yyvsp[(5) - (5)].charset) : (yyvsp[(4) - (5)].charset);
            if (!my_charset_same((yyvsp[(4) - (5)].charset),(yyvsp[(5) - (5)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(5) - (5)].charset)->name, (yyvsp[(4) - (5)].charset)->csname);
              MYSQL_YYABORT;
            }
            LEX *lex= Lex;
            lex->create_info.table_charset=
            lex->create_info.default_table_charset= (yyvsp[(5) - (5)].charset);
            lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
              HA_CREATE_USED_DEFAULT_CHARSET);
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
          }
    break;

  case 1082:
/* Line 1792 of yacc.c  */
#line 8295 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.used_fields&= ~HA_CREATE_USED_ENGINE;
            }
          }
    break;

  case 1083:
/* Line 1792 of yacc.c  */
#line 8305 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_RECREATE;
          }
    break;

  case 1084:
/* Line 1792 of yacc.c  */
#line 8309 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_ORDER;
          }
    break;

  case 1085:
/* Line 1792 of yacc.c  */
#line 8314 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_UPGRADE_PARTITIONING;
          }
    break;

  case 1094:
/* Line 1792 of yacc.c  */
#line 8334 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.requested_algorithm=
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
    break;

  case 1095:
/* Line 1792 of yacc.c  */
#line 8339 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.set_requested_algorithm(&(yyvsp[(3) - (3)].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1096:
/* Line 1792 of yacc.c  */
#line 8350 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
    break;

  case 1097:
/* Line 1792 of yacc.c  */
#line 8355 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.set_requested_lock(&(yyvsp[(3) - (3)].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1098:
/* Line 1792 of yacc.c  */
#line 8365 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1099:
/* Line 1792 of yacc.c  */
#line 8366 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1100:
/* Line 1792 of yacc.c  */
#line 8370 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1101:
/* Line 1792 of yacc.c  */
#line 8371 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 1102:
/* Line 1792 of yacc.c  */
#line 8375 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_DEFAULT; }
    break;

  case 1103:
/* Line 1792 of yacc.c  */
#line 8376 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_RESTRICT; }
    break;

  case 1104:
/* Line 1792 of yacc.c  */
#line 8377 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_CASCADE; }
    break;

  case 1105:
/* Line 1792 of yacc.c  */
#line 8381 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1106:
/* Line 1792 of yacc.c  */
#line 8383 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            store_position_for_column((yyvsp[(2) - (2)].lex_str).str);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
    break;

  case 1107:
/* Line 1792 of yacc.c  */
#line 8388 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            store_position_for_column(first_keyword);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
    break;

  case 1108:
/* Line 1792 of yacc.c  */
#line 8395 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1109:
/* Line 1792 of yacc.c  */
#line 8396 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1110:
/* Line 1792 of yacc.c  */
#line 8397 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1111:
/* Line 1792 of yacc.c  */
#line 8398 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1112:
/* Line 1792 of yacc.c  */
#line 8403 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
                 }
    break;

  case 1113:
/* Line 1792 of yacc.c  */
#line 8408 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
                 }
    break;

  case 1114:
/* Line 1792 of yacc.c  */
#line 8415 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1115:
/* Line 1792 of yacc.c  */
#line 8417 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
          LEX *lex=Lex;
          lex->sql_command = SQLCOM_SLAVE_STOP;
          lex->type = 0;
          lex->slave_thd_opt= (yyvsp[(3) - (4)].num);
        }
    break;

  case 1116:
/* Line 1792 of yacc.c  */
#line 8427 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1117:
/* Line 1792 of yacc.c  */
#line 8442 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1119:
/* Line 1792 of yacc.c  */
#line 8463 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1120:
/* Line 1792 of yacc.c  */
#line 8479 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1121:
/* Line 1792 of yacc.c  */
#line 8483 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1122:
/* Line 1792 of yacc.c  */
#line 8490 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1123:
/* Line 1792 of yacc.c  */
#line 8494 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1124:
/* Line 1792 of yacc.c  */
#line 8501 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
    break;

  case 1125:
/* Line 1792 of yacc.c  */
#line 8505 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
    break;

  case 1126:
/* Line 1792 of yacc.c  */
#line 8509 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
    break;

  case 1128:
/* Line 1792 of yacc.c  */
#line 8520 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1129:
/* Line 1792 of yacc.c  */
#line 8524 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.user= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1130:
/* Line 1792 of yacc.c  */
#line 8530 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1131:
/* Line 1792 of yacc.c  */
#line 8534 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.password= (yyvsp[(3) - (3)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 1132:
/* Line 1792 of yacc.c  */
#line 8540 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1133:
/* Line 1792 of yacc.c  */
#line 8544 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1134:
/* Line 1792 of yacc.c  */
#line 8550 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1135:
/* Line 1792 of yacc.c  */
#line 8554 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_dir= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1136:
/* Line 1792 of yacc.c  */
#line 8561 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1137:
/* Line 1792 of yacc.c  */
#line 8565 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1138:
/* Line 1792 of yacc.c  */
#line 8572 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1139:
/* Line 1792 of yacc.c  */
#line 8576 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1140:
/* Line 1792 of yacc.c  */
#line 8583 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_SQL;
          }
    break;

  case 1141:
/* Line 1792 of yacc.c  */
#line 8587 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_IO;
          }
    break;

  case 1142:
/* Line 1792 of yacc.c  */
#line 8594 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
    break;

  case 1143:
/* Line 1792 of yacc.c  */
#line 8599 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
    break;

  case 1146:
/* Line 1792 of yacc.c  */
#line 8627 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
    break;

  case 1147:
/* Line 1792 of yacc.c  */
#line 8632 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
    break;

  case 1148:
/* Line 1792 of yacc.c  */
#line 8637 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.until_after_gaps= true;
          }
    break;

  case 1149:
/* Line 1792 of yacc.c  */
#line 8644 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1150:
/* Line 1792 of yacc.c  */
#line 8651 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1151:
/* Line 1792 of yacc.c  */
#line 8655 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= 0; }
    break;

  case 1152:
/* Line 1792 of yacc.c  */
#line 8656 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_QUICK; }
    break;

  case 1153:
/* Line 1792 of yacc.c  */
#line 8657 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_EXTEND; }
    break;

  case 1154:
/* Line 1792 of yacc.c  */
#line 8662 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1155:
/* Line 1792 of yacc.c  */
#line 8672 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1156:
/* Line 1792 of yacc.c  */
#line 8683 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1157:
/* Line 1792 of yacc.c  */
#line 8684 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1158:
/* Line 1792 of yacc.c  */
#line 8688 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1159:
/* Line 1792 of yacc.c  */
#line 8689 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1160:
/* Line 1792 of yacc.c  */
#line 8693 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1161:
/* Line 1792 of yacc.c  */
#line 8694 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1162:
/* Line 1792 of yacc.c  */
#line 8695 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
    break;

  case 1163:
/* Line 1792 of yacc.c  */
#line 8700 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1164:
/* Line 1792 of yacc.c  */
#line 8710 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1165:
/* Line 1792 of yacc.c  */
#line 8722 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 1166:
/* Line 1792 of yacc.c  */
#line 8730 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1167:
/* Line 1792 of yacc.c  */
#line 8745 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1168:
/* Line 1792 of yacc.c  */
#line 8756 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1169:
/* Line 1792 of yacc.c  */
#line 8757 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1170:
/* Line 1792 of yacc.c  */
#line 8761 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1171:
/* Line 1792 of yacc.c  */
#line 8762 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1172:
/* Line 1792 of yacc.c  */
#line 8766 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1173:
/* Line 1792 of yacc.c  */
#line 8767 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_FAST; }
    break;

  case 1174:
/* Line 1792 of yacc.c  */
#line 8768 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_MEDIUM; }
    break;

  case 1175:
/* Line 1792 of yacc.c  */
#line 8769 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1176:
/* Line 1792 of yacc.c  */
#line 8770 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
    break;

  case 1177:
/* Line 1792 of yacc.c  */
#line 8771 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
    break;

  case 1178:
/* Line 1792 of yacc.c  */
#line 8776 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1179:
/* Line 1792 of yacc.c  */
#line 8786 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1180:
/* Line 1792 of yacc.c  */
#line 8797 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1181:
/* Line 1792 of yacc.c  */
#line 8798 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1182:
/* Line 1792 of yacc.c  */
#line 8799 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1183:
/* Line 1792 of yacc.c  */
#line 8804 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
    break;

  case 1184:
/* Line 1792 of yacc.c  */
#line 8808 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1185:
/* Line 1792 of yacc.c  */
#line 8810 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 1186:
/* Line 1792 of yacc.c  */
#line 8817 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (3)].lex_user)) || Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1187:
/* Line 1792 of yacc.c  */
#line 8822 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (5)].lex_user)) || Lex->users_list.push_back((yyvsp[(5) - (5)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1190:
/* Line 1792 of yacc.c  */
#line 8835 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[(1) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[(3) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
    break;

  case 1191:
/* Line 1792 of yacc.c  */
#line 8848 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.reset();
          }
    break;

  case 1192:
/* Line 1792 of yacc.c  */
#line 8852 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[(6) - (6)].lex_str);
          }
    break;

  case 1197:
/* Line 1792 of yacc.c  */
#line 8871 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(2) - (2)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1198:
/* Line 1792 of yacc.c  */
#line 8881 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(3) - (3)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1199:
/* Line 1792 of yacc.c  */
#line 8890 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1200:
/* Line 1792 of yacc.c  */
#line 8891 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str) = default_key_cache_base; }
    break;

  case 1201:
/* Line 1792 of yacc.c  */
#line 8896 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
    break;

  case 1202:
/* Line 1792 of yacc.c  */
#line 8902 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1207:
/* Line 1792 of yacc.c  */
#line 8917 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, (yyvsp[(3) - (3)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(2) - (3)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1208:
/* Line 1792 of yacc.c  */
#line 8927 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (4)].table), NULL, (yyvsp[(4) - (4)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(3) - (4)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1209:
/* Line 1792 of yacc.c  */
#line 8937 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADMIN_PARTITION;
          }
    break;

  case 1212:
/* Line 1792 of yacc.c  */
#line 8948 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.key_usage_list)= NULL; }
    break;

  case 1213:
/* Line 1792 of yacc.c  */
#line 8950 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(3) - (4)].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[(3) - (4)].key_usage_list);
          }
    break;

  case 1214:
/* Line 1792 of yacc.c  */
#line 8960 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1215:
/* Line 1792 of yacc.c  */
#line 8961 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
    break;

  case 1216:
/* Line 1792 of yacc.c  */
#line 8971 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select)= NEW_PTN PT_select((yyvsp[(1) - (1)].select_init), SQLCOM_SELECT);
          }
    break;

  case 1217:
/* Line 1792 of yacc.c  */
#line 8979 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_init)= NEW_PTN PT_select_init2((yyvsp[(1) - (3)].optimizer_hints), (yyvsp[(2) - (3)].select_part2), (yyvsp[(3) - (3)].union_list));
          }
    break;

  case 1218:
/* Line 1792 of yacc.c  */
#line 8983 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_init)= NEW_PTN PT_select_init_parenthesis((yyvsp[(2) - (4)].select_paren), (yyvsp[(4) - (4)].node));
          }
    break;

  case 1219:
/* Line 1792 of yacc.c  */
#line 8990 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_paren)= NEW_PTN PT_select_paren((yyvsp[(1) - (2)].optimizer_hints), (yyvsp[(2) - (2)].select_part2));
          }
    break;

  case 1220:
/* Line 1792 of yacc.c  */
#line 8993 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.select_paren)= (yyvsp[(2) - (3)].select_paren); }
    break;

  case 1221:
/* Line 1792 of yacc.c  */
#line 8999 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_paren_derived)= NEW_PTN PT_select_paren_derived((yyvsp[(1) - (3)].optimizer_hints), (yyvsp[(2) - (3)].select_part2_derived), (yyvsp[(3) - (3)].table_expression));
          }
    break;

  case 1222:
/* Line 1792 of yacc.c  */
#line 9002 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.select_paren_derived)= (yyvsp[(2) - (3)].select_paren_derived); }
    break;

  case 1223:
/* Line 1792 of yacc.c  */
#line 9015 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_part2)= NEW_PTN PT_select_part2((yyvsp[(1) - (4)].select_options_and_item_list), NULL, NULL, NULL, NULL, NULL,
                                        (yyvsp[(2) - (4)].order), (yyvsp[(3) - (4)].limit_clause), NULL, NULL, (yyvsp[(4) - (4)].select_lock_type));
          }
    break;

  case 1224:
/* Line 1792 of yacc.c  */
#line 9020 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_part2)= NEW_PTN PT_select_part2((yyvsp[(1) - (3)].select_options_and_item_list), (yyvsp[(2) - (3)].into_destination), NULL, NULL, NULL, NULL, NULL,
                                        NULL, NULL, NULL, (yyvsp[(3) - (3)].select_lock_type));
          }
    break;

  case 1225:
/* Line 1792 of yacc.c  */
#line 9035 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (11)].into_destination) && (yyvsp[(10) - (11)].into_destination))
            {
              /* double "INTO" clause */
              YYTHD->parse_error_at((yylsp[(10) - (11)]), ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(9) - (11)].procedure_analyse) && ((yyvsp[(2) - (11)].into_destination) || (yyvsp[(10) - (11)].into_destination)))
            {
              /* "INTO" with "PROCEDURE ANALYSE" */
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "INTO");
              MYSQL_YYABORT;
            }
            (yyval.select_part2)= NEW_PTN PT_select_part2((yyvsp[(1) - (11)].select_options_and_item_list), (yyvsp[(2) - (11)].into_destination), (yyvsp[(3) - (11)].table_reference_list), (yyvsp[(4) - (11)].item), (yyvsp[(5) - (11)].group), (yyvsp[(6) - (11)].item), (yyvsp[(7) - (11)].order), (yyvsp[(8) - (11)].limit_clause), (yyvsp[(9) - (11)].procedure_analyse), (yyvsp[(10) - (11)].into_destination),
                                        (yyvsp[(11) - (11)].select_lock_type));
          }
    break;

  case 1226:
/* Line 1792 of yacc.c  */
#line 9054 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: remove this semantic action (currently this removal
              adds shift/reduce conflict)
            */
          }
    break;

  case 1227:
/* Line 1792 of yacc.c  */
#line 9061 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options_and_item_list)= NEW_PTN PT_select_options_and_item_list((yyvsp[(2) - (3)].select_options), (yyvsp[(3) - (3)].item_list2));
          }
    break;

  case 1228:
/* Line 1792 of yacc.c  */
#line 9076 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_expression)= NEW_PTN PT_table_expression((yyvsp[(1) - (8)].table_reference_list), (yyvsp[(2) - (8)].item), (yyvsp[(3) - (8)].group), (yyvsp[(4) - (8)].item), (yyvsp[(5) - (8)].order), (yyvsp[(6) - (8)].limit_clause), (yyvsp[(7) - (8)].procedure_analyse), (yyvsp[(8) - (8)].select_lock_type));
          }
    break;

  case 1229:
/* Line 1792 of yacc.c  */
#line 9082 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= (yyvsp[(2) - (2)].table_reference_list); }
    break;

  case 1230:
/* Line 1792 of yacc.c  */
#line 9086 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= NULL; }
    break;

  case 1232:
/* Line 1792 of yacc.c  */
#line 9092 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_reference_list)= NEW_PTN PT_table_reference_list((yyvsp[(1) - (1)].join_table_list));
          }
    break;

  case 1233:
/* Line 1792 of yacc.c  */
#line 9095 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= NULL; }
    break;

  case 1234:
/* Line 1792 of yacc.c  */
#line 9104 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1236:
/* Line 1792 of yacc.c  */
#line 9113 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.select_options).merge((yyvsp[(1) - (2)].select_options), (yyvsp[(2) - (2)].select_options)))
              MYSQL_YYABORT;
          }
    break;

  case 1238:
/* Line 1792 of yacc.c  */
#line 9122 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= (yyvsp[(1) - (1)].ulonglong_number);
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1239:
/* Line 1792 of yacc.c  */
#line 9127 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /*
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_NO_CACHE;
          }
    break;

  case 1240:
/* Line 1792 of yacc.c  */
#line 9136 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /*
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE;
          }
    break;

  case 1241:
/* Line 1792 of yacc.c  */
#line 9147 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.select_lock_type).is_set= false; }
    break;

  case 1242:
/* Line 1792 of yacc.c  */
#line 9149 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lock_type).is_set= true;
            (yyval.select_lock_type).lock_type= TL_WRITE;
            (yyval.select_lock_type).is_safe_to_cache_query= false;
          }
    break;

  case 1243:
/* Line 1792 of yacc.c  */
#line 9155 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lock_type).is_set= true;
            (yyval.select_lock_type).lock_type= TL_READ_WITH_SHARED_LOCKS;
            (yyval.select_lock_type).is_safe_to_cache_query= false;
          }
    break;

  case 1244:
/* Line 1792 of yacc.c  */
#line 9164 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1245:
/* Line 1792 of yacc.c  */
#line 9170 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1246:
/* Line 1792 of yacc.c  */
#line 9176 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_field((yyloc), NULL, NULL, "*");
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
    break;

  case 1247:
/* Line 1792 of yacc.c  */
#line 9185 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1248:
/* Line 1792 of yacc.c  */
#line 9187 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[(1) - (2)].item), (yylsp[(1) - (2)]).cpp, (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1249:
/* Line 1792 of yacc.c  */
#line 9194 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=null_lex_str;}
    break;

  case 1250:
/* Line 1792 of yacc.c  */
#line 9195 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1251:
/* Line 1792 of yacc.c  */
#line 9196 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1252:
/* Line 1792 of yacc.c  */
#line 9197 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1253:
/* Line 1792 of yacc.c  */
#line 9198 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1254:
/* Line 1792 of yacc.c  */
#line 9202 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1255:
/* Line 1792 of yacc.c  */
#line 9203 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1256:
/* Line 1792 of yacc.c  */
#line 9209 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYTHD->mem_root, (yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1257:
/* Line 1792 of yacc.c  */
#line 9215 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1258:
/* Line 1792 of yacc.c  */
#line 9220 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYTHD->mem_root, (yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1259:
/* Line 1792 of yacc.c  */
#line 9226 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1260:
/* Line 1792 of yacc.c  */
#line 9230 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_istrue((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1261:
/* Line 1792 of yacc.c  */
#line 9234 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnottrue((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1262:
/* Line 1792 of yacc.c  */
#line 9238 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isfalse((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1263:
/* Line 1792 of yacc.c  */
#line 9242 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotfalse((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1264:
/* Line 1792 of yacc.c  */
#line 9246 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1265:
/* Line 1792 of yacc.c  */
#line 9250 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1267:
/* Line 1792 of yacc.c  */
#line 9258 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1268:
/* Line 1792 of yacc.c  */
#line 9262 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1269:
/* Line 1792 of yacc.c  */
#line 9266 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(2) - (3)].boolfunc2creator), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1270:
/* Line 1792 of yacc.c  */
#line 9270 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (6)].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->parse_error_at((yylsp[(2) - (6)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(2) - (6)].boolfunc2creator), (yyvsp[(3) - (6)].num), (yyvsp[(5) - (6)].subselect));
          }
    break;

  case 1272:
/* Line 1792 of yacc.c  */
#line 9287 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].subselect));
          }
    break;

  case 1273:
/* Line 1792 of yacc.c  */
#line 9291 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(5) - (6)].subselect));
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), item);
          }
    break;

  case 1274:
/* Line 1792 of yacc.c  */
#line 9296 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[(1) - (5)].item), true, (yyvsp[(4) - (5)].item));
          }
    break;

  case 1275:
/* Line 1792 of yacc.c  */
#line 9300 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].item_list2) == NULL || (yyvsp[(6) - (7)].item_list2)->push_front((yyvsp[(4) - (7)].item)) || (yyvsp[(6) - (7)].item_list2)->push_front((yyvsp[(1) - (7)].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[(6) - (7)].item_list2), false);
          }
    break;

  case 1276:
/* Line 1792 of yacc.c  */
#line 9307 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[(1) - (6)].item), false, (yyvsp[(5) - (6)].item));
          }
    break;

  case 1277:
/* Line 1792 of yacc.c  */
#line 9311 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(7) - (8)].item_list2) == NULL || (yyvsp[(7) - (8)].item_list2)->push_front((yyvsp[(5) - (8)].item)) || (yyvsp[(7) - (8)].item_list2)->value.push_front((yyvsp[(1) - (8)].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[(7) - (8)].item_list2), true);
          }
    break;

  case 1278:
/* Line 1792 of yacc.c  */
#line 9318 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].item), false);
          }
    break;

  case 1279:
/* Line 1792 of yacc.c  */
#line 9322 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(4) - (6)].item), (yyvsp[(6) - (6)].item), true);
          }
    break;

  case 1280:
/* Line 1792 of yacc.c  */
#line 9326 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[(1) - (4)].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[(4) - (4)].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
    break;

  case 1281:
/* Line 1792 of yacc.c  */
#line 9334 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(3) - (4)].item), (yyvsp[(4) - (4)].item));
          }
    break;

  case 1282:
/* Line 1792 of yacc.c  */
#line 9338 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_not((yyloc), item);
          }
    break;

  case 1283:
/* Line 1792 of yacc.c  */
#line 9345 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_regex((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1284:
/* Line 1792 of yacc.c  */
#line 9349 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_regex((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(4) - (4)].item));
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), item);
          }
    break;

  case 1286:
/* Line 1792 of yacc.c  */
#line 9358 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1287:
/* Line 1792 of yacc.c  */
#line 9362 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1288:
/* Line 1792 of yacc.c  */
#line 9366 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1289:
/* Line 1792 of yacc.c  */
#line 9370 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1290:
/* Line 1792 of yacc.c  */
#line 9374 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1291:
/* Line 1792 of yacc.c  */
#line 9378 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1292:
/* Line 1792 of yacc.c  */
#line 9382 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].interval), 0);
          }
    break;

  case 1293:
/* Line 1792 of yacc.c  */
#line 9386 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].interval), 1);
          }
    break;

  case 1294:
/* Line 1792 of yacc.c  */
#line 9390 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1295:
/* Line 1792 of yacc.c  */
#line 9394 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1296:
/* Line 1792 of yacc.c  */
#line 9398 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1297:
/* Line 1792 of yacc.c  */
#line 9402 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1298:
/* Line 1792 of yacc.c  */
#line 9406 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1299:
/* Line 1792 of yacc.c  */
#line 9410 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1309:
/* Line 1792 of yacc.c  */
#line 9437 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 1310:
/* Line 1792 of yacc.c  */
#line 9438 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
    break;

  case 1311:
/* Line 1792 of yacc.c  */
#line 9439 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 1312:
/* Line 1792 of yacc.c  */
#line 9440 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 1313:
/* Line 1792 of yacc.c  */
#line 9441 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 1314:
/* Line 1792 of yacc.c  */
#line 9442 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 1315:
/* Line 1792 of yacc.c  */
#line 9443 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 1316:
/* Line 1792 of yacc.c  */
#line 9447 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1317:
/* Line 1792 of yacc.c  */
#line 9448 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1323:
/* Line 1792 of yacc.c  */
#line 9458 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 1325:
/* Line 1792 of yacc.c  */
#line 9462 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].param_marker); }
    break;

  case 1328:
/* Line 1792 of yacc.c  */
#line 9466 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1329:
/* Line 1792 of yacc.c  */
#line 9470 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
    break;

  case 1330:
/* Line 1792 of yacc.c  */
#line 9474 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1331:
/* Line 1792 of yacc.c  */
#line 9478 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1332:
/* Line 1792 of yacc.c  */
#line 9482 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1333:
/* Line 1792 of yacc.c  */
#line 9486 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[(2) - (3)].subselect));
          }
    break;

  case 1334:
/* Line 1792 of yacc.c  */
#line 9490 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (3)].item); }
    break;

  case 1335:
/* Line 1792 of yacc.c  */
#line 9492 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item_list2)->value);
          }
    break;

  case 1336:
/* Line 1792 of yacc.c  */
#line 9496 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item_list2)->value);
          }
    break;

  case 1337:
/* Line 1792 of yacc.c  */
#line 9500 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[(3) - (4)].subselect));
          }
    break;

  case 1338:
/* Line 1792 of yacc.c  */
#line 9504 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[(2) - (4)].lex_str), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1339:
/* Line 1792 of yacc.c  */
#line 9508 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[(2) - (7)].item_list2), (yyvsp[(5) - (7)].item), (yyvsp[(6) - (7)].num));
          }
    break;

  case 1340:
/* Line 1792 of yacc.c  */
#line 9512 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(2) - (2)]), (yyvsp[(2) - (2)].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
    break;

  case 1341:
/* Line 1792 of yacc.c  */
#line 9516 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(3) - (6)]), (yyvsp[(3) - (6)].item), &(yyvsp[(5) - (6)].cast_type));
          }
    break;

  case 1342:
/* Line 1792 of yacc.c  */
#line 9520 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), *(yyvsp[(3) - (5)].item_list), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item) );
          }
    break;

  case 1343:
/* Line 1792 of yacc.c  */
#line 9524 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(3) - (6)]), (yyvsp[(3) - (6)].item), &(yyvsp[(5) - (6)].cast_type));
          }
    break;

  case 1344:
/* Line 1792 of yacc.c  */
#line 9528 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].charset));
          }
    break;

  case 1345:
/* Line 1792 of yacc.c  */
#line 9532 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1346:
/* Line 1792 of yacc.c  */
#line 9536 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1347:
/* Line 1792 of yacc.c  */
#line 9541 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(5) - (5)].item), (yyvsp[(2) - (5)].item), (yyvsp[(3) - (5)].interval), 0);
          }
    break;

  case 1348:
/* Line 1792 of yacc.c  */
#line 9545 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[(1) - (3)].item), path);
          }
    break;

  case 1349:
/* Line 1792 of yacc.c  */
#line 9561 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1350:
/* Line 1792 of yacc.c  */
#line 9565 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[(3) - (6)].item_list2), (yyvsp[(5) - (6)].charset));
          }
    break;

  case 1351:
/* Line 1792 of yacc.c  */
#line 9569 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
    break;

  case 1352:
/* Line 1792 of yacc.c  */
#line 9573 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1353:
/* Line 1792 of yacc.c  */
#line 9577 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1354:
/* Line 1792 of yacc.c  */
#line 9581 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1355:
/* Line 1792 of yacc.c  */
#line 9585 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].item), (yyvsp[(7) - (10)].item), (yyvsp[(9) - (10)].item));
          }
    break;

  case 1356:
/* Line 1792 of yacc.c  */
#line 9589 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYTHD->mem_root, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1357:
/* Line 1792 of yacc.c  */
#line 9593 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYTHD->mem_root, (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item_list2));
          }
    break;

  case 1358:
/* Line 1792 of yacc.c  */
#line 9597 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1359:
/* Line 1792 of yacc.c  */
#line 9601 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1360:
/* Line 1792 of yacc.c  */
#line 9605 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1361:
/* Line 1792 of yacc.c  */
#line 9609 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1362:
/* Line 1792 of yacc.c  */
#line 9613 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1363:
/* Line 1792 of yacc.c  */
#line 9617 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_time_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1364:
/* Line 1792 of yacc.c  */
#line 9621 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_datetime_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1365:
/* Line 1792 of yacc.c  */
#line 9625 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), 1, 0);
          }
    break;

  case 1366:
/* Line 1792 of yacc.c  */
#line 9629 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(3) - (4)].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
    break;

  case 1367:
/* Line 1792 of yacc.c  */
#line 9634 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item),
                                       Item_func_trim::TRIM_LEADING);
          }
    break;

  case 1368:
/* Line 1792 of yacc.c  */
#line 9639 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
    break;

  case 1369:
/* Line 1792 of yacc.c  */
#line 9644 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item), Item_func_trim::TRIM_BOTH);
          }
    break;

  case 1370:
/* Line 1792 of yacc.c  */
#line 9648 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_LEADING);
          }
    break;

  case 1371:
/* Line 1792 of yacc.c  */
#line 9652 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_TRAILING);
          }
    break;

  case 1372:
/* Line 1792 of yacc.c  */
#line 9656 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_BOTH);
          }
    break;

  case 1373:
/* Line 1792 of yacc.c  */
#line 9660 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), (yyvsp[(3) - (6)].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
    break;

  case 1374:
/* Line 1792 of yacc.c  */
#line 9665 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
    break;

  case 1375:
/* Line 1792 of yacc.c  */
#line 9669 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1376:
/* Line 1792 of yacc.c  */
#line 9688 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), INTERVAL_DAY, 0);
          }
    break;

  case 1377:
/* Line 1792 of yacc.c  */
#line 9692 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
          }
    break;

  case 1378:
/* Line 1792 of yacc.c  */
#line 9696 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
    break;

  case 1379:
/* Line 1792 of yacc.c  */
#line 9700 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1380:
/* Line 1792 of yacc.c  */
#line 9705 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
          }
    break;

  case 1381:
/* Line 1792 of yacc.c  */
#line 9710 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
          }
    break;

  case 1382:
/* Line 1792 of yacc.c  */
#line 9714 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[(3) - (6)].interval), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1383:
/* Line 1792 of yacc.c  */
#line 9718 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[(3) - (6)].date_time_type), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1384:
/* Line 1792 of yacc.c  */
#line 9722 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 1385:
/* Line 1792 of yacc.c  */
#line 9727 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
          }
    break;

  case 1386:
/* Line 1792 of yacc.c  */
#line 9731 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), INTERVAL_DAY, 1);
          }
    break;

  case 1387:
/* Line 1792 of yacc.c  */
#line 9735 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
          }
    break;

  case 1388:
/* Line 1792 of yacc.c  */
#line 9739 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1389:
/* Line 1792 of yacc.c  */
#line 9743 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1390:
/* Line 1792 of yacc.c  */
#line 9747 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1391:
/* Line 1792 of yacc.c  */
#line 9751 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1392:
/* Line 1792 of yacc.c  */
#line 9755 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1393:
/* Line 1792 of yacc.c  */
#line 9760 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(7) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(3) - (8)].interval_time_st), 0);
          }
    break;

  case 1394:
/* Line 1792 of yacc.c  */
#line 9764 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item),(yyvsp[(3) - (8)].interval_time_st));
          }
    break;

  case 1395:
/* Line 1792 of yacc.c  */
#line 9768 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
    break;

  case 1396:
/* Line 1792 of yacc.c  */
#line 9772 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1397:
/* Line 1792 of yacc.c  */
#line 9776 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1398:
/* Line 1792 of yacc.c  */
#line 9788 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1399:
/* Line 1792 of yacc.c  */
#line 9792 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1400:
/* Line 1792 of yacc.c  */
#line 9796 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1401:
/* Line 1792 of yacc.c  */
#line 9800 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1402:
/* Line 1792 of yacc.c  */
#line 9804 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
    break;

  case 1403:
/* Line 1792 of yacc.c  */
#line 9808 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1404:
/* Line 1792 of yacc.c  */
#line 9812 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1405:
/* Line 1792 of yacc.c  */
#line 9816 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item));
          }
    break;

  case 1406:
/* Line 1792 of yacc.c  */
#line 9820 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1407:
/* Line 1792 of yacc.c  */
#line 9824 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1408:
/* Line 1792 of yacc.c  */
#line 9828 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_password((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1409:
/* Line 1792 of yacc.c  */
#line 9832 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1410:
/* Line 1792 of yacc.c  */
#line 9836 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1411:
/* Line 1792 of yacc.c  */
#line 9840 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1412:
/* Line 1792 of yacc.c  */
#line 9844 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1413:
/* Line 1792 of yacc.c  */
#line 9848 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
    break;

  case 1414:
/* Line 1792 of yacc.c  */
#line 9852 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item),1);
          }
    break;

  case 1415:
/* Line 1792 of yacc.c  */
#line 9856 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[(3) - (4)].item), NULL);
          }
    break;

  case 1416:
/* Line 1792 of yacc.c  */
#line 9860 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1417:
/* Line 1792 of yacc.c  */
#line 9864 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (5)].item), 0, 0, (yyvsp[(4) - (5)].ulong_num));
          }
    break;

  case 1418:
/* Line 1792 of yacc.c  */
#line 9868 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (8)].item), 0, (yyvsp[(6) - (8)].ulong_num),
                        (yyvsp[(7) - (8)].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
          }
    break;

  case 1419:
/* Line 1792 of yacc.c  */
#line 9873 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc),
                        (yyvsp[(3) - (7)].item), 0, (yyvsp[(6) - (7)].ulong_num), MY_STRXFRM_PAD_WITH_SPACE, true);
          }
    break;

  case 1420:
/* Line 1792 of yacc.c  */
#line 9878 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].ulong_num), (yyvsp[(7) - (10)].ulong_num), (yyvsp[(9) - (10)].ulong_num));
          }
    break;

  case 1422:
/* Line 1792 of yacc.c  */
#line 9886 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "CONTAINS", "MBRCONTAINS");
            (yyval.item)= NEW_PTN Item_func_spatial_mbr_rel((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                        Item_func::SP_CONTAINS_FUNC);
          }
    break;

  case 1423:
/* Line 1792 of yacc.c  */
#line 9892 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
    break;

  case 1424:
/* Line 1792 of yacc.c  */
#line 9898 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
    break;

  case 1425:
/* Line 1792 of yacc.c  */
#line 9904 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
    break;

  case 1426:
/* Line 1792 of yacc.c  */
#line 9910 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
    break;

  case 1427:
/* Line 1792 of yacc.c  */
#line 9916 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
    break;

  case 1428:
/* Line 1792 of yacc.c  */
#line 9922 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1429:
/* Line 1792 of yacc.c  */
#line 9926 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
    break;

  case 1430:
/* Line 1792 of yacc.c  */
#line 9944 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[(1) - (4)]), (yyvsp[(1) - (4)].lex_str), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1431:
/* Line 1792 of yacc.c  */
#line 9948 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[(1) - (6)].lex_str), (yyvsp[(3) - (6)].lex_str), (yyvsp[(5) - (6)].item_list2));
          }
    break;

  case 1432:
/* Line 1792 of yacc.c  */
#line 9955 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 1433:
/* Line 1792 of yacc.c  */
#line 9957 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                MYSQLerror(NULL,thd,"syntax error");
                            });
          }
    break;

  case 1434:
/* Line 1792 of yacc.c  */
#line 9969 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1435:
/* Line 1792 of yacc.c  */
#line 9970 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1436:
/* Line 1792 of yacc.c  */
#line 9974 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;         }
    break;

  case 1437:
/* Line 1792 of yacc.c  */
#line 9975 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_EXPAND; }
    break;

  case 1438:
/* Line 1792 of yacc.c  */
#line 9979 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 1439:
/* Line 1792 of yacc.c  */
#line 9980 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(1) - (1)].item_list2); }
    break;

  case 1440:
/* Line 1792 of yacc.c  */
#line 9985 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1441:
/* Line 1792 of yacc.c  */
#line 9991 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1442:
/* Line 1792 of yacc.c  */
#line 10000 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].lex_str), (yylsp[(1) - (2)]).cpp);
          }
    break;

  case 1443:
/* Line 1792 of yacc.c  */
#line 10007 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[(3) - (4)].item), FALSE);
          }
    break;

  case 1444:
/* Line 1792 of yacc.c  */
#line 10011 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[(4) - (5)].item), TRUE);
          }
    break;

  case 1445:
/* Line 1792 of yacc.c  */
#line 10015 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1446:
/* Line 1792 of yacc.c  */
#line 10019 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1447:
/* Line 1792 of yacc.c  */
#line 10023 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1448:
/* Line 1792 of yacc.c  */
#line 10027 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc));
          }
    break;

  case 1449:
/* Line 1792 of yacc.c  */
#line 10031 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1450:
/* Line 1792 of yacc.c  */
#line 10035 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[(4) - (5)].item_list2));
          }
    break;

  case 1451:
/* Line 1792 of yacc.c  */
#line 10039 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1452:
/* Line 1792 of yacc.c  */
#line 10048 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[(4) - (5)].item));
          }
    break;

  case 1453:
/* Line 1792 of yacc.c  */
#line 10052 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1454:
/* Line 1792 of yacc.c  */
#line 10056 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[(4) - (5)].item));
          }
    break;

  case 1455:
/* Line 1792 of yacc.c  */
#line 10060 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[(3) - (4)].item), 0);
          }
    break;

  case 1456:
/* Line 1792 of yacc.c  */
#line 10064 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[(3) - (4)].item), 0);
          }
    break;

  case 1457:
/* Line 1792 of yacc.c  */
#line 10068 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[(3) - (4)].item), 1);
          }
    break;

  case 1458:
/* Line 1792 of yacc.c  */
#line 10072 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[(3) - (4)].item), 1);
          }
    break;

  case 1459:
/* Line 1792 of yacc.c  */
#line 10076 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[(3) - (4)].item), FALSE);
          }
    break;

  case 1460:
/* Line 1792 of yacc.c  */
#line 10080 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[(4) - (5)].item), TRUE);
          }
    break;

  case 1461:
/* Line 1792 of yacc.c  */
#line 10087 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[(3) - (7)].num), (yyvsp[(4) - (7)].item_list2), (yyvsp[(5) - (7)].order_list), (yyvsp[(6) - (7)].string));
          }
    break;

  case 1462:
/* Line 1792 of yacc.c  */
#line 10093 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1463:
/* Line 1792 of yacc.c  */
#line 10098 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1464:
/* Line 1792 of yacc.c  */
#line 10102 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_ident_or_text((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1465:
/* Line 1792 of yacc.c  */
#line 10106 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[(2) - (4)].var_type), (yyvsp[(3) - (4)].lex_str), (yylsp[(3) - (4)]), (yyvsp[(4) - (4)].lex_str));
          }
    break;

  case 1466:
/* Line 1792 of yacc.c  */
#line 10112 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1467:
/* Line 1792 of yacc.c  */
#line 10113 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1468:
/* Line 1792 of yacc.c  */
#line 10118 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1469:
/* Line 1792 of yacc.c  */
#line 10123 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.string) = (yyvsp[(2) - (2)].string); }
    break;

  case 1470:
/* Line 1792 of yacc.c  */
#line 10127 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.order_list)= NULL; }
    break;

  case 1471:
/* Line 1792 of yacc.c  */
#line 10128 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.order_list)= (yyvsp[(3) - (3)].order_list); }
    break;

  case 1472:
/* Line 1792 of yacc.c  */
#line 10133 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1473:
/* Line 1792 of yacc.c  */
#line 10138 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1474:
/* Line 1792 of yacc.c  */
#line 10148 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1475:
/* Line 1792 of yacc.c  */
#line 10155 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1476:
/* Line 1792 of yacc.c  */
#line 10163 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            (yyval.cast_type).type_flags= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.cast_type).length= (yyvsp[(2) - (3)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1477:
/* Line 1792 of yacc.c  */
#line 10171 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1478:
/* Line 1792 of yacc.c  */
#line 10179 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1479:
/* Line 1792 of yacc.c  */
#line 10187 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1480:
/* Line 1792 of yacc.c  */
#line 10195 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1481:
/* Line 1792 of yacc.c  */
#line 10203 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1482:
/* Line 1792 of yacc.c  */
#line 10211 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1483:
/* Line 1792 of yacc.c  */
#line 10219 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].c_str);
          }
    break;

  case 1484:
/* Line 1792 of yacc.c  */
#line 10227 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].c_str);
          }
    break;

  case 1485:
/* Line 1792 of yacc.c  */
#line 10235 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].precision).length;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].precision).dec;
          }
    break;

  case 1486:
/* Line 1792 of yacc.c  */
#line 10243 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1487:
/* Line 1792 of yacc.c  */
#line 10253 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 1489:
/* Line 1792 of yacc.c  */
#line 10259 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1490:
/* Line 1792 of yacc.c  */
#line 10265 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1491:
/* Line 1792 of yacc.c  */
#line 10273 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(1) - (1)].item_list2); }
    break;

  case 1492:
/* Line 1792 of yacc.c  */
#line 10274 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 1493:
/* Line 1792 of yacc.c  */
#line 10279 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1494:
/* Line 1792 of yacc.c  */
#line 10285 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1495:
/* Line 1792 of yacc.c  */
#line 10293 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1496:
/* Line 1792 of yacc.c  */
#line 10294 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1497:
/* Line 1792 of yacc.c  */
#line 10298 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1498:
/* Line 1792 of yacc.c  */
#line 10299 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1499:
/* Line 1792 of yacc.c  */
#line 10304 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (4)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (4)].item));
          }
    break;

  case 1500:
/* Line 1792 of yacc.c  */
#line 10312 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(3) - (5)].item));
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(5) - (5)].item));
            (yyval.item_list)= (yyvsp[(1) - (5)].item_list);
          }
    break;

  case 1502:
/* Line 1792 of yacc.c  */
#line 10324 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_table_ref_join_table((yyvsp[(1) - (1)].node));
          }
    break;

  case 1503:
/* Line 1792 of yacc.c  */
#line 10331 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table_list)= NEW_PTN PT_join_table_list((yyloc), (yyvsp[(1) - (1)].table_list2));
          }
    break;

  case 1505:
/* Line 1792 of yacc.c  */
#line 10345 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.table_list2)= (yyvsp[(3) - (4)].table_list2); }
    break;

  case 1507:
/* Line 1792 of yacc.c  */
#line 10353 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_derived_table_list((yyloc), (yyvsp[(1) - (3)].table_list2), (yyvsp[(3) - (3)].table_list2));
          }
    break;

  case 1508:
/* Line 1792 of yacc.c  */
#line 10373 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_NORMAL>((yyvsp[(1) - (3)].table_list2), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].table_list2));
          }
    break;

  case 1509:
/* Line 1792 of yacc.c  */
#line 10377 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_STRAIGHT>((yyvsp[(1) - (3)].table_list2), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].table_list2));
          }
    break;

  case 1510:
/* Line 1792 of yacc.c  */
#line 10383 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_on<JTT_NORMAL>((yyvsp[(1) - (5)].table_list2), (yylsp[(2) - (5)]), (yyvsp[(3) - (5)].table_list2), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1511:
/* Line 1792 of yacc.c  */
#line 10389 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_on<JTT_STRAIGHT>((yyvsp[(1) - (5)].table_list2), (yylsp[(2) - (5)]), (yyvsp[(3) - (5)].table_list2), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1512:
/* Line 1792 of yacc.c  */
#line 10395 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_using<JTT_NORMAL>((yyvsp[(1) - (7)].table_list2), (yylsp[(2) - (7)]), (yyvsp[(3) - (7)].table_list2), (yyvsp[(6) - (7)].string_list));
          }
    break;

  case 1513:
/* Line 1792 of yacc.c  */
#line 10399 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_NATURAL>((yyvsp[(1) - (4)].table_list2), (yylsp[(2) - (4)]), (yyvsp[(4) - (4)].table_list2));
          }
    break;

  case 1514:
/* Line 1792 of yacc.c  */
#line 10407 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_on<JTT_LEFT>((yyvsp[(1) - (7)].table_list2), (yylsp[(2) - (7)]), (yyvsp[(5) - (7)].table_list2), (yyvsp[(7) - (7)].item));
          }
    break;

  case 1515:
/* Line 1792 of yacc.c  */
#line 10412 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_using<JTT_LEFT>((yyvsp[(1) - (9)].table_list2), (yylsp[(2) - (9)]), (yyvsp[(5) - (9)].table_list2), (yyvsp[(8) - (9)].string_list));
          }
    break;

  case 1516:
/* Line 1792 of yacc.c  */
#line 10416 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_NATURAL_LEFT>((yyvsp[(1) - (6)].table_list2), (yylsp[(2) - (6)]), (yyvsp[(6) - (6)].table_list2));
          }
    break;

  case 1517:
/* Line 1792 of yacc.c  */
#line 10424 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_on<JTT_RIGHT>((yyvsp[(1) - (7)].table_list2), (yylsp[(2) - (7)]), (yyvsp[(5) - (7)].table_list2), (yyvsp[(7) - (7)].item));
          }
    break;

  case 1518:
/* Line 1792 of yacc.c  */
#line 10429 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_using<JTT_RIGHT>((yyvsp[(1) - (9)].table_list2), (yylsp[(2) - (9)]), (yyvsp[(5) - (9)].table_list2), (yyvsp[(8) - (9)].string_list));
          }
    break;

  case 1519:
/* Line 1792 of yacc.c  */
#line 10433 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_NATURAL_RIGHT>((yyvsp[(1) - (6)].table_list2), (yylsp[(2) - (6)]), (yyvsp[(6) - (6)].table_list2));
          }
    break;

  case 1520:
/* Line 1792 of yacc.c  */
#line 10439 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1521:
/* Line 1792 of yacc.c  */
#line 10440 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1522:
/* Line 1792 of yacc.c  */
#line 10441 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1523:
/* Line 1792 of yacc.c  */
#line 10449 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.string_list)= NULL; }
    break;

  case 1525:
/* Line 1792 of yacc.c  */
#line 10455 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.string_list)= (yyvsp[(3) - (4)].string_list);
          }
    break;

  case 1526:
/* Line 1792 of yacc.c  */
#line 10470 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_table_factor_table_ident((yyvsp[(1) - (4)].table), (yyvsp[(2) - (4)].string_list), (yyvsp[(3) - (4)].lex_str_ptr), (yyvsp[(4) - (4)].key_usage_list));
          }
    break;

  case 1527:
/* Line 1792 of yacc.c  */
#line 10474 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_table_factor_select_sym((yyloc), (yyvsp[(1) - (4)].optimizer_hints), (yyvsp[(2) - (4)].select_options), (yyvsp[(3) - (4)].item_list2), (yyvsp[(4) - (4)].table_expression));
          }
    break;

  case 1528:
/* Line 1792 of yacc.c  */
#line 10496 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_table_factor_parenthesis((yyvsp[(2) - (4)].table_list2), (yyvsp[(4) - (4)].lex_str_ptr), (yylsp[(4) - (4)]));
          }
    break;

  case 1529:
/* Line 1792 of yacc.c  */
#line 10523 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_select_derived_union_select((yyvsp[(1) - (2)].table_list2), (yyvsp[(2) - (2)].node), (yylsp[(2) - (2)]));
          }
    break;

  case 1530:
/* Line 1792 of yacc.c  */
#line 10527 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_select_derived_union_union((yyvsp[(1) - (4)].table_list2), (yylsp[(2) - (4)]), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].select_lex2));
          }
    break;

  case 1531:
/* Line 1792 of yacc.c  */
#line 10534 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: remove this semantic action (currently this removal
              adds shift/reduce conflict)
            */
          }
    break;

  case 1532:
/* Line 1792 of yacc.c  */
#line 10541 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_part2_derived)= NEW_PTN PT_select_part2_derived((yyvsp[(2) - (3)].ulonglong_number), (yyvsp[(3) - (3)].item_list2));
          }
    break;

  case 1533:
/* Line 1792 of yacc.c  */
#line 10549 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_select_derived((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].table_list2));
          }
    break;

  case 1534:
/* Line 1792 of yacc.c  */
#line 10555 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1535:
/* Line 1792 of yacc.c  */
#line 10556 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1536:
/* Line 1792 of yacc.c  */
#line 10561 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
    break;

  case 1537:
/* Line 1792 of yacc.c  */
#line 10564 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
    break;

  case 1538:
/* Line 1792 of yacc.c  */
#line 10565 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
    break;

  case 1539:
/* Line 1792 of yacc.c  */
#line 10566 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
    break;

  case 1540:
/* Line 1792 of yacc.c  */
#line 10570 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
    break;

  case 1541:
/* Line 1792 of yacc.c  */
#line 10571 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
    break;

  case 1542:
/* Line 1792 of yacc.c  */
#line 10577 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(5) - (6)].key_usage_list), (yyvsp[(1) - (6)].index_hint), (yyvsp[(3) - (6)].num));
            (yyval.key_usage_list)= (yyvsp[(5) - (6)].key_usage_list);
          }
    break;

  case 1543:
/* Line 1792 of yacc.c  */
#line 10583 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(5) - (6)].key_usage_list), INDEX_HINT_USE, (yyvsp[(3) - (6)].num));
            (yyval.key_usage_list)= (yyvsp[(5) - (6)].key_usage_list);
          }
    break;

  case 1545:
/* Line 1792 of yacc.c  */
#line 10592 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (2)].key_usage_list)->concat((yyvsp[(1) - (2)].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[(2) - (2)].key_usage_list);
          }
    break;

  case 1546:
/* Line 1792 of yacc.c  */
#line 10599 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.key_usage_list)= NULL; }
    break;

  case 1549:
/* Line 1792 of yacc.c  */
#line 10609 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_list)= new (YYTHD->mem_root) List<Index_hint>;
            Index_hint *hint= new (YYTHD->mem_root) Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
    break;

  case 1551:
/* Line 1792 of yacc.c  */
#line 10620 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_element)= new (YYTHD->mem_root) Index_hint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1552:
/* Line 1792 of yacc.c  */
#line 10626 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_element)= new (YYTHD->mem_root) Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1553:
/* Line 1792 of yacc.c  */
#line 10635 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_list)= new (YYTHD->mem_root) List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[(1) - (1)].key_usage_element)))
              MYSQL_YYABORT;
          }
    break;

  case 1554:
/* Line 1792 of yacc.c  */
#line 10641 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[(3) - (3)].key_usage_element)))
              MYSQL_YYABORT;
          }
    break;

  case 1555:
/* Line 1792 of yacc.c  */
#line 10649 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.string_list)= new List<String>))
              MYSQL_YYABORT;
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s);
          }
    break;

  case 1556:
/* Line 1792 of yacc.c  */
#line 10660 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(3) - (3)].lex_str).str,
                                                    (yyvsp[(3) - (3)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyvsp[(1) - (3)].string_list)->push_back(s);
            (yyval.string_list)= (yyvsp[(1) - (3)].string_list);
          }
    break;

  case 1557:
/* Line 1792 of yacc.c  */
#line 10672 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1558:
/* Line 1792 of yacc.c  */
#line 10673 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1559:
/* Line 1792 of yacc.c  */
#line 10674 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1560:
/* Line 1792 of yacc.c  */
#line 10675 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1561:
/* Line 1792 of yacc.c  */
#line 10676 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1562:
/* Line 1792 of yacc.c  */
#line 10677 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1563:
/* Line 1792 of yacc.c  */
#line 10678 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1564:
/* Line 1792 of yacc.c  */
#line 10679 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1565:
/* Line 1792 of yacc.c  */
#line 10680 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1566:
/* Line 1792 of yacc.c  */
#line 10681 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1567:
/* Line 1792 of yacc.c  */
#line 10682 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1568:
/* Line 1792 of yacc.c  */
#line 10683 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1569:
/* Line 1792 of yacc.c  */
#line 10687 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1570:
/* Line 1792 of yacc.c  */
#line 10688 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1571:
/* Line 1792 of yacc.c  */
#line 10689 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1572:
/* Line 1792 of yacc.c  */
#line 10690 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1573:
/* Line 1792 of yacc.c  */
#line 10691 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1574:
/* Line 1792 of yacc.c  */
#line 10692 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1575:
/* Line 1792 of yacc.c  */
#line 10693 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1576:
/* Line 1792 of yacc.c  */
#line 10694 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1577:
/* Line 1792 of yacc.c  */
#line 10695 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1578:
/* Line 1792 of yacc.c  */
#line 10699 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
    break;

  case 1579:
/* Line 1792 of yacc.c  */
#line 10700 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
    break;

  case 1580:
/* Line 1792 of yacc.c  */
#line 10701 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1581:
/* Line 1792 of yacc.c  */
#line 10702 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1585:
/* Line 1792 of yacc.c  */
#line 10712 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str_ptr)=0; }
    break;

  case 1586:
/* Line 1792 of yacc.c  */
#line 10714 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[(2) - (2)].lex_str),sizeof(LEX_STRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1589:
/* Line 1792 of yacc.c  */
#line 10727 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1590:
/* Line 1792 of yacc.c  */
#line 10729 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new PTI_context<CTX_WHERE>((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1591:
/* Line 1792 of yacc.c  */
#line 10735 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1592:
/* Line 1792 of yacc.c  */
#line 10737 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new PTI_context<CTX_HAVING>((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1593:
/* Line 1792 of yacc.c  */
#line 10743 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1594:
/* Line 1792 of yacc.c  */
#line 10744 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1595:
/* Line 1792 of yacc.c  */
#line 10752 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.group)= NULL; }
    break;

  case 1596:
/* Line 1792 of yacc.c  */
#line 10754 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[(3) - (4)].order_list), (yyvsp[(4) - (4)].olap_type));
          }
    break;

  case 1597:
/* Line 1792 of yacc.c  */
#line 10761 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1598:
/* Line 1792 of yacc.c  */
#line 10766 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1599:
/* Line 1792 of yacc.c  */
#line 10775 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
    break;

  case 1600:
/* Line 1792 of yacc.c  */
#line 10776 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= CUBE_TYPE; }
    break;

  case 1601:
/* Line 1792 of yacc.c  */
#line 10784 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= ROLLUP_TYPE; }
    break;

  case 1605:
/* Line 1792 of yacc.c  */
#line 10809 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (2)].item), &(yyvsp[(1) - (2)].item));

            THD *thd= YYTHD;
            ORDER *order= (ORDER *) thd->alloc(sizeof(ORDER));
            if (order == NULL)
              MYSQL_YYABORT;
            order->item_ptr= (yyvsp[(1) - (2)].item);
            order->direction= ((yyvsp[(2) - (2)].num) == 1) ? ORDER::ORDER_ASC : ORDER::ORDER_DESC;
            order->is_position= false;
            add_order_to_list(thd, order);
          }
    break;

  case 1606:
/* Line 1792 of yacc.c  */
#line 10828 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.order)= NULL; }
    break;

  case 1608:
/* Line 1792 of yacc.c  */
#line 10834 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[(3) - (3)].order_list));
          }
    break;

  case 1609:
/* Line 1792 of yacc.c  */
#line 10841 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1610:
/* Line 1792 of yacc.c  */
#line 10846 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1611:
/* Line 1792 of yacc.c  */
#line 10855 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num) =  1; }
    break;

  case 1612:
/* Line 1792 of yacc.c  */
#line 10856 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num) =1; }
    break;

  case 1613:
/* Line 1792 of yacc.c  */
#line 10857 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num) =0; }
    break;

  case 1614:
/* Line 1792 of yacc.c  */
#line 10861 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.limit_clause)= NULL; }
    break;

  case 1616:
/* Line 1792 of yacc.c  */
#line 10867 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[(2) - (2)].limit_options));
          }
    break;

  case 1617:
/* Line 1792 of yacc.c  */
#line 10874 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(1) - (1)].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
    break;

  case 1618:
/* Line 1792 of yacc.c  */
#line 10880 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(3) - (3)].item);
            (yyval.limit_options).opt_offset= (yyvsp[(1) - (3)].item);
            (yyval.limit_options).is_offset_first= true;
          }
    break;

  case 1619:
/* Line 1792 of yacc.c  */
#line 10886 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(1) - (3)].item);
            (yyval.limit_options).opt_offset= (yyvsp[(3) - (3)].item);
            (yyval.limit_options).is_offset_first= false;
          }
    break;

  case 1620:
/* Line 1792 of yacc.c  */
#line 10895 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), (yyvsp[(1) - (1)].lex_str), (yylsp[(1) - (1)]).raw);
          }
    break;

  case 1621:
/* Line 1792 of yacc.c  */
#line 10899 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[(1) - (1)].param_marker));
          }
    break;

  case 1622:
/* Line 1792 of yacc.c  */
#line 10903 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1623:
/* Line 1792 of yacc.c  */
#line 10907 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1624:
/* Line 1792 of yacc.c  */
#line 10911 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1625:
/* Line 1792 of yacc.c  */
#line 10917 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1626:
/* Line 1792 of yacc.c  */
#line 10918 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1627:
/* Line 1792 of yacc.c  */
#line 10922 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1628:
/* Line 1792 of yacc.c  */
#line 10923 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1629:
/* Line 1792 of yacc.c  */
#line 10924 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1630:
/* Line 1792 of yacc.c  */
#line 10925 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1631:
/* Line 1792 of yacc.c  */
#line 10926 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1632:
/* Line 1792 of yacc.c  */
#line 10927 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1633:
/* Line 1792 of yacc.c  */
#line 10931 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1634:
/* Line 1792 of yacc.c  */
#line 10932 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1635:
/* Line 1792 of yacc.c  */
#line 10933 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1636:
/* Line 1792 of yacc.c  */
#line 10934 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1637:
/* Line 1792 of yacc.c  */
#line 10935 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1638:
/* Line 1792 of yacc.c  */
#line 10939 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1639:
/* Line 1792 of yacc.c  */
#line 10940 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1640:
/* Line 1792 of yacc.c  */
#line 10941 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1641:
/* Line 1792 of yacc.c  */
#line 10942 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1642:
/* Line 1792 of yacc.c  */
#line 10943 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1643:
/* Line 1792 of yacc.c  */
#line 10947 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1644:
/* Line 1792 of yacc.c  */
#line 10948 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1645:
/* Line 1792 of yacc.c  */
#line 10949 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1646:
/* Line 1792 of yacc.c  */
#line 10950 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1647:
/* Line 1792 of yacc.c  */
#line 10955 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { my_syntax_error(ER(ER_ONLY_INTEGERS_ALLOWED)); }
    break;

  case 1650:
/* Line 1792 of yacc.c  */
#line 10964 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.procedure_analyse)= NULL; }
    break;

  case 1651:
/* Line 1792 of yacc.c  */
#line 10967 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse)= NEW_PTN PT_procedure_analyse((yyvsp[(4) - (5)].procedure_analyse_params));
          }
    break;

  case 1652:
/* Line 1792 of yacc.c  */
#line 10974 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse_params).max_tree_elements= Proc_analyse_params::default_max_tree_elements;
            (yyval.procedure_analyse_params).max_treemem= Proc_analyse_params::default_max_treemem;
          }
    break;

  case 1653:
/* Line 1792 of yacc.c  */
#line 10979 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse_params).max_tree_elements= static_cast<uint>((yyvsp[(1) - (1)].ulonglong_number));
            (yyval.procedure_analyse_params).max_treemem= Proc_analyse_params::default_max_treemem;
          }
    break;

  case 1654:
/* Line 1792 of yacc.c  */
#line 10984 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse_params).max_tree_elements= static_cast<uint>((yyvsp[(1) - (3)].ulonglong_number));
            (yyval.procedure_analyse_params).max_treemem= static_cast<uint>((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 1655:
/* Line 1792 of yacc.c  */
#line 10992 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            int error;
            (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error);
            if (error != 0)
            {
              my_error(ER_WRONG_PARAMETERS_TO_PROCEDURE, MYF(0), "ANALYSE");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1656:
/* Line 1792 of yacc.c  */
#line 11005 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_list)= (yyvsp[(1) - (3)].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[(3) - (3)].select_var_ident)))
              MYSQL_YYABORT;
          }
    break;

  case 1657:
/* Line 1792 of yacc.c  */
#line 11011 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list;
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[(1) - (1)].select_var_ident)))
              MYSQL_YYABORT;
          }
    break;

  case 1658:
/* Line 1792 of yacc.c  */
#line 11020 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1659:
/* Line 1792 of yacc.c  */
#line 11024 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1660:
/* Line 1792 of yacc.c  */
#line 11030 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.into_destination)= NULL; }
    break;

  case 1662:
/* Line 1792 of yacc.c  */
#line 11036 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= (yyvsp[(2) - (2)].into_destination);
          }
    break;

  case 1663:
/* Line 1792 of yacc.c  */
#line 11045 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyvsp[(2) - (5)].lex_str), (yyvsp[(3) - (5)].charset), (yyvsp[(4) - (5)].field_separators), (yyvsp[(5) - (5)].line_separators));
          }
    break;

  case 1664:
/* Line 1792 of yacc.c  */
#line 11049 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1665:
/* Line 1792 of yacc.c  */
#line 11052 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.into_destination)= (yyvsp[(1) - (1)].select_var_list); }
    break;

  case 1666:
/* Line 1792 of yacc.c  */
#line 11061 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select)= NEW_PTN PT_select(
                  NEW_PTN PT_select_init2(NULL,
                    NEW_PTN PT_select_part2(
                      NEW_PTN PT_select_options_and_item_list((yyvsp[(2) - (3)].select_options), (yyvsp[(3) - (3)].item_list2))), NULL),
                                                              SQLCOM_DO);
          }
    break;

  case 1667:
/* Line 1792 of yacc.c  */
#line 11072 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1668:
/* Line 1792 of yacc.c  */
#line 11084 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[(2) - (4)].num);
            lex->drop_if_exists= (yyvsp[(4) - (4)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1669:
/* Line 1792 of yacc.c  */
#line 11093 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1670:
/* Line 1792 of yacc.c  */
#line 11094 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1671:
/* Line 1792 of yacc.c  */
#line 11095 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (6)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= Alter_info::ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad);
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(5) - (6)].table), NULL,
                                                        TL_OPTION_UPDATING,
                                                        TL_READ_NO_INSERT,
                                                        MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
          }
    break;

  case 1672:
/* Line 1792 of yacc.c  */
#line 11110 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1673:
/* Line 1792 of yacc.c  */
#line 11112 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[(3) - (4)].num);
            lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1674:
/* Line 1792 of yacc.c  */
#line 11119 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[(4) - (6)].lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[(4) - (6)].lex_str), FALSE) != IDENT_NAME_OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(6) - (6)].lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (6)].num);
            spname= new sp_name(to_lex_cstring((yyvsp[(4) - (6)].lex_str)), (yyvsp[(6) - (6)].lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1675:
/* Line 1792 of yacc.c  */
#line 11142 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(4) - (4)].lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            spname= new sp_name(to_lex_cstring(db), (yyvsp[(4) - (4)].lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1676:
/* Line 1792 of yacc.c  */
#line 11174 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1677:
/* Line 1792 of yacc.c  */
#line 11186 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[(3) - (5)].num);
          }
    break;

  case 1678:
/* Line 1792 of yacc.c  */
#line 11192 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[(3) - (3)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1679:
/* Line 1792 of yacc.c  */
#line 11200 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1680:
/* Line 1792 of yacc.c  */
#line 11202 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
    break;

  case 1681:
/* Line 1792 of yacc.c  */
#line 11208 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1682:
/* Line 1792 of yacc.c  */
#line 11215 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
    break;

  case 1683:
/* Line 1792 of yacc.c  */
#line 11220 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
    break;

  case 1684:
/* Line 1792 of yacc.c  */
#line 11225 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_drop_server((yyvsp[(4) - (4)].lex_str), (yyvsp[(3) - (4)].num));
          }
    break;

  case 1687:
/* Line 1792 of yacc.c  */
#line 11239 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1688:
/* Line 1792 of yacc.c  */
#line 11250 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident_list).init(YYTHD->mem_root);
            if ((yyval.table_ident_list).push_back((yyvsp[(1) - (1)].table_ident)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1689:
/* Line 1792 of yacc.c  */
#line 11256 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident_list)= (yyvsp[(1) - (3)].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[(3) - (3)].table_ident)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1690:
/* Line 1792 of yacc.c  */
#line 11264 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1691:
/* Line 1792 of yacc.c  */
#line 11265 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1692:
/* Line 1792 of yacc.c  */
#line 11269 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1693:
/* Line 1792 of yacc.c  */
#line 11270 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1701:
/* Line 1792 of yacc.c  */
#line 11300 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].lock_type), (yyvsp[(3) - (8)].is_not_empty), (yyvsp[(5) - (8)].table), (yyvsp[(6) - (8)].string_list),
                                  (yyvsp[(7) - (8)].column_row_value_list_pair).column_list, (yyvsp[(7) - (8)].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[(8) - (8)].column_value_list_pair).column_list, (yyvsp[(8) - (8)].column_value_list_pair).value_list);
          }
    break;

  case 1702:
/* Line 1792 of yacc.c  */
#line 11315 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[(8) - (9)].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (9)].optimizer_hints), (yyvsp[(2) - (9)].lock_type), (yyvsp[(3) - (9)].is_not_empty), (yyvsp[(5) - (9)].table), (yyvsp[(6) - (9)].string_list),
                                  (yyvsp[(8) - (9)].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[(9) - (9)].column_value_list_pair).column_list, (yyvsp[(9) - (9)].column_value_list_pair).value_list);
          }
    break;

  case 1703:
/* Line 1792 of yacc.c  */
#line 11332 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].lock_type), (yyvsp[(3) - (8)].is_not_empty), (yyvsp[(5) - (8)].table), (yyvsp[(6) - (8)].string_list),
                                  (yyvsp[(7) - (8)].insert_from_subquery).column_list, NULL,
                                  (yyvsp[(7) - (8)].insert_from_subquery).insert_query_expression,
                                  (yyvsp[(8) - (8)].column_value_list_pair).column_list, (yyvsp[(8) - (8)].column_value_list_pair).value_list);
          }
    break;

  case 1704:
/* Line 1792 of yacc.c  */
#line 11347 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].lock_type), false, (yyvsp[(4) - (6)].table), (yyvsp[(5) - (6)].string_list),
                                  (yyvsp[(6) - (6)].column_row_value_list_pair).column_list, (yyvsp[(6) - (6)].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL, NULL);
          }
    break;

  case 1705:
/* Line 1792 of yacc.c  */
#line 11360 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[(7) - (7)].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (7)].optimizer_hints), (yyvsp[(2) - (7)].lock_type), false, (yyvsp[(4) - (7)].table), (yyvsp[(5) - (7)].string_list),
                                  (yyvsp[(7) - (7)].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL, NULL);
          }
    break;

  case 1706:
/* Line 1792 of yacc.c  */
#line 11375 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].lock_type), false, (yyvsp[(4) - (6)].table), (yyvsp[(5) - (6)].string_list),
                                  (yyvsp[(6) - (6)].insert_from_subquery).column_list, NULL,
                                  (yyvsp[(6) - (6)].insert_from_subquery).insert_query_expression,
                                  NULL, NULL);
          }
    break;

  case 1707:
/* Line 1792 of yacc.c  */
#line 11384 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
    break;

  case 1708:
/* Line 1792 of yacc.c  */
#line 11385 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1709:
/* Line 1792 of yacc.c  */
#line 11387 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER(ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
    break;

  case 1710:
/* Line 1792 of yacc.c  */
#line 11395 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1711:
/* Line 1792 of yacc.c  */
#line 11399 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[(1) - (1)].lock_type); }
    break;

  case 1712:
/* Line 1792 of yacc.c  */
#line 11401 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER(ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
    break;

  case 1715:
/* Line 1792 of yacc.c  */
#line 11418 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(1) - (1)].values_list);
          }
    break;

  case 1716:
/* Line 1792 of yacc.c  */
#line 11423 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(3) - (3)].values_list);
          }
    break;

  case 1717:
/* Line 1792 of yacc.c  */
#line 11428 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[(2) - (4)].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(4) - (4)].values_list);
          }
    break;

  case 1718:
/* Line 1792 of yacc.c  */
#line 11436 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_from_subquery).column_list= NEW_PTN PT_item_list;
            (yyval.insert_from_subquery).insert_query_expression= (yyvsp[(1) - (1)].insert_query_expression);
          }
    break;

  case 1719:
/* Line 1792 of yacc.c  */
#line 11441 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_from_subquery).column_list= NEW_PTN PT_item_list;
            (yyval.insert_from_subquery).insert_query_expression= (yyvsp[(3) - (3)].insert_query_expression);
          }
    break;

  case 1720:
/* Line 1792 of yacc.c  */
#line 11446 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_from_subquery).column_list= (yyvsp[(2) - (4)].item_list2);
            (yyval.insert_from_subquery).insert_query_expression= (yyvsp[(4) - (4)].insert_query_expression);
          }
    break;

  case 1721:
/* Line 1792 of yacc.c  */
#line 11454 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1722:
/* Line 1792 of yacc.c  */
#line 11460 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1723:
/* Line 1792 of yacc.c  */
#line 11469 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.values_list)= (yyvsp[(2) - (2)].values_list);
          }
    break;

  case 1724:
/* Line 1792 of yacc.c  */
#line 11476 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression)= NEW_PTN PT_insert_query_expression(false, (yyvsp[(1) - (2)].create_select), (yyvsp[(2) - (2)].union_list));
          }
    break;

  case 1725:
/* Line 1792 of yacc.c  */
#line 11480 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression)= NEW_PTN PT_insert_query_expression(true, (yyvsp[(2) - (4)].create_select), (yyvsp[(4) - (4)].node));
          }
    break;

  case 1728:
/* Line 1792 of yacc.c  */
#line 11492 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.values_list)->push_back(&(yyvsp[(3) - (3)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 1729:
/* Line 1792 of yacc.c  */
#line 11497 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[(1) - (1)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 1730:
/* Line 1792 of yacc.c  */
#line 11506 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1731:
/* Line 1792 of yacc.c  */
#line 11507 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1732:
/* Line 1792 of yacc.c  */
#line 11511 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1733:
/* Line 1792 of yacc.c  */
#line 11512 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1734:
/* Line 1792 of yacc.c  */
#line 11516 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 1735:
/* Line 1792 of yacc.c  */
#line 11521 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1737:
/* Line 1792 of yacc.c  */
#line 11531 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1738:
/* Line 1792 of yacc.c  */
#line 11537 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1740:
/* Line 1792 of yacc.c  */
#line 11547 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
    break;

  case 1741:
/* Line 1792 of yacc.c  */
#line 11554 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
    break;

  case 1742:
/* Line 1792 of yacc.c  */
#line 11559 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair)= (yyvsp[(5) - (5)].column_value_list_pair);
          }
    break;

  case 1743:
/* Line 1792 of yacc.c  */
#line 11576 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_update((yyvsp[(1) - (9)].optimizer_hints), (yyvsp[(2) - (9)].lock_type), (yyvsp[(3) - (9)].is_not_empty), (yyvsp[(4) - (9)].join_table_list), (yyvsp[(6) - (9)].column_value_list_pair).column_list, (yyvsp[(6) - (9)].column_value_list_pair).value_list,
                                  (yyvsp[(7) - (9)].item), (yyvsp[(8) - (9)].order), (yyvsp[(9) - (9)].item));
          }
    break;

  case 1744:
/* Line 1792 of yacc.c  */
#line 11584 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair)= (yyvsp[(1) - (3)].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[(3) - (3)].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[(3) - (3)].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1745:
/* Line 1792 of yacc.c  */
#line 11591 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[(1) - (1)].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[(1) - (1)].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1746:
/* Line 1792 of yacc.c  */
#line 11603 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_pair).column= (yyvsp[(1) - (3)].item);
            (yyval.column_value_pair).value= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1747:
/* Line 1792 of yacc.c  */
#line 11610 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1748:
/* Line 1792 of yacc.c  */
#line 11611 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1749:
/* Line 1792 of yacc.c  */
#line 11625 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete(YYTHD->mem_root, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].num), (yyvsp[(4) - (8)].table), (yyvsp[(5) - (8)].string_list), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].order), (yyvsp[(8) - (8)].item));
          }
    break;

  case 1750:
/* Line 1792 of yacc.c  */
#line 11634 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete((yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].num), (yyvsp[(3) - (6)].table_ident_list), (yyvsp[(5) - (6)].join_table_list), (yyvsp[(6) - (6)].item));
          }
    break;

  case 1751:
/* Line 1792 of yacc.c  */
#line 11644 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete((yyvsp[(1) - (7)].optimizer_hints), (yyvsp[(2) - (7)].num), (yyvsp[(4) - (7)].table_ident_list), (yyvsp[(6) - (7)].join_table_list), (yyvsp[(7) - (7)].item));
          }
    break;

  case 1754:
/* Line 1792 of yacc.c  */
#line 11655 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1755:
/* Line 1792 of yacc.c  */
#line 11656 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].opt_delete_option) | (yyvsp[(2) - (2)].num); }
    break;

  case 1756:
/* Line 1792 of yacc.c  */
#line 11660 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_QUICK; }
    break;

  case 1757:
/* Line 1792 of yacc.c  */
#line 11661 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
    break;

  case 1758:
/* Line 1792 of yacc.c  */
#line 11662 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
    break;

  case 1759:
/* Line 1792 of yacc.c  */
#line 11667 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1760:
/* Line 1792 of yacc.c  */
#line 11675 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1767:
/* Line 1792 of yacc.c  */
#line 11700 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
    break;

  case 1768:
/* Line 1792 of yacc.c  */
#line 11704 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
    break;

  case 1769:
/* Line 1792 of yacc.c  */
#line 11708 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
    break;

  case 1770:
/* Line 1792 of yacc.c  */
#line 11712 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
    break;

  case 1771:
/* Line 1792 of yacc.c  */
#line 11716 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
    break;

  case 1772:
/* Line 1792 of yacc.c  */
#line 11720 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
    break;

  case 1773:
/* Line 1792 of yacc.c  */
#line 11724 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
    break;

  case 1774:
/* Line 1792 of yacc.c  */
#line 11728 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
    break;

  case 1775:
/* Line 1792 of yacc.c  */
#line 11732 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
    break;

  case 1776:
/* Line 1792 of yacc.c  */
#line 11739 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
      Lex->query_id= 0;
    }
    break;

  case 1777:
/* Line 1792 of yacc.c  */
#line 11743 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
      int error;
      Lex->query_id= static_cast<my_thread_id>(my_strtoll10((yyvsp[(3) - (3)].lex_str).str, NULL, &error));
      if (error != 0)
        MYSQL_YYABORT;
    }
    break;

  case 1778:
/* Line 1792 of yacc.c  */
#line 11755 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
          }
    break;

  case 1780:
/* Line 1792 of yacc.c  */
#line 11764 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
               MYSQL_YYABORT;
           }
    break;

  case 1781:
/* Line 1792 of yacc.c  */
#line 11771 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
    break;

  case 1782:
/* Line 1792 of yacc.c  */
#line 11779 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
    break;

  case 1783:
/* Line 1792 of yacc.c  */
#line 11787 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= (yyvsp[(2) - (3)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
    break;

  case 1784:
/* Line 1792 of yacc.c  */
#line 11795 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
    break;

  case 1785:
/* Line 1792 of yacc.c  */
#line 11803 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1786:
/* Line 1792 of yacc.c  */
#line 11811 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
    break;

  case 1787:
/* Line 1792 of yacc.c  */
#line 11818 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[(2) - (3)].db_type); }
    break;

  case 1788:
/* Line 1792 of yacc.c  */
#line 11820 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->create_info.db_type= NULL; }
    break;

  case 1789:
/* Line 1792 of yacc.c  */
#line 11822 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[(5) - (6)].simple_string))
              (yyvsp[(4) - (6)].table)->change_db((yyvsp[(5) - (6)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(4) - (6)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1790:
/* Line 1792 of yacc.c  */
#line 11831 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1791:
/* Line 1792 of yacc.c  */
#line 11835 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1792:
/* Line 1792 of yacc.c  */
#line 11839 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1793:
/* Line 1792 of yacc.c  */
#line 11844 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (6)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(6) - (6)].limit_clause));
          }
    break;

  case 1794:
/* Line 1792 of yacc.c  */
#line 11849 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
    break;

  case 1795:
/* Line 1792 of yacc.c  */
#line 11854 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(6) - (7)].limit_clause));
          }
    break;

  case 1796:
/* Line 1792 of yacc.c  */
#line 11863 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(5) - (5)].item) != NULL)
              ITEMIZE((yyvsp[(5) - (5)].item), &(yyvsp[(5) - (5)].item));
            Select->set_where_cond((yyvsp[(5) - (5)].item));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[(4) - (5)].simple_string))
              (yyvsp[(3) - (5)].table)->change_db((yyvsp[(4) - (5)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(3) - (5)].table), SCH_STATISTICS))
              MYSQL_YYABORT;
          }
    break;

  case 1797:
/* Line 1792 of yacc.c  */
#line 11876 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
    break;

  case 1798:
/* Line 1792 of yacc.c  */
#line 11883 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
    break;

  case 1799:
/* Line 1792 of yacc.c  */
#line 11888 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            create_select_for_variable(&pc, "warning_count");
          }
    break;

  case 1800:
/* Line 1792 of yacc.c  */
#line 11894 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            create_select_for_variable(&pc, "error_count");
          }
    break;

  case 1801:
/* Line 1792 of yacc.c  */
#line 11900 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(2) - (2)].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          }
    break;

  case 1802:
/* Line 1792 of yacc.c  */
#line 11908 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(2) - (2)].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          }
    break;

  case 1803:
/* Line 1792 of yacc.c  */
#line 11916 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER(ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
    break;

  case 1804:
/* Line 1792 of yacc.c  */
#line 11924 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(4) - (4)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(4) - (4)].limit_clause));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
    break;

  case 1805:
/* Line 1792 of yacc.c  */
#line 11934 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (show_compatibility_56)
            {
              /* 5.6, DEPRECATED */
              lex->sql_command= SQLCOM_SHOW_STATUS;
              lex->option_type= (yyvsp[(1) - (3)].var_type);
              if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
                MYSQL_YYABORT;
            }
            else
            {
              Item *where_cond= Select->where_cond();
              Select->set_where_cond(NULL);

              if ((yyvsp[(1) - (3)].var_type) == OPT_SESSION)
              {
                /* 5.7, SUPPORTED */
                if (build_show_session_status((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
              else
              {
                /* 5.7, SUPPORTED */
                if (build_show_global_status((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
            }
          }
    break;

  case 1806:
/* Line 1792 of yacc.c  */
#line 11965 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
    break;

  case 1807:
/* Line 1792 of yacc.c  */
#line 11967 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (show_compatibility_56)
            {
              /* 5.6, DEPRECATED */
              lex->sql_command= SQLCOM_SHOW_VARIABLES;
              lex->option_type= (yyvsp[(1) - (3)].var_type);
              if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
                MYSQL_YYABORT;
            }
            else
            {
              Item *where_cond= Select->where_cond();
              Select->set_where_cond(NULL);

              if ((yyvsp[(1) - (3)].var_type) == OPT_SESSION)
              {
                /* 5.7, SUPPORTED */
                if (build_show_session_variables((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
              else
              {
                /* 5.7, SUPPORTED */
                if (build_show_global_variables((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
            }
          }
    break;

  case 1808:
/* Line 1792 of yacc.c  */
#line 11998 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              MYSQL_YYABORT;
          }
    break;

  case 1809:
/* Line 1792 of yacc.c  */
#line 12005 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              MYSQL_YYABORT;
          }
    break;

  case 1810:
/* Line 1792 of yacc.c  */
#line 12012 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            memset(curr_user, 0, sizeof(st_lex_user));
            lex->grant_user= curr_user;
          }
    break;

  case 1811:
/* Line 1792 of yacc.c  */
#line 12022 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[(3) - (3)].lex_user);
            lex->grant_user->auth= NULL_CSTR;
          }
    break;

  case 1812:
/* Line 1792 of yacc.c  */
#line 12029 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info.options=(yyvsp[(3) - (4)].num);
            Lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1813:
/* Line 1792 of yacc.c  */
#line 12035 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
    break;

  case 1814:
/* Line 1792 of yacc.c  */
#line 12044 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
    break;

  case 1815:
/* Line 1792 of yacc.c  */
#line 12052 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1816:
/* Line 1792 of yacc.c  */
#line 12056 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1817:
/* Line 1792 of yacc.c  */
#line 12060 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1818:
/* Line 1792 of yacc.c  */
#line 12067 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1819:
/* Line 1792 of yacc.c  */
#line 12074 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1820:
/* Line 1792 of yacc.c  */
#line 12080 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1821:
/* Line 1792 of yacc.c  */
#line 12087 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1822:
/* Line 1792 of yacc.c  */
#line 12094 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1823:
/* Line 1792 of yacc.c  */
#line 12099 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1824:
/* Line 1792 of yacc.c  */
#line 12104 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->spname= (yyvsp[(3) - (3)].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
    break;

  case 1825:
/* Line 1792 of yacc.c  */
#line 12109 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            lex->grant_user=(yyvsp[(4) - (4)].lex_user);
          }
    break;

  case 1826:
/* Line 1792 of yacc.c  */
#line 12118 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
    break;

  case 1827:
/* Line 1792 of yacc.c  */
#line 12120 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
    break;

  case 1828:
/* Line 1792 of yacc.c  */
#line 12122 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
    break;

  case 1833:
/* Line 1792 of yacc.c  */
#line 12136 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 1834:
/* Line 1792 of yacc.c  */
#line 12137 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1835:
/* Line 1792 of yacc.c  */
#line 12141 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->verbose=0; }
    break;

  case 1836:
/* Line 1792 of yacc.c  */
#line 12142 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->verbose=1; }
    break;

  case 1839:
/* Line 1792 of yacc.c  */
#line 12151 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1840:
/* Line 1792 of yacc.c  */
#line 12152 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1841:
/* Line 1792 of yacc.c  */
#line 12156 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1842:
/* Line 1792 of yacc.c  */
#line 12157 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[(2) - (2)].ulonglong_number); }
    break;

  case 1844:
/* Line 1792 of yacc.c  */
#line 12163 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1845:
/* Line 1792 of yacc.c  */
#line 12170 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Select->set_where_cond((yyvsp[(2) - (2)].item));
            if ((yyvsp[(2) - (2)].item))
              (yyvsp[(2) - (2)].item)->top_level_item();
          }
    break;

  case 1847:
/* Line 1792 of yacc.c  */
#line 12182 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1848:
/* Line 1792 of yacc.c  */
#line 12189 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (show_compatibility_56)
            {
              /*
                This parsed tree fragment is added as part of a
                SQLCOM_SHOW_STATUS or SQLCOM_SHOW_VARIABLES command.
              */
              ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

              Select->set_where_cond((yyvsp[(2) - (2)].item));
              if ((yyvsp[(2) - (2)].item))
                (yyvsp[(2) - (2)].item)->top_level_item();
            }
            else
            {
              /*
                This parsed tree fragment is used to build a
                SQLCOM_SELECT statement, see sql/sql_show_status.cc
              */
              Select->set_where_cond((yyvsp[(2) - (2)].item));
            }
          }
    break;

  case 1849:
/* Line 1792 of yacc.c  */
#line 12216 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->parsing_place= CTX_SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex->db= NULL;
            lex->verbose= 0;
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(2) - (2)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1850:
/* Line 1792 of yacc.c  */
#line 12226 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_SELECT_LIST);
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 1851:
/* Line 1792 of yacc.c  */
#line 12232 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->describe|= DESCRIBE_NORMAL;
          }
    break;

  case 1853:
/* Line 1792 of yacc.c  */
#line 12239 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].select)); }
    break;

  case 1854:
/* Line 1792 of yacc.c  */
#line 12240 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1855:
/* Line 1792 of yacc.c  */
#line 12241 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1856:
/* Line 1792 of yacc.c  */
#line 12242 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1857:
/* Line 1792 of yacc.c  */
#line 12243 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1858:
/* Line 1792 of yacc.c  */
#line 12245 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_EXPLAIN_OTHER;
            if (Lex->sphead)
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "non-standalone EXPLAIN FOR CONNECTION");
              MYSQL_YYABORT;
            }
            Lex->query_id= (my_thread_id)((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 1861:
/* Line 1792 of yacc.c  */
#line 12264 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1862:
/* Line 1792 of yacc.c  */
#line 12269 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            push_deprecated_warn_no_replacement(YYTHD, "EXTENDED");
          }
    break;

  case 1863:
/* Line 1792 of yacc.c  */
#line 12275 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            push_deprecated_warn_no_replacement(YYTHD, "PARTITIONS");
          }
    break;

  case 1864:
/* Line 1792 of yacc.c  */
#line 12281 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "JSON"))
            {
              if ((Lex->explain_format= new Explain_format_JSON) == NULL)
                MYSQL_YYABORT;
            }
            else if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "TRADITIONAL"))
            {
              if ((Lex->explain_format= new Explain_format_traditional) == NULL)
                MYSQL_YYABORT;
            }
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1865:
/* Line 1792 of yacc.c  */
#line 12301 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1866:
/* Line 1792 of yacc.c  */
#line 12302 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->wild= (yyvsp[(1) - (1)].string); }
    break;

  case 1867:
/* Line 1792 of yacc.c  */
#line 12304 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1868:
/* Line 1792 of yacc.c  */
#line 12318 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[(2) - (2)].num);
          }
    break;

  case 1869:
/* Line 1792 of yacc.c  */
#line 12325 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1870:
/* Line 1792 of yacc.c  */
#line 12330 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
    break;

  case 1871:
/* Line 1792 of yacc.c  */
#line 12339 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1872:
/* Line 1792 of yacc.c  */
#line 12340 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1874:
/* Line 1792 of yacc.c  */
#line 12345 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1875:
/* Line 1792 of yacc.c  */
#line 12347 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1876:
/* Line 1792 of yacc.c  */
#line 12358 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              my_syntax_error(ER(ER_NO_TABLES_USED));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1877:
/* Line 1792 of yacc.c  */
#line 12366 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1879:
/* Line 1792 of yacc.c  */
#line 12381 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1880:
/* Line 1792 of yacc.c  */
#line 12386 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ERROR_LOG; }
    break;

  case 1881:
/* Line 1792 of yacc.c  */
#line 12388 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ENGINE_LOG; }
    break;

  case 1882:
/* Line 1792 of yacc.c  */
#line 12390 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GENERAL_LOG; }
    break;

  case 1883:
/* Line 1792 of yacc.c  */
#line 12392 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLOW_LOG; }
    break;

  case 1884:
/* Line 1792 of yacc.c  */
#line 12394 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_BINARY_LOG; }
    break;

  case 1885:
/* Line 1792 of yacc.c  */
#line 12396 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_RELAY_LOG; }
    break;

  case 1886:
/* Line 1792 of yacc.c  */
#line 12398 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
    break;

  case 1887:
/* Line 1792 of yacc.c  */
#line 12400 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1888:
/* Line 1792 of yacc.c  */
#line 12402 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1889:
/* Line 1792 of yacc.c  */
#line 12404 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1890:
/* Line 1792 of yacc.c  */
#line 12406 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1891:
/* Line 1792 of yacc.c  */
#line 12408 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_DES_KEY_FILE; }
    break;

  case 1892:
/* Line 1792 of yacc.c  */
#line 12410 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1893:
/* Line 1792 of yacc.c  */
#line 12412 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
    break;

  case 1894:
/* Line 1792 of yacc.c  */
#line 12416 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1895:
/* Line 1792 of yacc.c  */
#line 12417 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1896:
/* Line 1792 of yacc.c  */
#line 12422 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
    break;

  case 1897:
/* Line 1792 of yacc.c  */
#line 12427 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1900:
/* Line 1792 of yacc.c  */
#line 12436 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1902:
/* Line 1792 of yacc.c  */
#line 12438 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1903:
/* Line 1792 of yacc.c  */
#line 12439 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE;}
    break;

  case 1904:
/* Line 1792 of yacc.c  */
#line 12443 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= false; }
    break;

  case 1905:
/* Line 1792 of yacc.c  */
#line 12444 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= true; }
    break;

  case 1906:
/* Line 1792 of yacc.c  */
#line 12449 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
    break;

  case 1907:
/* Line 1792 of yacc.c  */
#line 12455 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1909:
/* Line 1792 of yacc.c  */
#line 12464 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->to_log = (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1910:
/* Line 1792 of yacc.c  */
#line 12468 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front((yyvsp[(2) - (2)].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
    break;

  case 1911:
/* Line 1792 of yacc.c  */
#line 12482 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            LEX *lex=Lex;
            lex->kill_value_list.empty();
            lex->kill_value_list.push_front((yyvsp[(3) - (3)].item));
            lex->sql_command= SQLCOM_KILL;
          }
    break;

  case 1912:
/* Line 1792 of yacc.c  */
#line 12493 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1913:
/* Line 1792 of yacc.c  */
#line 12494 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1914:
/* Line 1792 of yacc.c  */
#line 12495 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1915:
/* Line 1792 of yacc.c  */
#line 12502 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1916:
/* Line 1792 of yacc.c  */
#line 12513 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0),
                       (yyvsp[(2) - (2)].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1917:
/* Line 1792 of yacc.c  */
#line 12525 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[(5) - (7)].num);
            lex->duplicates= DUP_ERROR;
            lex->set_ignore(false);
            if (!(lex->exchange= new sql_exchange((yyvsp[(7) - (7)].lex_str).str, 0, (yyvsp[(2) - (7)].filetype))))
              MYSQL_YYABORT;
          }
    break;

  case 1918:
/* Line 1792 of yacc.c  */
#line 12535 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            /* Fix lock for LOAD DATA CONCURRENT REPLACE */
            if (lex->duplicates == DUP_REPLACE && (yyvsp[(4) - (13)].lock_type) == TL_WRITE_CONCURRENT_INSERT)
              (yyvsp[(4) - (13)].lock_type)= TL_WRITE_DEFAULT;
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(12) - (13)].table), NULL, TL_OPTION_UPDATING,
                                           (yyvsp[(4) - (13)].lock_type), (yyvsp[(4) - (13)].lock_type) == TL_WRITE_LOW_PRIORITY ?
                                               MDL_SHARED_WRITE_LOW_PRIO :
                                               MDL_SHARED_WRITE, NULL, (yyvsp[(13) - (13)].string_list)))
              MYSQL_YYABORT;
            lex->load_field_list.empty();
            lex->load_update_list.empty();
            lex->load_value_list.empty();
            /* We can't give an error in the middle when using LOCAL files */
            if (lex->local_file && lex->duplicates == DUP_ERROR)
              lex->set_ignore(true);
          }
    break;

  case 1919:
/* Line 1792 of yacc.c  */
#line 12553 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(15) - (15)].charset); }
    break;

  case 1920:
/* Line 1792 of yacc.c  */
#line 12557 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->exchange->field.merge_field_separators((yyvsp[(18) - (22)].field_separators));
            Lex->exchange->line.merge_line_separators((yyvsp[(19) - (22)].line_separators));
          }
    break;

  case 1921:
/* Line 1792 of yacc.c  */
#line 12564 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_CSV; }
    break;

  case 1922:
/* Line 1792 of yacc.c  */
#line 12565 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_XML; }
    break;

  case 1923:
/* Line 1792 of yacc.c  */
#line 12569 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0;}
    break;

  case 1924:
/* Line 1792 of yacc.c  */
#line 12570 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1;}
    break;

  case 1925:
/* Line 1792 of yacc.c  */
#line 12574 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1926:
/* Line 1792 of yacc.c  */
#line 12575 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
    break;

  case 1927:
/* Line 1792 of yacc.c  */
#line 12576 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1928:
/* Line 1792 of yacc.c  */
#line 12580 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_ERROR; }
    break;

  case 1929:
/* Line 1792 of yacc.c  */
#line 12581 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_REPLACE; }
    break;

  case 1930:
/* Line 1792 of yacc.c  */
#line 12582 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->set_ignore(true); }
    break;

  case 1931:
/* Line 1792 of yacc.c  */
#line 12586 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.field_separators).cleanup(); }
    break;

  case 1932:
/* Line 1792 of yacc.c  */
#line 12587 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.field_separators)= (yyvsp[(2) - (2)].field_separators); }
    break;

  case 1933:
/* Line 1792 of yacc.c  */
#line 12592 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators)= (yyvsp[(1) - (2)].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[(2) - (2)].field_separators));
          }
    break;

  case 1935:
/* Line 1792 of yacc.c  */
#line 12601 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1936:
/* Line 1792 of yacc.c  */
#line 12606 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[(4) - (4)].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
    break;

  case 1937:
/* Line 1792 of yacc.c  */
#line 12612 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1938:
/* Line 1792 of yacc.c  */
#line 12617 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1939:
/* Line 1792 of yacc.c  */
#line 12624 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.line_separators).cleanup(); }
    break;

  case 1940:
/* Line 1792 of yacc.c  */
#line 12625 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.line_separators)= (yyvsp[(2) - (2)].line_separators); }
    break;

  case 1941:
/* Line 1792 of yacc.c  */
#line 12630 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators)= (yyvsp[(1) - (2)].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[(2) - (2)].line_separators));
          }
    break;

  case 1943:
/* Line 1792 of yacc.c  */
#line 12639 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1944:
/* Line 1792 of yacc.c  */
#line 12644 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1945:
/* Line 1792 of yacc.c  */
#line 12651 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1946:
/* Line 1792 of yacc.c  */
#line 12653 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->exchange->line.line_term = (yyvsp[(4) - (4)].string); }
    break;

  case 1948:
/* Line 1792 of yacc.c  */
#line 12658 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[(2) - (3)].lex_str).str);
          }
    break;

  case 1949:
/* Line 1792 of yacc.c  */
#line 12665 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1950:
/* Line 1792 of yacc.c  */
#line 12667 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1951:
/* Line 1792 of yacc.c  */
#line 12671 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1952:
/* Line 1792 of yacc.c  */
#line 12672 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1953:
/* Line 1792 of yacc.c  */
#line 12673 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1954:
/* Line 1792 of yacc.c  */
#line 12678 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->load_field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1955:
/* Line 1792 of yacc.c  */
#line 12680 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->load_field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1956:
/* Line 1792 of yacc.c  */
#line 12684 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 1957:
/* Line 1792 of yacc.c  */
#line 12686 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_user_var_as_out_param((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1958:
/* Line 1792 of yacc.c  */
#line 12694 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1959:
/* Line 1792 of yacc.c  */
#line 12695 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1962:
/* Line 1792 of yacc.c  */
#line 12705 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (3)].item), &(yyvsp[(1) - (3)].item));
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            LEX *lex= Lex;
            uint length= (uint) ((yylsp[(3) - (3)]).cpp.end - (yylsp[(2) - (3)]).cpp.start);
            String *val= new (YYTHD->mem_root) String((yylsp[(2) - (3)]).cpp.start,
                                                      length,
                                                      YYTHD->charset());
            if (val == NULL)
              MYSQL_YYABORT;
            if (lex->load_update_list.push_back((yyvsp[(1) - (3)].item)) ||
                lex->load_value_list.push_back((yyvsp[(3) - (3)].item)) ||
                lex->load_set_str_list.push_back(val))
                MYSQL_YYABORT;
            (yyvsp[(3) - (3)].item)->item_name.copy((yylsp[(2) - (3)]).cpp.start, length, YYTHD->charset());
          }
    break;

  case 1963:
/* Line 1792 of yacc.c  */
#line 12728 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1964:
/* Line 1792 of yacc.c  */
#line 12733 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1965:
/* Line 1792 of yacc.c  */
#line 12738 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1966:
/* Line 1792 of yacc.c  */
#line 12743 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (2)].text_literal), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1967:
/* Line 1792 of yacc.c  */
#line 12751 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String((yyvsp[(1) - (1)].lex_str).str,
                                             (yyvsp[(1) - (1)].lex_str).length,
                                             YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1968:
/* Line 1792 of yacc.c  */
#line 12759 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING s= Item_hex_string::make_hex_str((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            (yyval.string)= new (YYTHD->mem_root) String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1969:
/* Line 1792 of yacc.c  */
#line 12766 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING s= Item_bin_string::make_bin_str((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            (yyval.string)= new (YYTHD->mem_root) String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1970:
/* Line 1792 of yacc.c  */
#line 12776 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.param_marker)= NEW_PTN Item_param((yyloc),
                                   (uint) ((yylsp[(1) - (1)]).raw.start - YYLIP->get_buf()));
          }
    break;

  case 1971:
/* Line 1792 of yacc.c  */
#line 12783 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 1972:
/* Line 1792 of yacc.c  */
#line 12784 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(2) - (2)].item), &(yyval.item)); }
    break;

  case 1973:
/* Line 1792 of yacc.c  */
#line 12786 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            (yyvsp[(2) - (2)].item)->max_length++;
            (yyval.item)= ((Item_int *)(yyvsp[(2) - (2)].item))->neg();
          }
    break;

  case 1974:
/* Line 1792 of yacc.c  */
#line 12796 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].text_literal); }
    break;

  case 1977:
/* Line 1792 of yacc.c  */
#line 12800 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
            lip->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
    break;

  case 1978:
/* Line 1792 of yacc.c  */
#line 12813 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_int((yyloc), NAME_STRING("FALSE"), 0, 1);
          }
    break;

  case 1979:
/* Line 1792 of yacc.c  */
#line 12817 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_int((yyloc), NAME_STRING("TRUE"), 1, 1);
          }
    break;

  case 1980:
/* Line 1792 of yacc.c  */
#line 12821 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1981:
/* Line 1792 of yacc.c  */
#line 12825 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1982:
/* Line 1792 of yacc.c  */
#line 12829 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1983:
/* Line 1792 of yacc.c  */
#line 12833 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1984:
/* Line 1792 of yacc.c  */
#line 12840 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_num_literal_num((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1985:
/* Line 1792 of yacc.c  */
#line 12844 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_num_literal_num((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1986:
/* Line 1792 of yacc.c  */
#line 12848 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1987:
/* Line 1792 of yacc.c  */
#line 12852 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_decimal((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, YYCSCL);
          }
    break;

  case 1988:
/* Line 1792 of yacc.c  */
#line 12856 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_float((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1989:
/* Line 1792 of yacc.c  */
#line 12864 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
    break;

  case 1990:
/* Line 1792 of yacc.c  */
#line 12868 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
    break;

  case 1991:
/* Line 1792 of yacc.c  */
#line 12872 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
    break;

  case 1994:
/* Line 1792 of yacc.c  */
#line 12891 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), NULL, (yyvsp[(1) - (3)].lex_str).str);
          }
    break;

  case 1995:
/* Line 1792 of yacc.c  */
#line 12895 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), (yyvsp[(1) - (5)].lex_str).str, (yyvsp[(3) - (5)].lex_str).str);
          }
    break;

  case 1996:
/* Line 1792 of yacc.c  */
#line 12902 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].num));
          }
    break;

  case 1997:
/* Line 1792 of yacc.c  */
#line 12909 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1999:
/* Line 1792 of yacc.c  */
#line 12917 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 2001:
/* Line 1792 of yacc.c  */
#line 12925 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
          }
    break;

  case 2002:
/* Line 1792 of yacc.c  */
#line 12929 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), NULL, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);
          }
    break;

  case 2003:
/* Line 1792 of yacc.c  */
#line 12933 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[(1) - (5)].lex_str).str, (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
          }
    break;

  case 2004:
/* Line 1792 of yacc.c  */
#line 12939 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2005:
/* Line 1792 of yacc.c  */
#line 12941 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (5)].lex_str).str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, (yyvsp[(3) - (5)].lex_str).str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2006:
/* Line 1792 of yacc.c  */
#line 12957 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (3)].lex_str).str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 2007:
/* Line 1792 of yacc.c  */
#line 12966 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str);}
    break;

  case 2008:
/* Line 1792 of yacc.c  */
#line 12971 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (1)].lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2009:
/* Line 1792 of yacc.c  */
#line 12977 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
            else {
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (3)].lex_str)), to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
            }
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2010:
/* Line 1792 of yacc.c  */
#line 12987 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /* For Delphi */
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(2) - (2)].lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2011:
/* Line 1792 of yacc.c  */
#line 12997 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (2)].lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2012:
/* Line 1792 of yacc.c  */
#line 13003 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD, to_lex_cstring((yyvsp[(1) - (4)].lex_str)),
                                    to_lex_cstring((yyvsp[(3) - (4)].lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2013:
/* Line 1792 of yacc.c  */
#line 13013 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX_CSTRING db= { any_db, strlen(any_db) };
            (yyval.table)= new Table_ident(YYTHD, db, to_lex_cstring((yyvsp[(1) - (1)].lex_str)), 0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2014:
/* Line 1792 of yacc.c  */
#line 13022 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 2015:
/* Line 1792 of yacc.c  */
#line 13024 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[(1) - (1)].lex_str).str,
                                                     (yyvsp[(1) - (1)].lex_str).str+(yyvsp[(1) - (1)].lex_str).length,
                                                     (yyvsp[(1) - (1)].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[(1) - (1)].lex_str).length)
              {
                ErrConvString err((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2016:
/* Line 1792 of yacc.c  */
#line 13054 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!strcont((yyvsp[(1) - (1)].lex_str).str, "\n"))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 2017:
/* Line 1792 of yacc.c  */
#line 13067 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (strcont((yyvsp[(1) - (1)].lex_str).str, "."))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2018:
/* Line 1792 of yacc.c  */
#line 13080 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2019:
/* Line 1792 of yacc.c  */
#line 13096 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2020:
/* Line 1792 of yacc.c  */
#line 13112 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2021:
/* Line 1792 of yacc.c  */
#line 13128 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 2022:
/* Line 1792 of yacc.c  */
#line 13130 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 2023:
/* Line 1792 of yacc.c  */
#line 13140 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 2024:
/* Line 1792 of yacc.c  */
#line 13142 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 2025:
/* Line 1792 of yacc.c  */
#line 13152 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2026:
/* Line 1792 of yacc.c  */
#line 13153 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2027:
/* Line 1792 of yacc.c  */
#line 13154 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2028:
/* Line 1792 of yacc.c  */
#line 13159 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &(yyvsp[(1) - (1)].lex_str));

            (yyval.lex_user)->user.str= (yyvsp[(1) - (1)].lex_str).str;
            (yyval.lex_user)->user.length= (yyvsp[(1) - (1)].lex_str).length;
            (yyval.lex_user)->host.str= "%";
            (yyval.lex_user)->host.length= 1;
            (yyval.lex_user)->plugin= EMPTY_CSTR;
            (yyval.lex_user)->auth= NULL_CSTR;
            (yyval.lex_user)->uses_identified_by_clause= false;
            (yyval.lex_user)->uses_identified_with_clause= false;
            (yyval.lex_user)->uses_identified_by_password_clause= false;
            (yyval.lex_user)->uses_authentication_string_clause= false;

            if (check_string_char_length((yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2029:
/* Line 1792 of yacc.c  */
#line 13187 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &(yyvsp[(1) - (3)].lex_str));
            trim_whitespace(system_charset_info, &(yyvsp[(3) - (3)].lex_str));

            (yyval.lex_user)->user.str= (yyvsp[(1) - (3)].lex_str).str;
            (yyval.lex_user)->user.length= (yyvsp[(1) - (3)].lex_str).length;
            (yyval.lex_user)->host.str= (yyvsp[(3) - (3)].lex_str).str;
            (yyval.lex_user)->host.length= (yyvsp[(3) - (3)].lex_str).length;
            (yyval.lex_user)->plugin= EMPTY_CSTR;
            (yyval.lex_user)->auth= NULL_CSTR;
            (yyval.lex_user)->uses_identified_by_clause= false;
            (yyval.lex_user)->uses_identified_with_clause= false;
            (yyval.lex_user)->uses_identified_by_password_clause= false;
            (yyval.lex_user)->uses_authentication_string_clause= false;

            if (check_string_char_length((yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0) ||
                check_host_name((yyval.lex_user)->host))
              MYSQL_YYABORT;
            /*
              Convert hostname part of username to lowercase.
              It's OK to use in-place lowercase as long as
              the character set is utf8.
            */
            my_casedn_str(system_charset_info, (yyvsp[(3) - (3)].lex_str).str);
            (yyval.lex_user)->host.str= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 2030:
/* Line 1792 of yacc.c  */
#line 13224 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
    break;

  case 2031:
/* Line 1792 of yacc.c  */
#line 13238 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2032:
/* Line 1792 of yacc.c  */
#line 13239 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2033:
/* Line 1792 of yacc.c  */
#line 13240 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2034:
/* Line 1792 of yacc.c  */
#line 13241 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2035:
/* Line 1792 of yacc.c  */
#line 13242 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2036:
/* Line 1792 of yacc.c  */
#line 13243 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2037:
/* Line 1792 of yacc.c  */
#line 13244 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2038:
/* Line 1792 of yacc.c  */
#line 13245 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2039:
/* Line 1792 of yacc.c  */
#line 13246 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2040:
/* Line 1792 of yacc.c  */
#line 13247 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2041:
/* Line 1792 of yacc.c  */
#line 13248 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2042:
/* Line 1792 of yacc.c  */
#line 13249 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2043:
/* Line 1792 of yacc.c  */
#line 13250 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2044:
/* Line 1792 of yacc.c  */
#line 13251 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2045:
/* Line 1792 of yacc.c  */
#line 13252 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2046:
/* Line 1792 of yacc.c  */
#line 13253 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2047:
/* Line 1792 of yacc.c  */
#line 13254 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2048:
/* Line 1792 of yacc.c  */
#line 13255 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2049:
/* Line 1792 of yacc.c  */
#line 13256 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2050:
/* Line 1792 of yacc.c  */
#line 13257 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2051:
/* Line 1792 of yacc.c  */
#line 13258 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2052:
/* Line 1792 of yacc.c  */
#line 13259 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2053:
/* Line 1792 of yacc.c  */
#line 13260 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2054:
/* Line 1792 of yacc.c  */
#line 13261 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2055:
/* Line 1792 of yacc.c  */
#line 13262 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2056:
/* Line 1792 of yacc.c  */
#line 13263 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2057:
/* Line 1792 of yacc.c  */
#line 13264 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2058:
/* Line 1792 of yacc.c  */
#line 13265 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2059:
/* Line 1792 of yacc.c  */
#line 13266 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2060:
/* Line 1792 of yacc.c  */
#line 13267 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2061:
/* Line 1792 of yacc.c  */
#line 13268 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2062:
/* Line 1792 of yacc.c  */
#line 13269 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2063:
/* Line 1792 of yacc.c  */
#line 13270 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2064:
/* Line 1792 of yacc.c  */
#line 13271 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2065:
/* Line 1792 of yacc.c  */
#line 13272 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2066:
/* Line 1792 of yacc.c  */
#line 13273 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2067:
/* Line 1792 of yacc.c  */
#line 13274 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2068:
/* Line 1792 of yacc.c  */
#line 13275 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2069:
/* Line 1792 of yacc.c  */
#line 13276 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2070:
/* Line 1792 of yacc.c  */
#line 13277 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2071:
/* Line 1792 of yacc.c  */
#line 13278 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2072:
/* Line 1792 of yacc.c  */
#line 13279 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2073:
/* Line 1792 of yacc.c  */
#line 13280 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2074:
/* Line 1792 of yacc.c  */
#line 13281 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2075:
/* Line 1792 of yacc.c  */
#line 13282 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2076:
/* Line 1792 of yacc.c  */
#line 13283 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2077:
/* Line 1792 of yacc.c  */
#line 13284 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2078:
/* Line 1792 of yacc.c  */
#line 13285 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2079:
/* Line 1792 of yacc.c  */
#line 13286 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2080:
/* Line 1792 of yacc.c  */
#line 13287 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2081:
/* Line 1792 of yacc.c  */
#line 13288 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2082:
/* Line 1792 of yacc.c  */
#line 13289 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2083:
/* Line 1792 of yacc.c  */
#line 13290 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2084:
/* Line 1792 of yacc.c  */
#line 13291 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2085:
/* Line 1792 of yacc.c  */
#line 13292 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2086:
/* Line 1792 of yacc.c  */
#line 13293 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2087:
/* Line 1792 of yacc.c  */
#line 13294 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2088:
/* Line 1792 of yacc.c  */
#line 13304 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2089:
/* Line 1792 of yacc.c  */
#line 13305 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2090:
/* Line 1792 of yacc.c  */
#line 13306 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2091:
/* Line 1792 of yacc.c  */
#line 13307 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2092:
/* Line 1792 of yacc.c  */
#line 13308 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2093:
/* Line 1792 of yacc.c  */
#line 13309 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2094:
/* Line 1792 of yacc.c  */
#line 13310 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2095:
/* Line 1792 of yacc.c  */
#line 13311 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2096:
/* Line 1792 of yacc.c  */
#line 13312 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2097:
/* Line 1792 of yacc.c  */
#line 13313 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2098:
/* Line 1792 of yacc.c  */
#line 13314 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2099:
/* Line 1792 of yacc.c  */
#line 13315 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2100:
/* Line 1792 of yacc.c  */
#line 13316 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2101:
/* Line 1792 of yacc.c  */
#line 13317 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2102:
/* Line 1792 of yacc.c  */
#line 13318 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2103:
/* Line 1792 of yacc.c  */
#line 13319 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2104:
/* Line 1792 of yacc.c  */
#line 13320 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2105:
/* Line 1792 of yacc.c  */
#line 13321 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2106:
/* Line 1792 of yacc.c  */
#line 13322 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2107:
/* Line 1792 of yacc.c  */
#line 13323 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2108:
/* Line 1792 of yacc.c  */
#line 13324 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2109:
/* Line 1792 of yacc.c  */
#line 13325 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2110:
/* Line 1792 of yacc.c  */
#line 13326 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2111:
/* Line 1792 of yacc.c  */
#line 13327 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2112:
/* Line 1792 of yacc.c  */
#line 13328 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2113:
/* Line 1792 of yacc.c  */
#line 13329 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2114:
/* Line 1792 of yacc.c  */
#line 13330 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2115:
/* Line 1792 of yacc.c  */
#line 13331 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2116:
/* Line 1792 of yacc.c  */
#line 13332 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2117:
/* Line 1792 of yacc.c  */
#line 13333 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2118:
/* Line 1792 of yacc.c  */
#line 13334 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2119:
/* Line 1792 of yacc.c  */
#line 13335 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2120:
/* Line 1792 of yacc.c  */
#line 13336 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2121:
/* Line 1792 of yacc.c  */
#line 13337 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2122:
/* Line 1792 of yacc.c  */
#line 13338 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2123:
/* Line 1792 of yacc.c  */
#line 13339 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2124:
/* Line 1792 of yacc.c  */
#line 13340 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2125:
/* Line 1792 of yacc.c  */
#line 13341 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2126:
/* Line 1792 of yacc.c  */
#line 13342 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2127:
/* Line 1792 of yacc.c  */
#line 13343 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2128:
/* Line 1792 of yacc.c  */
#line 13344 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2129:
/* Line 1792 of yacc.c  */
#line 13345 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2130:
/* Line 1792 of yacc.c  */
#line 13346 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2131:
/* Line 1792 of yacc.c  */
#line 13347 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2132:
/* Line 1792 of yacc.c  */
#line 13348 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2133:
/* Line 1792 of yacc.c  */
#line 13349 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2134:
/* Line 1792 of yacc.c  */
#line 13350 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2135:
/* Line 1792 of yacc.c  */
#line 13351 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2136:
/* Line 1792 of yacc.c  */
#line 13356 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2137:
/* Line 1792 of yacc.c  */
#line 13357 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2138:
/* Line 1792 of yacc.c  */
#line 13358 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2139:
/* Line 1792 of yacc.c  */
#line 13359 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2140:
/* Line 1792 of yacc.c  */
#line 13360 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2141:
/* Line 1792 of yacc.c  */
#line 13361 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2142:
/* Line 1792 of yacc.c  */
#line 13362 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2143:
/* Line 1792 of yacc.c  */
#line 13363 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2144:
/* Line 1792 of yacc.c  */
#line 13364 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2145:
/* Line 1792 of yacc.c  */
#line 13365 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2146:
/* Line 1792 of yacc.c  */
#line 13366 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2147:
/* Line 1792 of yacc.c  */
#line 13367 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2148:
/* Line 1792 of yacc.c  */
#line 13368 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2149:
/* Line 1792 of yacc.c  */
#line 13369 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2150:
/* Line 1792 of yacc.c  */
#line 13370 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2151:
/* Line 1792 of yacc.c  */
#line 13371 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2152:
/* Line 1792 of yacc.c  */
#line 13372 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2153:
/* Line 1792 of yacc.c  */
#line 13373 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2154:
/* Line 1792 of yacc.c  */
#line 13374 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2155:
/* Line 1792 of yacc.c  */
#line 13375 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2156:
/* Line 1792 of yacc.c  */
#line 13376 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2157:
/* Line 1792 of yacc.c  */
#line 13377 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2158:
/* Line 1792 of yacc.c  */
#line 13378 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2159:
/* Line 1792 of yacc.c  */
#line 13379 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2160:
/* Line 1792 of yacc.c  */
#line 13380 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2161:
/* Line 1792 of yacc.c  */
#line 13381 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2162:
/* Line 1792 of yacc.c  */
#line 13382 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2163:
/* Line 1792 of yacc.c  */
#line 13383 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2164:
/* Line 1792 of yacc.c  */
#line 13384 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2165:
/* Line 1792 of yacc.c  */
#line 13385 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2166:
/* Line 1792 of yacc.c  */
#line 13386 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2167:
/* Line 1792 of yacc.c  */
#line 13387 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2168:
/* Line 1792 of yacc.c  */
#line 13388 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2169:
/* Line 1792 of yacc.c  */
#line 13389 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2170:
/* Line 1792 of yacc.c  */
#line 13390 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2171:
/* Line 1792 of yacc.c  */
#line 13391 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2172:
/* Line 1792 of yacc.c  */
#line 13392 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2173:
/* Line 1792 of yacc.c  */
#line 13393 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2174:
/* Line 1792 of yacc.c  */
#line 13394 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2175:
/* Line 1792 of yacc.c  */
#line 13395 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2176:
/* Line 1792 of yacc.c  */
#line 13396 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2177:
/* Line 1792 of yacc.c  */
#line 13397 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2178:
/* Line 1792 of yacc.c  */
#line 13398 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2179:
/* Line 1792 of yacc.c  */
#line 13399 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2180:
/* Line 1792 of yacc.c  */
#line 13400 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2181:
/* Line 1792 of yacc.c  */
#line 13401 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2182:
/* Line 1792 of yacc.c  */
#line 13402 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2183:
/* Line 1792 of yacc.c  */
#line 13403 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2184:
/* Line 1792 of yacc.c  */
#line 13404 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2185:
/* Line 1792 of yacc.c  */
#line 13405 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2186:
/* Line 1792 of yacc.c  */
#line 13406 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2187:
/* Line 1792 of yacc.c  */
#line 13407 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2188:
/* Line 1792 of yacc.c  */
#line 13408 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2189:
/* Line 1792 of yacc.c  */
#line 13409 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2190:
/* Line 1792 of yacc.c  */
#line 13410 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2191:
/* Line 1792 of yacc.c  */
#line 13411 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2192:
/* Line 1792 of yacc.c  */
#line 13412 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2193:
/* Line 1792 of yacc.c  */
#line 13413 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2194:
/* Line 1792 of yacc.c  */
#line 13414 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2195:
/* Line 1792 of yacc.c  */
#line 13415 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2196:
/* Line 1792 of yacc.c  */
#line 13416 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2197:
/* Line 1792 of yacc.c  */
#line 13417 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2198:
/* Line 1792 of yacc.c  */
#line 13418 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2199:
/* Line 1792 of yacc.c  */
#line 13419 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2200:
/* Line 1792 of yacc.c  */
#line 13420 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2201:
/* Line 1792 of yacc.c  */
#line 13421 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2202:
/* Line 1792 of yacc.c  */
#line 13422 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2203:
/* Line 1792 of yacc.c  */
#line 13423 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2204:
/* Line 1792 of yacc.c  */
#line 13424 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2205:
/* Line 1792 of yacc.c  */
#line 13425 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2206:
/* Line 1792 of yacc.c  */
#line 13426 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2207:
/* Line 1792 of yacc.c  */
#line 13427 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2208:
/* Line 1792 of yacc.c  */
#line 13428 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2209:
/* Line 1792 of yacc.c  */
#line 13429 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2210:
/* Line 1792 of yacc.c  */
#line 13430 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2211:
/* Line 1792 of yacc.c  */
#line 13431 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2212:
/* Line 1792 of yacc.c  */
#line 13432 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2213:
/* Line 1792 of yacc.c  */
#line 13433 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2214:
/* Line 1792 of yacc.c  */
#line 13434 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2215:
/* Line 1792 of yacc.c  */
#line 13435 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2216:
/* Line 1792 of yacc.c  */
#line 13436 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2217:
/* Line 1792 of yacc.c  */
#line 13437 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2218:
/* Line 1792 of yacc.c  */
#line 13438 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2219:
/* Line 1792 of yacc.c  */
#line 13439 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2220:
/* Line 1792 of yacc.c  */
#line 13440 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2221:
/* Line 1792 of yacc.c  */
#line 13441 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2222:
/* Line 1792 of yacc.c  */
#line 13442 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2223:
/* Line 1792 of yacc.c  */
#line 13443 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2224:
/* Line 1792 of yacc.c  */
#line 13444 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2225:
/* Line 1792 of yacc.c  */
#line 13445 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2226:
/* Line 1792 of yacc.c  */
#line 13446 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2227:
/* Line 1792 of yacc.c  */
#line 13447 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2228:
/* Line 1792 of yacc.c  */
#line 13448 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2229:
/* Line 1792 of yacc.c  */
#line 13449 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2230:
/* Line 1792 of yacc.c  */
#line 13450 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2231:
/* Line 1792 of yacc.c  */
#line 13451 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2232:
/* Line 1792 of yacc.c  */
#line 13452 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2233:
/* Line 1792 of yacc.c  */
#line 13453 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2234:
/* Line 1792 of yacc.c  */
#line 13454 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2235:
/* Line 1792 of yacc.c  */
#line 13455 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2236:
/* Line 1792 of yacc.c  */
#line 13456 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2237:
/* Line 1792 of yacc.c  */
#line 13457 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2238:
/* Line 1792 of yacc.c  */
#line 13458 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2239:
/* Line 1792 of yacc.c  */
#line 13459 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2240:
/* Line 1792 of yacc.c  */
#line 13460 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2241:
/* Line 1792 of yacc.c  */
#line 13461 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2242:
/* Line 1792 of yacc.c  */
#line 13462 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2243:
/* Line 1792 of yacc.c  */
#line 13463 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2244:
/* Line 1792 of yacc.c  */
#line 13464 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2245:
/* Line 1792 of yacc.c  */
#line 13465 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2246:
/* Line 1792 of yacc.c  */
#line 13466 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2247:
/* Line 1792 of yacc.c  */
#line 13467 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2248:
/* Line 1792 of yacc.c  */
#line 13468 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2249:
/* Line 1792 of yacc.c  */
#line 13469 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2250:
/* Line 1792 of yacc.c  */
#line 13470 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2251:
/* Line 1792 of yacc.c  */
#line 13471 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2252:
/* Line 1792 of yacc.c  */
#line 13472 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2253:
/* Line 1792 of yacc.c  */
#line 13473 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2254:
/* Line 1792 of yacc.c  */
#line 13474 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2255:
/* Line 1792 of yacc.c  */
#line 13475 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2256:
/* Line 1792 of yacc.c  */
#line 13476 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2257:
/* Line 1792 of yacc.c  */
#line 13477 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2258:
/* Line 1792 of yacc.c  */
#line 13478 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2259:
/* Line 1792 of yacc.c  */
#line 13479 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2260:
/* Line 1792 of yacc.c  */
#line 13480 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2261:
/* Line 1792 of yacc.c  */
#line 13481 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2262:
/* Line 1792 of yacc.c  */
#line 13482 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2263:
/* Line 1792 of yacc.c  */
#line 13483 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2264:
/* Line 1792 of yacc.c  */
#line 13484 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2265:
/* Line 1792 of yacc.c  */
#line 13485 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2266:
/* Line 1792 of yacc.c  */
#line 13486 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2267:
/* Line 1792 of yacc.c  */
#line 13487 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2268:
/* Line 1792 of yacc.c  */
#line 13488 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2269:
/* Line 1792 of yacc.c  */
#line 13489 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2270:
/* Line 1792 of yacc.c  */
#line 13490 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2271:
/* Line 1792 of yacc.c  */
#line 13491 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2272:
/* Line 1792 of yacc.c  */
#line 13492 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2273:
/* Line 1792 of yacc.c  */
#line 13493 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2274:
/* Line 1792 of yacc.c  */
#line 13494 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2275:
/* Line 1792 of yacc.c  */
#line 13495 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2276:
/* Line 1792 of yacc.c  */
#line 13496 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2277:
/* Line 1792 of yacc.c  */
#line 13497 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2278:
/* Line 1792 of yacc.c  */
#line 13498 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2279:
/* Line 1792 of yacc.c  */
#line 13499 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2280:
/* Line 1792 of yacc.c  */
#line 13500 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2281:
/* Line 1792 of yacc.c  */
#line 13501 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2282:
/* Line 1792 of yacc.c  */
#line 13502 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2283:
/* Line 1792 of yacc.c  */
#line 13503 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2284:
/* Line 1792 of yacc.c  */
#line 13504 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2285:
/* Line 1792 of yacc.c  */
#line 13505 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2286:
/* Line 1792 of yacc.c  */
#line 13506 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2287:
/* Line 1792 of yacc.c  */
#line 13507 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2288:
/* Line 1792 of yacc.c  */
#line 13508 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2289:
/* Line 1792 of yacc.c  */
#line 13509 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2290:
/* Line 1792 of yacc.c  */
#line 13510 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2291:
/* Line 1792 of yacc.c  */
#line 13511 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2292:
/* Line 1792 of yacc.c  */
#line 13512 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2293:
/* Line 1792 of yacc.c  */
#line 13513 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2294:
/* Line 1792 of yacc.c  */
#line 13514 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2295:
/* Line 1792 of yacc.c  */
#line 13515 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2296:
/* Line 1792 of yacc.c  */
#line 13516 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2297:
/* Line 1792 of yacc.c  */
#line 13517 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2298:
/* Line 1792 of yacc.c  */
#line 13518 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2299:
/* Line 1792 of yacc.c  */
#line 13519 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2300:
/* Line 1792 of yacc.c  */
#line 13520 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2301:
/* Line 1792 of yacc.c  */
#line 13521 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2302:
/* Line 1792 of yacc.c  */
#line 13522 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2303:
/* Line 1792 of yacc.c  */
#line 13523 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2304:
/* Line 1792 of yacc.c  */
#line 13524 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2305:
/* Line 1792 of yacc.c  */
#line 13525 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2306:
/* Line 1792 of yacc.c  */
#line 13526 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2307:
/* Line 1792 of yacc.c  */
#line 13527 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2308:
/* Line 1792 of yacc.c  */
#line 13528 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2309:
/* Line 1792 of yacc.c  */
#line 13529 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2310:
/* Line 1792 of yacc.c  */
#line 13530 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2311:
/* Line 1792 of yacc.c  */
#line 13531 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2312:
/* Line 1792 of yacc.c  */
#line 13532 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2313:
/* Line 1792 of yacc.c  */
#line 13533 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2314:
/* Line 1792 of yacc.c  */
#line 13534 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2315:
/* Line 1792 of yacc.c  */
#line 13535 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2316:
/* Line 1792 of yacc.c  */
#line 13536 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2317:
/* Line 1792 of yacc.c  */
#line 13537 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2318:
/* Line 1792 of yacc.c  */
#line 13538 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2319:
/* Line 1792 of yacc.c  */
#line 13539 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2320:
/* Line 1792 of yacc.c  */
#line 13540 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2321:
/* Line 1792 of yacc.c  */
#line 13541 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2322:
/* Line 1792 of yacc.c  */
#line 13542 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2323:
/* Line 1792 of yacc.c  */
#line 13543 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2324:
/* Line 1792 of yacc.c  */
#line 13544 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2325:
/* Line 1792 of yacc.c  */
#line 13545 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2326:
/* Line 1792 of yacc.c  */
#line 13546 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2327:
/* Line 1792 of yacc.c  */
#line 13547 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2328:
/* Line 1792 of yacc.c  */
#line 13548 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2329:
/* Line 1792 of yacc.c  */
#line 13549 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2330:
/* Line 1792 of yacc.c  */
#line 13550 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2331:
/* Line 1792 of yacc.c  */
#line 13551 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2332:
/* Line 1792 of yacc.c  */
#line 13552 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2333:
/* Line 1792 of yacc.c  */
#line 13553 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2334:
/* Line 1792 of yacc.c  */
#line 13554 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2335:
/* Line 1792 of yacc.c  */
#line 13555 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2336:
/* Line 1792 of yacc.c  */
#line 13556 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2337:
/* Line 1792 of yacc.c  */
#line 13557 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2338:
/* Line 1792 of yacc.c  */
#line 13558 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2339:
/* Line 1792 of yacc.c  */
#line 13559 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2340:
/* Line 1792 of yacc.c  */
#line 13560 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2341:
/* Line 1792 of yacc.c  */
#line 13561 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2342:
/* Line 1792 of yacc.c  */
#line 13562 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2343:
/* Line 1792 of yacc.c  */
#line 13563 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2344:
/* Line 1792 of yacc.c  */
#line 13564 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2345:
/* Line 1792 of yacc.c  */
#line 13565 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2346:
/* Line 1792 of yacc.c  */
#line 13566 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2347:
/* Line 1792 of yacc.c  */
#line 13567 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2348:
/* Line 1792 of yacc.c  */
#line 13568 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2349:
/* Line 1792 of yacc.c  */
#line 13569 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2350:
/* Line 1792 of yacc.c  */
#line 13570 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2351:
/* Line 1792 of yacc.c  */
#line 13571 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2352:
/* Line 1792 of yacc.c  */
#line 13572 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2353:
/* Line 1792 of yacc.c  */
#line 13573 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2354:
/* Line 1792 of yacc.c  */
#line 13574 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2355:
/* Line 1792 of yacc.c  */
#line 13575 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2356:
/* Line 1792 of yacc.c  */
#line 13576 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2357:
/* Line 1792 of yacc.c  */
#line 13577 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2358:
/* Line 1792 of yacc.c  */
#line 13578 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2359:
/* Line 1792 of yacc.c  */
#line 13579 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2360:
/* Line 1792 of yacc.c  */
#line 13580 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2361:
/* Line 1792 of yacc.c  */
#line 13581 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2362:
/* Line 1792 of yacc.c  */
#line 13582 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2363:
/* Line 1792 of yacc.c  */
#line 13583 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2364:
/* Line 1792 of yacc.c  */
#line 13584 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2365:
/* Line 1792 of yacc.c  */
#line 13585 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2366:
/* Line 1792 of yacc.c  */
#line 13586 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2367:
/* Line 1792 of yacc.c  */
#line 13587 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2368:
/* Line 1792 of yacc.c  */
#line 13588 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2369:
/* Line 1792 of yacc.c  */
#line 13589 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2370:
/* Line 1792 of yacc.c  */
#line 13590 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2371:
/* Line 1792 of yacc.c  */
#line 13591 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2372:
/* Line 1792 of yacc.c  */
#line 13592 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2373:
/* Line 1792 of yacc.c  */
#line 13593 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2374:
/* Line 1792 of yacc.c  */
#line 13594 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2375:
/* Line 1792 of yacc.c  */
#line 13595 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2376:
/* Line 1792 of yacc.c  */
#line 13596 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2377:
/* Line 1792 of yacc.c  */
#line 13597 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2378:
/* Line 1792 of yacc.c  */
#line 13598 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2379:
/* Line 1792 of yacc.c  */
#line 13599 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2380:
/* Line 1792 of yacc.c  */
#line 13600 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2381:
/* Line 1792 of yacc.c  */
#line 13601 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2382:
/* Line 1792 of yacc.c  */
#line 13602 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2383:
/* Line 1792 of yacc.c  */
#line 13603 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2384:
/* Line 1792 of yacc.c  */
#line 13604 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2385:
/* Line 1792 of yacc.c  */
#line 13605 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2386:
/* Line 1792 of yacc.c  */
#line 13606 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2387:
/* Line 1792 of yacc.c  */
#line 13607 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2388:
/* Line 1792 of yacc.c  */
#line 13608 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2389:
/* Line 1792 of yacc.c  */
#line 13609 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2390:
/* Line 1792 of yacc.c  */
#line 13610 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2391:
/* Line 1792 of yacc.c  */
#line 13611 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2392:
/* Line 1792 of yacc.c  */
#line 13612 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2393:
/* Line 1792 of yacc.c  */
#line 13613 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2394:
/* Line 1792 of yacc.c  */
#line 13614 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2395:
/* Line 1792 of yacc.c  */
#line 13615 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2396:
/* Line 1792 of yacc.c  */
#line 13616 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2397:
/* Line 1792 of yacc.c  */
#line 13617 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2398:
/* Line 1792 of yacc.c  */
#line 13618 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2399:
/* Line 1792 of yacc.c  */
#line 13619 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2400:
/* Line 1792 of yacc.c  */
#line 13620 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2401:
/* Line 1792 of yacc.c  */
#line 13621 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2402:
/* Line 1792 of yacc.c  */
#line 13622 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2403:
/* Line 1792 of yacc.c  */
#line 13623 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2404:
/* Line 1792 of yacc.c  */
#line 13624 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2405:
/* Line 1792 of yacc.c  */
#line 13625 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2406:
/* Line 1792 of yacc.c  */
#line 13626 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2407:
/* Line 1792 of yacc.c  */
#line 13627 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2408:
/* Line 1792 of yacc.c  */
#line 13639 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].start_option_value_list));
          }
    break;

  case 2409:
/* Line 1792 of yacc.c  */
#line 13648 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[(1) - (2)].option_value_no_option_type), (yylsp[(1) - (2)]), (yyvsp[(2) - (2)].option_value_list));
          }
    break;

  case 2410:
/* Line 1792 of yacc.c  */
#line 13652 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[(2) - (2)].transaction_characteristics), (yylsp[(2) - (2)]));
          }
    break;

  case 2411:
/* Line 1792 of yacc.c  */
#line 13656 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[(1) - (2)].var_type), (yyvsp[(2) - (2)].start_option_value_list_following_option_type));
          }
    break;

  case 2412:
/* Line 1792 of yacc.c  */
#line 13660 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[(3) - (3)].simple_string), (yylsp[(3) - (3)]));
          }
    break;

  case 2413:
/* Line 1792 of yacc.c  */
#line 13664 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "SET PASSWORD = "
                                 "PASSWORD('<plaintext_password>')",
                                 "SET PASSWORD = '<plaintext_password>'");
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[(5) - (6)].simple_string), (yylsp[(5) - (6)]));
          }
    break;

  case 2414:
/* Line 1792 of yacc.c  */
#line 13671 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[(3) - (5)].lex_user), (yyvsp[(5) - (5)].simple_string), (yylsp[(5) - (5)]));
          }
    break;

  case 2415:
/* Line 1792 of yacc.c  */
#line 13675 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "SET PASSWORD FOR <user> = "
                                 "PASSWORD('<plaintext_password>')",
                                 "SET PASSWORD FOR <user> = "
                                 "'<plaintext_password>'");
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[(3) - (8)].lex_user), (yyvsp[(7) - (8)].simple_string), (yylsp[(7) - (8)]));
          }
    break;

  case 2416:
/* Line 1792 of yacc.c  */
#line 13688 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[(1) - (2)].option_value_following_option_type),
                                                                          (yylsp[(1) - (2)]),
                                                                          (yyvsp[(2) - (2)].option_value_list));
          }
    break;

  case 2417:
/* Line 1792 of yacc.c  */
#line 13695 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[(2) - (2)].transaction_characteristics),
                                                                           (yylsp[(2) - (2)]));
          }
    break;

  case 2418:
/* Line 1792 of yacc.c  */
#line 13704 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.option_value_list)= NULL; }
    break;

  case 2419:
/* Line 1792 of yacc.c  */
#line 13705 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.option_value_list)= (yyvsp[(2) - (2)].option_value_list); }
    break;

  case 2420:
/* Line 1792 of yacc.c  */
#line 13711 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[(0) - (1)]), (yyvsp[(1) - (1)].node), (yylsp[(1) - (1)]));
          }
    break;

  case 2421:
/* Line 1792 of yacc.c  */
#line 13715 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[(1) - (3)].option_value_list), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].node), (yylsp[(3) - (3)]));
          }
    break;

  case 2422:
/* Line 1792 of yacc.c  */
#line 13723 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[(1) - (2)].var_type), (yyvsp[(2) - (2)].option_value_following_option_type));
          }
    break;

  case 2423:
/* Line 1792 of yacc.c  */
#line 13726 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].option_value_no_option_type); }
    break;

  case 2424:
/* Line 1792 of yacc.c  */
#line 13730 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2425:
/* Line 1792 of yacc.c  */
#line 13731 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2426:
/* Line 1792 of yacc.c  */
#line 13732 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2427:
/* Line 1792 of yacc.c  */
#line 13736 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2428:
/* Line 1792 of yacc.c  */
#line 13737 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2429:
/* Line 1792 of yacc.c  */
#line 13738 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2430:
/* Line 1792 of yacc.c  */
#line 13739 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2431:
/* Line 1792 of yacc.c  */
#line 13743 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2432:
/* Line 1792 of yacc.c  */
#line 13744 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2433:
/* Line 1792 of yacc.c  */
#line 13745 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2434:
/* Line 1792 of yacc.c  */
#line 13746 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2435:
/* Line 1792 of yacc.c  */
#line 13752 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[(1) - (3)].internal_variable_name), (yyvsp[(3) - (3)].item));
          }
    break;

  case 2436:
/* Line 1792 of yacc.c  */
#line 13762 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[(1) - (3)].internal_variable_name), (yyvsp[(3) - (3)].item), (yylsp[(3) - (3)]));
          }
    break;

  case 2437:
/* Line 1792 of yacc.c  */
#line 13766 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[(2) - (4)].lex_str), (yyvsp[(4) - (4)].item));
          }
    break;

  case 2438:
/* Line 1792 of yacc.c  */
#line 13770 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[(3) - (6)].var_type), (yyvsp[(4) - (6)].internal_variable_name), (yyvsp[(6) - (6)].item));
          }
    break;

  case 2439:
/* Line 1792 of yacc.c  */
#line 13774 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[(2) - (2)].charset));
          }
    break;

  case 2440:
/* Line 1792 of yacc.c  */
#line 13778 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[(2) - (3)]));
          }
    break;

  case 2441:
/* Line 1792 of yacc.c  */
#line 13785 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names_charset((yyvsp[(2) - (3)].charset), (yyvsp[(3) - (3)].charset));
          }
    break;

  case 2442:
/* Line 1792 of yacc.c  */
#line 13792 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d((yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 2443:
/* Line 1792 of yacc.c  */
#line 13796 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), (yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2444:
/* Line 1792 of yacc.c  */
#line 13800 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2445:
/* Line 1792 of yacc.c  */
#line 13807 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[(1) - (2)].transaction_access_mode), (yyvsp[(2) - (2)].isolation_level));
          }
    break;

  case 2446:
/* Line 1792 of yacc.c  */
#line 13811 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[(1) - (2)].isolation_level), (yyvsp[(2) - (2)].transaction_access_mode));
          }
    break;

  case 2447:
/* Line 1792 of yacc.c  */
#line 13818 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[(1) - (1)].num));
          }
    break;

  case 2448:
/* Line 1792 of yacc.c  */
#line 13824 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.transaction_access_mode)= NULL; }
    break;

  case 2449:
/* Line 1792 of yacc.c  */
#line 13825 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.transaction_access_mode)= (yyvsp[(2) - (2)].transaction_access_mode); }
    break;

  case 2450:
/* Line 1792 of yacc.c  */
#line 13830 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[(3) - (3)].tx_isolation));
          }
    break;

  case 2451:
/* Line 1792 of yacc.c  */
#line 13836 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.isolation_level)= NULL; }
    break;

  case 2452:
/* Line 1792 of yacc.c  */
#line 13837 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.isolation_level)= (yyvsp[(2) - (2)].isolation_level); }
    break;

  case 2453:
/* Line 1792 of yacc.c  */
#line 13841 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= true; }
    break;

  case 2454:
/* Line 1792 of yacc.c  */
#line 13842 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= false; }
    break;

  case 2455:
/* Line 1792 of yacc.c  */
#line 13846 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 2456:
/* Line 1792 of yacc.c  */
#line 13847 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 2457:
/* Line 1792 of yacc.c  */
#line 13848 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 2458:
/* Line 1792 of yacc.c  */
#line 13849 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 2459:
/* Line 1792 of yacc.c  */
#line 13854 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_string)=(yyvsp[(1) - (1)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2461:
/* Line 1792 of yacc.c  */
#line 13863 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 2462:
/* Line 1792 of yacc.c  */
#line 13865 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON",  2, system_charset_info);
          }
    break;

  case 2463:
/* Line 1792 of yacc.c  */
#line 13869 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
    break;

  case 2464:
/* Line 1792 of yacc.c  */
#line 13873 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
    break;

  case 2465:
/* Line 1792 of yacc.c  */
#line 13882 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
    break;

  case 2466:
/* Line 1792 of yacc.c  */
#line 13893 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2471:
/* Line 1792 of yacc.c  */
#line 13908 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[(3) - (3)].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), (yyvsp[(2) - (3)].lex_str_ptr), 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
    break;

  case 2472:
/* Line 1792 of yacc.c  */
#line 13935 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ_NO_INSERT; }
    break;

  case 2473:
/* Line 1792 of yacc.c  */
#line 13936 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_WRITE_DEFAULT; }
    break;

  case 2474:
/* Line 1792 of yacc.c  */
#line 13938 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
    break;

  case 2475:
/* Line 1792 of yacc.c  */
#line 13942 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 2476:
/* Line 1792 of yacc.c  */
#line 13947 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
    break;

  case 2477:
/* Line 1792 of yacc.c  */
#line 13958 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2478:
/* Line 1792 of yacc.c  */
#line 13964 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.statement)= NEW_PTN PT_shutdown();
          }
    break;

  case 2479:
/* Line 1792 of yacc.c  */
#line 13972 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.statement)= NEW_PTN PT_alter_instance((yyvsp[(3) - (3)].alter_instance_action));
          }
    break;

  case 2480:
/* Line 1792 of yacc.c  */
#line 13979 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[(2) - (4)].lex_str).str, "INNODB"))
            {
              (yyval.alter_instance_action)= ROTATE_INNODB_MASTER_KEY;
            }
            else
            {
              YYTHD->parse_error_at((yylsp[(2) - (4)]), ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2481:
/* Line 1792 of yacc.c  */
#line 13998 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select()->add_table_to_list(thd, (yyvsp[(2) - (4)].table), (yyvsp[(4) - (4)].lex_str_ptr), 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_open();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2482:
/* Line 1792 of yacc.c  */
#line 14014 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select()->add_table_to_list(thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_close();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2483:
/* Line 1792 of yacc.c  */
#line 14032 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                     /* #4 */
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            Item *one= new (YYTHD->mem_root) Item_int((int32) 1);
            if (one == NULL)
              MYSQL_YYABORT;
            lex->current_select()->select_limit= one;
            lex->current_select()->offset_limit= 0;
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2484:
/* Line 1792 of yacc.c  */
#line 14052 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].item) != NULL)
              ITEMIZE((yyvsp[(6) - (7)].item), &(yyvsp[(6) - (7)].item));
            Select->set_where_cond((yyvsp[(6) - (7)].item));

            if ((yyvsp[(7) - (7)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(7) - (7)].limit_clause));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_read((yyvsp[(5) - (7)].ha_read_mode),
                                  lex->ident.str, lex->handler_insert_list,
                                  thd->m_parser_state->m_yacc.m_ha_rkey_mode);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2485:
/* Line 1792 of yacc.c  */
#line 14079 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->ident= null_lex_str; (yyval.ha_read_mode)=(yyvsp[(1) - (1)].ha_read_mode); }
    break;

  case 2486:
/* Line 1792 of yacc.c  */
#line 14080 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->ident= (yyvsp[(1) - (2)].lex_str); (yyval.ha_read_mode)=(yyvsp[(2) - (2)].ha_read_mode); }
    break;

  case 2487:
/* Line 1792 of yacc.c  */
#line 14084 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2488:
/* Line 1792 of yacc.c  */
#line 14085 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2489:
/* Line 1792 of yacc.c  */
#line 14089 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2490:
/* Line 1792 of yacc.c  */
#line 14090 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2491:
/* Line 1792 of yacc.c  */
#line 14091 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RPREV;  }
    break;

  case 2492:
/* Line 1792 of yacc.c  */
#line 14092 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RLAST;  }
    break;

  case 2493:
/* Line 1792 of yacc.c  */
#line 14094 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            YYTHD->m_parser_state->m_yacc.m_ha_rkey_mode= (yyvsp[(1) - (1)].ha_rkey_mode);
          }
    break;

  case 2494:
/* Line 1792 of yacc.c  */
#line 14098 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(4) - (5)].item_list2));
            Lex->handler_insert_list= &(yyvsp[(4) - (5)].item_list2)->value;
            (yyval.ha_read_mode)= RKEY;
          }
    break;

  case 2495:
/* Line 1792 of yacc.c  */
#line 14106 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 2496:
/* Line 1792 of yacc.c  */
#line 14107 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 2497:
/* Line 1792 of yacc.c  */
#line 14108 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 2498:
/* Line 1792 of yacc.c  */
#line 14109 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 2499:
/* Line 1792 of yacc.c  */
#line 14110 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 2500:
/* Line 1792 of yacc.c  */
#line 14116 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_REVOKE; }
    break;

  case 2501:
/* Line 1792 of yacc.c  */
#line 14117 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2502:
/* Line 1792 of yacc.c  */
#line 14122 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->type= 0;
          }
    break;

  case 2503:
/* Line 1792 of yacc.c  */
#line 14127 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2504:
/* Line 1792 of yacc.c  */
#line 14137 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2505:
/* Line 1792 of yacc.c  */
#line 14147 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
    break;

  case 2506:
/* Line 1792 of yacc.c  */
#line 14151 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (5)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2507:
/* Line 1792 of yacc.c  */
#line 14159 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_GRANT; }
    break;

  case 2508:
/* Line 1792 of yacc.c  */
#line 14160 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2509:
/* Line 1792 of yacc.c  */
#line 14166 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->type= 0;
          }
    break;

  case 2510:
/* Line 1792 of yacc.c  */
#line 14172 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2511:
/* Line 1792 of yacc.c  */
#line 14183 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2512:
/* Line 1792 of yacc.c  */
#line 14193 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (6)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2515:
/* Line 1792 of yacc.c  */
#line 14207 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->grant == GLOBAL_ACLS &&
                lex->sql_command == SQLCOM_REVOKE)
              lex->sql_command= SQLCOM_REVOKE_ALL;
          }
    break;

  case 2516:
/* Line 1792 of yacc.c  */
#line 14214 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2521:
/* Line 1792 of yacc.c  */
#line 14232 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = SELECT_ACL;}
    break;

  case 2522:
/* Line 1792 of yacc.c  */
#line 14233 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2523:
/* Line 1792 of yacc.c  */
#line 14235 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = INSERT_ACL;}
    break;

  case 2524:
/* Line 1792 of yacc.c  */
#line 14236 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2525:
/* Line 1792 of yacc.c  */
#line 14238 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = UPDATE_ACL; }
    break;

  case 2526:
/* Line 1792 of yacc.c  */
#line 14239 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2527:
/* Line 1792 of yacc.c  */
#line 14241 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = REFERENCES_ACL;}
    break;

  case 2528:
/* Line 1792 of yacc.c  */
#line 14242 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2529:
/* Line 1792 of yacc.c  */
#line 14243 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= DELETE_ACL;}
    break;

  case 2530:
/* Line 1792 of yacc.c  */
#line 14244 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2531:
/* Line 1792 of yacc.c  */
#line 14245 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= INDEX_ACL;}
    break;

  case 2532:
/* Line 1792 of yacc.c  */
#line 14246 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_ACL;}
    break;

  case 2533:
/* Line 1792 of yacc.c  */
#line 14247 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_ACL;}
    break;

  case 2534:
/* Line 1792 of yacc.c  */
#line 14248 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= DROP_ACL;}
    break;

  case 2535:
/* Line 1792 of yacc.c  */
#line 14249 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= EXECUTE_ACL;}
    break;

  case 2536:
/* Line 1792 of yacc.c  */
#line 14250 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= RELOAD_ACL;}
    break;

  case 2537:
/* Line 1792 of yacc.c  */
#line 14251 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHUTDOWN_ACL;}
    break;

  case 2538:
/* Line 1792 of yacc.c  */
#line 14252 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= PROCESS_ACL;}
    break;

  case 2539:
/* Line 1792 of yacc.c  */
#line 14253 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= FILE_ACL;}
    break;

  case 2540:
/* Line 1792 of yacc.c  */
#line 14254 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2541:
/* Line 1792 of yacc.c  */
#line 14255 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_DB_ACL;}
    break;

  case 2542:
/* Line 1792 of yacc.c  */
#line 14256 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SUPER_ACL;}
    break;

  case 2543:
/* Line 1792 of yacc.c  */
#line 14257 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TMP_ACL;}
    break;

  case 2544:
/* Line 1792 of yacc.c  */
#line 14258 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= LOCK_TABLES_ACL; }
    break;

  case 2545:
/* Line 1792 of yacc.c  */
#line 14259 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= REPL_SLAVE_ACL; }
    break;

  case 2546:
/* Line 1792 of yacc.c  */
#line 14260 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= REPL_CLIENT_ACL; }
    break;

  case 2547:
/* Line 1792 of yacc.c  */
#line 14261 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_VIEW_ACL; }
    break;

  case 2548:
/* Line 1792 of yacc.c  */
#line 14262 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_VIEW_ACL; }
    break;

  case 2549:
/* Line 1792 of yacc.c  */
#line 14263 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_PROC_ACL; }
    break;

  case 2550:
/* Line 1792 of yacc.c  */
#line 14264 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_PROC_ACL; }
    break;

  case 2551:
/* Line 1792 of yacc.c  */
#line 14265 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_USER_ACL; }
    break;

  case 2552:
/* Line 1792 of yacc.c  */
#line 14266 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= EVENT_ACL;}
    break;

  case 2553:
/* Line 1792 of yacc.c  */
#line 14267 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= TRIGGER_ACL; }
    break;

  case 2554:
/* Line 1792 of yacc.c  */
#line 14268 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
    break;

  case 2555:
/* Line 1792 of yacc.c  */
#line 14272 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2556:
/* Line 1792 of yacc.c  */
#line 14273 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2559:
/* Line 1792 of yacc.c  */
#line 14283 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2560:
/* Line 1792 of yacc.c  */
#line 14293 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2561:
/* Line 1792 of yacc.c  */
#line 14303 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2562:
/* Line 1792 of yacc.c  */
#line 14316 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2563:
/* Line 1792 of yacc.c  */
#line 14331 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[(1) - (3)].lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2564:
/* Line 1792 of yacc.c  */
#line 14344 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2565:
/* Line 1792 of yacc.c  */
#line 14357 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(1) - (1)].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
    break;

  case 2566:
/* Line 1792 of yacc.c  */
#line 14369 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2567:
/* Line 1792 of yacc.c  */
#line 14374 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2568:
/* Line 1792 of yacc.c  */
#line 14382 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2569:
/* Line 1792 of yacc.c  */
#line 14387 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2570:
/* Line 1792 of yacc.c  */
#line 14395 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)=(yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->auth.str= (yyvsp[(4) - (4)].lex_str).str;
            (yyvsp[(1) - (4)].lex_user)->auth.length= (yyvsp[(4) - (4)].lex_str).length;
            (yyvsp[(1) - (4)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2571:
/* Line 1792 of yacc.c  */
#line 14403 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (5)].lex_user);
            (yyvsp[(1) - (5)].lex_user)->auth.str= (yyvsp[(5) - (5)].lex_str).str;
            (yyvsp[(1) - (5)].lex_user)->auth.length= (yyvsp[(5) - (5)].lex_str).length;
            (yyvsp[(1) - (5)].lex_user)->uses_identified_by_password_clause= true;
            if (Lex->sql_command == SQLCOM_ALTER_USER)
            {
              my_syntax_error(ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            else
              push_deprecated_warn(YYTHD, "IDENTIFIED BY PASSWORD",
                                   "IDENTIFIED WITH <plugin> AS <hash>");
          }
    break;

  case 2572:
/* Line 1792 of yacc.c  */
#line 14418 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->plugin.str= (yyvsp[(4) - (4)].lex_str).str;
            (yyvsp[(1) - (4)].lex_user)->plugin.length= (yyvsp[(4) - (4)].lex_str).length;
            (yyvsp[(1) - (4)].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[(1) - (4)].lex_user)->uses_identified_with_clause= true;
          }
    break;

  case 2573:
/* Line 1792 of yacc.c  */
#line 14426 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin.str= (yyvsp[(4) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->plugin.length= (yyvsp[(4) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->auth.str= (yyvsp[(6) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->auth.length= (yyvsp[(6) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_with_clause= true;
            (yyvsp[(1) - (6)].lex_user)->uses_authentication_string_clause= true;
          }
    break;

  case 2574:
/* Line 1792 of yacc.c  */
#line 14436 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin.str= (yyvsp[(4) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->plugin.length= (yyvsp[(4) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->auth.str= (yyvsp[(6) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->auth.length= (yyvsp[(6) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_with_clause= true;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2575:
/* Line 1792 of yacc.c  */
#line 14447 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (1)].lex_user);
            (yyvsp[(1) - (1)].lex_user)->auth= NULL_CSTR;
          }
    break;

  case 2576:
/* Line 1792 of yacc.c  */
#line 14455 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
    break;

  case 2580:
/* Line 1792 of yacc.c  */
#line 14469 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            String *new_str = new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,(yyvsp[(1) - (1)].lex_str).length,system_charset_info);
            if (new_str == NULL)
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.ptr(), new_str->ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= new LEX_COLUMN (*new_str,lex->which_columns);
              if (col == NULL)
                MYSQL_YYABORT;
              lex->columns.push_back(col);
            }
          }
    break;

  case 2582:
/* Line 1792 of yacc.c  */
#line 14498 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 2583:
/* Line 1792 of yacc.c  */
#line 14502 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 2584:
/* Line 1792 of yacc.c  */
#line 14506 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 2585:
/* Line 1792 of yacc.c  */
#line 14510 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
    break;

  case 2586:
/* Line 1792 of yacc.c  */
#line 14516 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2588:
/* Line 1792 of yacc.c  */
#line 14521 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2589:
/* Line 1792 of yacc.c  */
#line 14522 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2590:
/* Line 1792 of yacc.c  */
#line 14526 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2591:
/* Line 1792 of yacc.c  */
#line 14527 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2592:
/* Line 1792 of yacc.c  */
#line 14531 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2593:
/* Line 1792 of yacc.c  */
#line 14533 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 2594:
/* Line 1792 of yacc.c  */
#line 14539 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 2595:
/* Line 1792 of yacc.c  */
#line 14545 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 2596:
/* Line 1792 of yacc.c  */
#line 14551 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 2597:
/* Line 1792 of yacc.c  */
#line 14560 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
    break;

  case 2598:
/* Line 1792 of yacc.c  */
#line 14565 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2599:
/* Line 1792 of yacc.c  */
#line 14569 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2600:
/* Line 1792 of yacc.c  */
#line 14570 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2601:
/* Line 1792 of yacc.c  */
#line 14575 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2602:
/* Line 1792 of yacc.c  */
#line 14576 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2603:
/* Line 1792 of yacc.c  */
#line 14577 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2604:
/* Line 1792 of yacc.c  */
#line 14582 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2605:
/* Line 1792 of yacc.c  */
#line 14583 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2606:
/* Line 1792 of yacc.c  */
#line 14584 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2607:
/* Line 1792 of yacc.c  */
#line 14588 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2608:
/* Line 1792 of yacc.c  */
#line 14589 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2609:
/* Line 1792 of yacc.c  */
#line 14594 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2610:
/* Line 1792 of yacc.c  */
#line 14606 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2611:
/* Line 1792 of yacc.c  */
#line 14616 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2612:
/* Line 1792 of yacc.c  */
#line 14625 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 2613:
/* Line 1792 of yacc.c  */
#line 14634 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 2614:
/* Line 1792 of yacc.c  */
#line 14647 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.union_list)= NULL; }
    break;

  case 2616:
/* Line 1792 of yacc.c  */
#line 14653 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.union_list)= NEW_PTN PT_union_list((yyvsp[(2) - (3)].num), (yyvsp[(3) - (3)].select_init));
          }
    break;

  case 2617:
/* Line 1792 of yacc.c  */
#line 14659 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.node)= NULL; }
    break;

  case 2618:
/* Line 1792 of yacc.c  */
#line 14660 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].union_list); }
    break;

  case 2619:
/* Line 1792 of yacc.c  */
#line 14661 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].union_order_or_limit); }
    break;

  case 2620:
/* Line 1792 of yacc.c  */
#line 14665 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.node)= NULL; }
    break;

  case 2621:
/* Line 1792 of yacc.c  */
#line 14666 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].union_order_or_limit); }
    break;

  case 2622:
/* Line 1792 of yacc.c  */
#line 14671 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.union_order_or_limit)= NEW_PTN PT_union_order_or_limit((yyvsp[(1) - (1)].node));
          }
    break;

  case 2623:
/* Line 1792 of yacc.c  */
#line 14678 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_order_or_limit_order((yyvsp[(1) - (2)].order), (yyvsp[(2) - (2)].limit_clause));
          }
    break;

  case 2624:
/* Line 1792 of yacc.c  */
#line 14681 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].limit_clause); }
    break;

  case 2625:
/* Line 1792 of yacc.c  */
#line 14685 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2626:
/* Line 1792 of yacc.c  */
#line 14686 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2627:
/* Line 1792 of yacc.c  */
#line 14687 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 2628:
/* Line 1792 of yacc.c  */
#line 14692 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lex2)= NEW_PTN PT_query_specification_select((yyvsp[(1) - (3)].optimizer_hints), (yyvsp[(2) - (3)].select_part2_derived), (yyvsp[(3) - (3)].table_expression));
          }
    break;

  case 2629:
/* Line 1792 of yacc.c  */
#line 14697 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lex2)= NEW_PTN PT_query_specification_parenthesis((yyvsp[(2) - (4)].select_paren_derived), (yyvsp[(4) - (4)].node));
          }
    break;

  case 2631:
/* Line 1792 of yacc.c  */
#line 14705 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lex2)= NEW_PTN PT_query_expression_body_union((yyloc), (yyvsp[(1) - (4)].select_lex2), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].select_lex2));
          }
    break;

  case 2632:
/* Line 1792 of yacc.c  */
#line 14712 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: remove this semantic action (currently this removal
              adds reduce/reduce conflict)
            */
          }
    break;

  case 2633:
/* Line 1792 of yacc.c  */
#line 14719 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.subselect)= NEW_PTN PT_subselect((yyloc), (yyvsp[(2) - (2)].select_lex2));
          }
    break;

  case 2634:
/* Line 1792 of yacc.c  */
#line 14725 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= 0; }
    break;

  case 2636:
/* Line 1792 of yacc.c  */
#line 14731 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            (yyval.ulonglong_number)= (yyvsp[(1) - (2)].ulonglong_number) | (yyvsp[(2) - (2)].ulonglong_number);
          }
    break;

  case 2638:
/* Line 1792 of yacc.c  */
#line 14738 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
    break;

  case 2639:
/* Line 1792 of yacc.c  */
#line 14739 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
    break;

  case 2640:
/* Line 1792 of yacc.c  */
#line 14740 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
    break;

  case 2641:
/* Line 1792 of yacc.c  */
#line 14741 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
    break;

  case 2642:
/* Line 1792 of yacc.c  */
#line 14742 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
    break;

  case 2643:
/* Line 1792 of yacc.c  */
#line 14743 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
    break;

  case 2644:
/* Line 1792 of yacc.c  */
#line 14744 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= OPTION_FOUND_ROWS; }
    break;

  case 2645:
/* Line 1792 of yacc.c  */
#line 14745 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_ALL; }
    break;

  case 2646:
/* Line 1792 of yacc.c  */
#line 14756 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2647:
/* Line 1792 of yacc.c  */
#line 14758 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2648:
/* Line 1792 of yacc.c  */
#line 14760 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2662:
/* Line 1792 of yacc.c  */
#line 14793 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
    break;

  case 2663:
/* Line 1792 of yacc.c  */
#line 14807 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[(3) - (3)].lex_user));
          }
    break;

  case 2664:
/* Line 1792 of yacc.c  */
#line 14820 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2665:
/* Line 1792 of yacc.c  */
#line 14822 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2666:
/* Line 1792 of yacc.c  */
#line 14824 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2667:
/* Line 1792 of yacc.c  */
#line 14829 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; }
    break;

  case 2668:
/* Line 1792 of yacc.c  */
#line 14834 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 2669:
/* Line 1792 of yacc.c  */
#line 14836 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 2670:
/* Line 1792 of yacc.c  */
#line 14838 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
    break;

  case 2671:
/* Line 1792 of yacc.c  */
#line 14843 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
    break;

  case 2672:
/* Line 1792 of yacc.c  */
#line 14845 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
    break;

  case 2673:
/* Line 1792 of yacc.c  */
#line 14847 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
    break;

  case 2674:
/* Line 1792 of yacc.c  */
#line 14852 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
          }
    break;

  case 2676:
/* Line 1792 of yacc.c  */
#line 14869 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2678:
/* Line 1792 of yacc.c  */
#line 14875 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(1) - (1)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2679:
/* Line 1792 of yacc.c  */
#line 14880 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(3) - (3)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2680:
/* Line 1792 of yacc.c  */
#line 14887 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->parsing_options.allows_select_into= FALSE;
            lex->parsing_options.allows_select_procedure= FALSE;
          }
    break;

  case 2681:
/* Line 1792 of yacc.c  */
#line 14894 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            lex->create_view_select.str= const_cast<char *>((yylsp[(2) - (3)]).cpp.start);
            size_t len= (yylsp[(3) - (3)]).cpp.end - lex->create_view_select.str;
            void *create_view_select= thd->memdup(lex->create_view_select.str, len);
            lex->create_view_select.length= len;
            lex->create_view_select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(), &lex->create_view_select);
            lex->parsing_options.allows_variable= TRUE;
            lex->parsing_options.allows_select_into= TRUE;
            lex->parsing_options.allows_select_procedure= TRUE;
          }
    break;

  case 2682:
/* Line 1792 of yacc.c  */
#line 14912 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (Lex->current_select()->set_braces(0))
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              For statment as "CREATE VIEW v1 AS SELECT1 UNION SELECT2",
              parsing of Select query (SELECT1) is completed and UNION_CLAUSE
              is not yet parsed. So check for
              Lex->current_select()->master_unit()->first_select()->braces
              (as its done in "PT_select_init2::contextualize()) is not
              done here.
            */
          }
    break;

  case 2683:
/* Line 1792 of yacc.c  */
#line 14928 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].union_list) != NULL)
              CONTEXTUALIZE((yyvsp[(3) - (3)].union_list));
          }
    break;

  case 2684:
/* Line 1792 of yacc.c  */
#line 14933 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(4) - (4)].node) != NULL)
              CONTEXTUALIZE((yyvsp[(4) - (4)].node));
          }
    break;

  case 2685:
/* Line 1792 of yacc.c  */
#line 14940 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->current_select()->set_braces(true);
          }
    break;

  case 2686:
/* Line 1792 of yacc.c  */
#line 14944 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Select))
              MYSQL_YYABORT;
          }
    break;

  case 2688:
/* Line 1792 of yacc.c  */
#line 14953 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->current_select()->table_list.save_and_clear(&Lex->save_list);
          }
    break;

  case 2689:
/* Line 1792 of yacc.c  */
#line 14957 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(3) - (3)].select_part2));

            Lex->current_select()->table_list.push_front(&Lex->save_list);
          }
    break;

  case 2690:
/* Line 1792 of yacc.c  */
#line 14966 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_NONE; }
    break;

  case 2691:
/* Line 1792 of yacc.c  */
#line 14968 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2692:
/* Line 1792 of yacc.c  */
#line 14970 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2693:
/* Line 1792 of yacc.c  */
#line 14972 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_LOCAL; }
    break;

  case 2694:
/* Line 1792 of yacc.c  */
#line 14983 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
    break;

  case 2695:
/* Line 1792 of yacc.c  */
#line 14985 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
    break;

  case 2696:
/* Line 1792 of yacc.c  */
#line 14990 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name.str= NULL;
              (yyval.trg_characteristics).anchor_trigger_name.length= 0;
            }
    break;

  case 2697:
/* Line 1792 of yacc.c  */
#line 14997 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[(1) - (2)].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= (yyvsp[(2) - (2)].lex_str);
            }
    break;

  case 2698:
/* Line 1792 of yacc.c  */
#line 15014 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            lex->raw_trg_on_table_name_begin= (yylsp[(5) - (10)]).raw.start;
            lex->raw_trg_on_table_name_end= (yylsp[(7) - (10)]).raw.start;

            if ((yylsp[(10) - (10)]).is_empty())
            {
              /*
                @10.is_empty() is true when a clause PRECEDES/FOLLOWS is absent.
              */
              lex->trg_ordering_clause_begin= NULL;
              lex->trg_ordering_clause_end= NULL;
            }
            else
            {
              lex->trg_ordering_clause_begin= (yylsp[(10) - (10)]).cpp.start;
              lex->trg_ordering_clause_end= (yylsp[(10) - (10)]).cpp.end;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_TRIGGER, (yyvsp[(2) - (10)].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[(3) - (10)].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[(4) - (10)].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[(10) - (10)].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[(10) - (10)].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[(1) - (10)]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[(6) - (10)]).cpp.start);
            lex->ident.length= (yylsp[(8) - (10)]).cpp.start - (yylsp[(6) - (10)]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[(2) - (10)].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            sp->set_body_start(thd, (yylsp[(9) - (10)]).cpp.end);
          }
    break;

  case 2699:
/* Line 1792 of yacc.c  */
#line 15064 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(6) - (12)].table),
                                                    (LEX_STRING*) 0,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
    break;

  case 2700:
/* Line 1792 of yacc.c  */
#line 15099 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(3) - (7)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(3) - (7)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[(2) - (7)]).cpp.start;
            lex->udf.name = (yyvsp[(3) - (7)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(5) - (7)].num);
            lex->udf.dl=(yyvsp[(7) - (7)].lex_str).str;
          }
    break;

  case 2701:
/* Line 1792 of yacc.c  */
#line 15117 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(2) - (6)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(2) - (6)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[(1) - (6)]).cpp.start;
            lex->udf.name = (yyvsp[(2) - (6)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(4) - (6)].num);
            lex->udf.dl=(yyvsp[(6) - (6)].lex_str).str;
          }
    break;

  case 2702:
/* Line 1792 of yacc.c  */
#line 15139 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).cpp.start;
            lex->spname= (yyvsp[(2) - (3)].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[(3) - (3)]).cpp.end);
          }
    break;

  case 2703:
/* Line 1792 of yacc.c  */
#line 15163 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(6) - (6)]).cpp.start);
          }
    break;

  case 2704:
/* Line 1792 of yacc.c  */
#line 15167 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { /* $9 */
            LEX *lex= Lex;
            lex->charset= NULL;
            lex->length= lex->dec= NULL;
            lex->interval_list.empty();
            lex->type= 0;
            lex->gcol_info= 0;
          }
    break;

  case 2705:
/* Line 1792 of yacc.c  */
#line 15176 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if (((yyvsp[(10) - (10)].num) == MYSQL_TYPE_STRING || (yyvsp[(10) - (10)].num) == MYSQL_TYPE_VARCHAR)
                && (lex->type & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (fill_field_definition(YYTHD, sp,
                                      (enum enum_field_types) (yyvsp[(10) - (10)].num),
                                      &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2706:
/* Line 1792 of yacc.c  */
#line 15199 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
    break;

  case 2707:
/* Line 1792 of yacc.c  */
#line 15207 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(thd, & sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER(ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
    break;

  case 2708:
/* Line 1792 of yacc.c  */
#line 15266 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[(2) - (2)]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_PROCEDURE, (yyvsp[(2) - (2)].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
    break;

  case 2709:
/* Line 1792 of yacc.c  */
#line 15286 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[(4) - (4)]).cpp.end);
          }
    break;

  case 2710:
/* Line 1792 of yacc.c  */
#line 15291 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(7) - (7)]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2711:
/* Line 1792 of yacc.c  */
#line 15299 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
    break;

  case 2712:
/* Line 1792 of yacc.c  */
#line 15307 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
    break;

  case 2713:
/* Line 1792 of yacc.c  */
#line 15321 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_start((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2714:
/* Line 1792 of yacc.c  */
#line 15326 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_end((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2715:
/* Line 1792 of yacc.c  */
#line 15331 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_prepare((yyvsp[(3) - (3)].xid));
          }
    break;

  case 2716:
/* Line 1792 of yacc.c  */
#line 15336 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_commit((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2717:
/* Line 1792 of yacc.c  */
#line 15341 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_rollback((yyvsp[(3) - (3)].xid));
          }
    break;

  case 2718:
/* Line 1792 of yacc.c  */
#line 15346 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_recover((yyvsp[(3) - (3)].is_not_empty));
          }
    break;

  case 2719:
/* Line 1792 of yacc.c  */
#line 15353 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2720:
/* Line 1792 of yacc.c  */
#line 15354 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2721:
/* Line 1792 of yacc.c  */
#line 15358 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (1)].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[(1) - (1)].string)->ptr(), (yyvsp[(1) - (1)].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
    break;

  case 2722:
/* Line 1792 of yacc.c  */
#line 15367 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[(3) - (3)].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[(1) - (3)].string)->ptr(), (yyvsp[(1) - (3)].string)->length(), (yyvsp[(3) - (3)].string)->ptr(), (yyvsp[(3) - (3)].string)->length());
            (yyval.xid)= xid;
          }
    break;

  case 2723:
/* Line 1792 of yacc.c  */
#line 15377 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            // check for overwflow of xid format id 
            bool format_id_overflow_detected= ((yyvsp[(5) - (5)].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[(3) - (5)].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[(5) - (5)].ulong_num), (yyvsp[(1) - (5)].string)->ptr(), (yyvsp[(1) - (5)].string)->length(), (yyvsp[(3) - (5)].string)->ptr(), (yyvsp[(3) - (5)].string)->length());
            (yyval.xid)= xid;
          }
    break;

  case 2724:
/* Line 1792 of yacc.c  */
#line 15394 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2725:
/* Line 1792 of yacc.c  */
#line 15395 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2726:
/* Line 1792 of yacc.c  */
#line 15399 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2727:
/* Line 1792 of yacc.c  */
#line 15400 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_JOIN;        }
    break;

  case 2728:
/* Line 1792 of yacc.c  */
#line 15401 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_RESUME;      }
    break;

  case 2729:
/* Line 1792 of yacc.c  */
#line 15405 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2730:
/* Line 1792 of yacc.c  */
#line 15406 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
    break;

  case 2731:
/* Line 1792 of yacc.c  */
#line 15411 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2732:
/* Line 1792 of yacc.c  */
#line 15413 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_SUSPEND;     }
    break;

  case 2733:
/* Line 1792 of yacc.c  */
#line 15415 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
    break;

  case 2734:
/* Line 1792 of yacc.c  */
#line 15420 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new Sql_cmd_install_plugin((yyvsp[(3) - (5)].lex_str), (yyvsp[(5) - (5)].lex_str));
          }
    break;

  case 2735:
/* Line 1792 of yacc.c  */
#line 15429 "/export/home/pb2/build/sb_0-17781452-1454369753.15/mysql-5.7.11-release-export-8993117_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new Sql_cmd_uninstall_plugin((yyvsp[(3) - (3)].lex_str));
          }
    break;


/* Line 1792 of yacc.c  */
#line 40543 "/export/home/pb2/build/sb_0-17781452-1454369753.15/dist_GPL/sql/sql_yacc.cc"
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, YYTHD);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, YYTHD);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD);
    }
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, YYTHD);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


